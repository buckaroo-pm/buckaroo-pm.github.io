{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport Layout from '/home/gaetano/projects/buckaroo-pm.github.io/layouts/index';\nexport var frontMatter = {\n  title: 'Goodbye JSON, Hello TOML',\n  created: '2019-02-11T22:00:00.000Z',\n  author: 'Team Buckaroo',\n  summary: 'For the next version of Buckaroo, we wanted to make improvements to the manifest format. Old versions of Buckaroo used JSON for the manifest and lock-files. This choice was not made very consciously, but at the time it seemed reasonable...',\n  banner: 'https://images.unsplash.com/photo-1590918203039-7ce23e042634?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MTI2fHxjbGVhbnxlbnwwfDB8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\n  __resourcePath: 'blog/goodbye-json-hello-toml.md',\n  __scans: {},\n  layout: 'index'\n};\nvar layoutProps = {\n  frontMatter: frontMatter\n};\nvar MDXLayout = Layout;\nexport default function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _objectSpread(_objectSpread(_objectSpread({}, layoutProps), props), {}, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"For the next version of Buckaroo, we wanted to make improvements to the manifest format. Old versions of Buckaroo used JSON for the manifest and lock-files. This choice was not made very consciously, but at the time it seemed reasonable:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Yarn and NPM (arguably the most successful language package managers) both use JSON.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"There is a JSON parser for literally every language (and usually \", mdx(\"a\", _objectSpread({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/buckaroo-pm/dropbox-json11\"\n  }), \"more\"), \" \", mdx(\"a\", _objectSpread({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/buckaroo-pm/open-source-parsers-jsoncpp\"\n  }), \"than\"), \" \", mdx(\"a\", _objectSpread({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/buckaroo-pm/nlohmann-json\"\n  }), \"one\"), \").\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Everyone is familiar with JSON.\")), mdx(\"p\", null, \"Over time, we've come to regret this decision:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JSON is tedious to edit by hand, since objects must be closed with curly braces.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JSON does not support comments.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Large JSON files can be difficult to read.\")), mdx(\"p\", null, \"So we started looking for an alternative.\"), mdx(\"p\", null, \"Amoungst newer package managers (Cargo, Dep), there is a clear winner: TOML. Tom's Obvious, Minimal Language (yes, the name is a tad egotistical)...\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"... aims to be a minimal configuration file format that's easy to read due to obvious semantics. TOML is designed to map unambiguously to a hash table. TOML should be easy to parse into data structures in a wide variety of languages.\")), mdx(\"p\", null, \"Already we have found it more convenient when tweaking packages over on \", mdx(\"a\", _objectSpread({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/buckaroo-pm\"\n  }), \"buckaroo-pm\"), \". Often the TOML is a bit longer, but it's so much easier to read and edit!\"), mdx(\"p\", null, \"Here's a side-by-side comparison:\"), mdx(\"pre\", _objectSpread({}, {\n    \"className\": \"language-json\"\n  }), mdx(\"code\", _objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token property\"\n  }), \"\\\"name\\\"\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"satori\\\"\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n  \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token property\"\n  }), \"\\\"dependencies\\\"\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token property\"\n  }), \"\\\"libuv/libuv\\\"\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"1.11.0\\\"\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n    \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token property\"\n  }), \"\\\"google/gtest\\\"\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"1.8.0\\\"\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n    \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token property\"\n  }), \"\\\"nodejs/http-parser\\\"\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"2.7.1\\\"\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n    \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token property\"\n  }), \"\\\"madler/zlib\\\"\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"1.2.11\\\"\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n    \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token property\"\n  }), \"\\\"loopperfect/neither\\\"\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"0.4.0\\\"\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n    \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token property\"\n  }), \"\\\"loopperfect/r3\\\"\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"2.0.0\\\"\"), \"\\n  \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\")), mdx(\"p\", null, \"And the TOML:\"), mdx(\"pre\", _objectSpread({}, {\n    \"className\": \"language-toml\"\n  }), mdx(\"code\", _objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-toml\"\n  }), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key property\"\n  }), \"targets\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"=\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"//:satori\\\"\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \"\\n\\n\", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token table class-name\"\n  }), \"dependency\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \"\\n\", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key property\"\n  }), \"package\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"=\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"github.com/buckaroo-pm/google-googletest\\\"\"), \"\\n\", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key property\"\n  }), \"version\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"=\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"branch=master\\\"\"), \"\\n\", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key property\"\n  }), \"private\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"=\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token boolean\"\n  }), \"true\"), \"\\n\\n\", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token table class-name\"\n  }), \"dependency\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \"\\n\", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key property\"\n  }), \"package\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"=\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"github.com/buckaroo-pm/libuv\\\"\"), \"\\n\", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key property\"\n  }), \"version\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"=\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"branch=v1.x\\\"\"), \"\\n\\n\", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token table class-name\"\n  }), \"dependency\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \"\\n\", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key property\"\n  }), \"package\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"=\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"github.com/buckaroo-pm/madler-zlib\\\"\"), \"\\n\", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key property\"\n  }), \"version\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"=\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"branch=master\\\"\"), \"\\n\\n\", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token table class-name\"\n  }), \"dependency\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \"\\n\", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key property\"\n  }), \"package\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"=\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"github.com/buckaroo-pm/nodejs-http-parser\\\"\"), \"\\n\", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key property\"\n  }), \"version\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"=\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"branch=master\\\"\"), \"\\n\\n\", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token table class-name\"\n  }), \"dependency\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \"\\n\", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key property\"\n  }), \"package\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"=\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"github.com/loopperfect/neither\\\"\"), \"\\n\", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key property\"\n  }), \"version\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"=\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"branch=master\\\"\"), \"\\n\\n\", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token table class-name\"\n  }), \"dependency\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \"\\n\", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key property\"\n  }), \"package\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"=\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"github.com/loopperfect/r3\\\"\"), \"\\n\", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key property\"\n  }), \"version\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"=\"), \" \", mdx(\"span\", _objectSpread({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"branch=master\\\"\"), \"\\n\")), mdx(\"p\", null, \"But the biggest improvement is when fixing a Git merge. Unlike JSON, each line of TOML is largely self-contained. Without having to worry about trailing commas or closing braces, Git will get things right far more often. This is a huge relief when updating lock-files.\"), mdx(\"p\", null, \"TOML files are use in \", mdx(\"a\", _objectSpread({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/LoopPerfect/buckaroo/\"\n  }), \"Buckaroo\"), \" v2 upwards. Let us know what you think! \\uD83D\\uDC96\"));\n}\n;\nMDXContent.isMDXComponent = true;","map":null,"metadata":{},"sourceType":"module"}