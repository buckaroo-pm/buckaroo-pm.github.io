{
  "packageName": "buckaroo-pm/bulletphysics-bullet3",
  "name": "bulletphysics/bullet3",
  "licence": "NOASSERTION",
  "description": "Bullet Physics SDK: real-time collision detection and multi-physics simulation for VR, games, visual effects, robotics, machine learning etc.",
  "readme": "[![Travis Build Status](https://api.travis-ci.org/bulletphysics/bullet3.png?branch=master)](https://travis-ci.org/bulletphysics/bullet3)\r\n[![Appveyor Build status](https://ci.appveyor.com/api/projects/status/6sly9uxajr6xsstq)](https://ci.appveyor.com/project/erwincoumans/bullet3)\r\n\r\n# Bullet Physics SDK\r\n\r\nThis is the official C++ source code repository of the Bullet Physics SDK: real-time collision detection and multi-physics simulation for VR, games, visual effects, robotics, machine learning etc.\r\n\r\nNew in Bullet 2.85: pybullet Python bindings, improved support for robotics and VR. Use pip install pybullet and see [PyBullet Quickstart Guide](https://docs.google.com/document/d/10sXEhzFRSnvFcl3XxNGhnD4N2SedqwdAvK3dsihxVUA/edit#heading=h.2ye70wns7io3).\r\n\r\nThe Bullet 2 API will stay default and up-to-date while slowly moving to a new API.\r\nThe steps towards a new API is in a nutshell:\r\n\r\n1. The old Bullet2 demos are being merged into the examples/ExampleBrowser\r\n2. A new physics-engine agnostic C-API is created, see examples/SharedMemory/PhysicsClientC_API.h\r\n3. Python bindings in pybullet are on top of this C-API, see examples/pybullet\r\n4. A Virtual Reality sandbox using openvr for HTC Vive and Oculus Rift is available\r\n5. The OpenCL examples in the ExampleBrowser can be enabled using --enable_experimental_opencl\r\n\r\nYou can still use svn or svn externals using the github git repository: use svn co https://github.com/bulletphysics/bullet3/trunk\r\n\r\n## Requirements for Bullet 2\r\n\r\nA C++ compiler for C++ 2003. The library is tested on Windows, Linux, Mac OSX, iOS, Android,\r\nbut should likely work on any platform with C++ compiler. \r\nSome optional demos require OpenGL 2 or OpenGL 3, there are some non-graphical demos and unit tests too.\r\n\r\n## Contributors and Coding Style information\r\n\r\nhttps://docs.google.com/document/d/1u9vyzPtrVoVhYqQOGNWUgjRbfwfCdIts_NzmvgiJ144/edit\r\n\r\n## Requirements for experimental OpenCL GPGPU support\r\n\r\nThe entire collision detection and rigid body dynamics can be executed on the GPU.\r\n\r\nA high-end desktop GPU, such as an AMD Radeon 7970 or NVIDIA GTX 680 or better.\r\nWe succesfully tested the software under Windows, Linux and Mac OSX.\r\nThe software currently doesn't work on OpenCL CPU devices. It might run\r\non a laptop GPU but performance will not likely be very good. Note that\r\noften an OpenCL drivers fails to compile a kernel. Some unit tests exist to\r\ntrack down the issue, but more work is required to cover all OpenCL kernels.\r\n\r\n## License\r\n\r\nAll source code files are licensed under the permissive zlib license\r\n(http://opensource.org/licenses/Zlib) unless marked differently in a particular folder/file.\r\n\r\n## Build instructions for Bullet using premake. You can also use cmake instead.\r\n\r\n**Windows**\r\n\r\nClick on build_visual_studio_vr_pybullet_double.bat and open build3/vs2010/0MySolution.sln\r\nWhen asked, convert the projects to a newer version of Visual Studio.\r\nIf you installed Python in the C:\\ root directory, the batch file should find it automatically.\r\nOtherwise, edit this batch file to choose where Python include/lib directories are located.\r\n\r\n**Windows Virtual Reality sandbox for HTC Vive and Oculus Rift**\r\n\r\nBuild and run the App_SharedMemoryPhysics_VR project, preferably in Release/optimized build.\r\nYou can connect from Python pybullet to the sandbox using:\r\n\r\n```\r\nimport pybullet as p\r\np.connect(p.SHARED_MEMORY) #or (p.TCP, \"localhost\", 6667) or (p.UDP, \"192.168.86.10\",1234)\r\n```\r\n\r\n**Linux and Mac OSX gnu make**\r\n\r\nMake sure cmake is installed (sudo apt-get install cmake, brew install cmake, or https://cmake.org)\r\n\r\nIn a terminal type:\r\n\r\n\t./build_cmake_pybullet_double.sh\r\n\r\nThis script will invoke cmake and build in the build_cmake directory. You can find pybullet in Bullet/examples/pybullet.\r\nThe BulletExampleBrowser binary will be in Bullet/examples/ExampleBrowser.\r\n\r\nYou can also build Bullet using premake. There are premake executables in the build3 folder.\r\nDepending on your system (Linux 32bit, 64bit or Mac OSX) use one of the following lines\r\nUsing premake:\r\n```\r\n\tcd build3\r\n\t./premake4_linux --double gmake\r\n\t./premake4_linux64 --double gmake\r\n\t./premake4_osx --double --enable_pybullet gmake\r\n```\r\nThen\r\n```\r\n\tcd gmake\r\n\tmake\r\n```\r\n\r\nNote that on Linux, you need to use cmake to build pybullet, since the compiler has issues of mixing shared and static libraries.\r\n\r\n**Mac OSX Xcode**\r\n\t\r\nClick on build3/xcode4.command or in a terminal window execute\r\n\t\r\n\t./premake_osx xcode4\r\n\r\n## Usage\r\n\r\nThe App_ExampleBrowser executables will be located in the bin folder.\r\nYou can just run it though a terminal/command prompt, or by clicking it.\r\n\r\n\r\n```\r\n[--start_demo_name=\"Demo Name\"]     Start with a selected demo  \r\n[--mp4=moviename.mp4]               Create a mp4 movie of the window, requires ffmpeg installed\r\n[--mouse_move_multiplier=0.400000]  Set the mouse move sensitivity\r\n[--mouse_wheel_multiplier=0.01]     Set the mouse wheel sensitivity\r\n[--background_color_red= 0.9]       Set the red component for background color. Same for green and blue\r\n[--fixed_timestep= 0.0]             Use either a real-time delta time (0.0) or a fixed step size (0.016666)\r\n```\r\n\r\nYou can use mouse picking to grab objects. When holding the ALT or CONTROL key, you have Maya style camera mouse controls.\r\nPress F1 to create a series of screenshots. Hit ESCAPE to exit the demo app.\r\n\r\nCheck out the docs folder and the Bullet physics forums for further information.\r\n",
  "versions": [
    {
      "ref": "master",
      "manifest": "targets = [ '//:bullet3' ]\n",
      "lockFile": "",
      "buck": "load('//:subdir_glob.bzl', 'subdir_glob')\n\ncxx_library(\n  name = 'bullet3',\n  header_namespace = '',\n  exported_headers = subdir_glob([\n    ('src', '**/*.h'),\n  ]),\n  srcs = glob([\n    'src/**/*.cpp',\n  ]),\n  visibility = [\n    'PUBLIC'\n  ]\n)\n",
      "bazel": "",
      "deps": [],
      "lock": []
    }
  ],
  "updated": "2019-01-24T16:04:39Z",
  "updatedUpstream": "2021-01-13T21:59:59Z",
  "contributors": [
    {
      "login": "MichaelMcDonnell",
      "avatarUrl": "https://avatars0.githubusercontent.com/u/20253?u=6d02fc1ce0ee8fd6fbee4960b78203ac6bdff672&v=4"
    },
    {
      "login": "jl",
      "avatarUrl": "https://avatars3.githubusercontent.com/u/26446?u=f057dc65c5235d01aaa0c5cba77419a82cb5959c&v=4"
    },
    {
      "login": "ajshort",
      "avatarUrl": "https://avatars2.githubusercontent.com/u/31570?v=4"
    },
    {
      "login": "radarsat1",
      "avatarUrl": "https://avatars0.githubusercontent.com/u/66805?u=36d18c0b90b221c0ff827b6e3f19a3532f639de1&v=4"
    },
    {
      "login": "erikogenvik",
      "avatarUrl": "https://avatars0.githubusercontent.com/u/89184?v=4"
    },
    {
      "login": "WilliamTambellini",
      "avatarUrl": "https://avatars0.githubusercontent.com/u/109458?u=49ab147bc17e13ce4935b9b130e85e44be35ae9c&v=4"
    },
    {
      "login": "sinbad",
      "avatarUrl": "https://avatars0.githubusercontent.com/u/142735?v=4"
    },
    {
      "login": "RicoP",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/162828?u=d47ce6d8b719153b0e740122b0cc6c8bb5f9a02b&v=4"
    },
    {
      "login": "ComSubVie",
      "avatarUrl": "https://avatars0.githubusercontent.com/u/166217?v=4"
    },
    {
      "login": "huffman",
      "avatarUrl": "https://avatars2.githubusercontent.com/u/167747?v=4"
    },
    {
      "login": "jviereck",
      "avatarUrl": "https://avatars3.githubusercontent.com/u/191719?u=ef883f027aedd76b352215553f5c84d282ad714c&v=4"
    },
    {
      "login": "CapsAdmin",
      "avatarUrl": "https://avatars0.githubusercontent.com/u/204157?u=11879458cb0dc0f9f48cb5deb03d218bb566285b&v=4"
    },
    {
      "login": "juj",
      "avatarUrl": "https://avatars2.githubusercontent.com/u/225351?v=4"
    },
    {
      "login": "EmilNorden",
      "avatarUrl": "https://avatars2.githubusercontent.com/u/227786?v=4"
    },
    {
      "login": "samhocevar",
      "avatarUrl": "https://avatars0.githubusercontent.com/u/245089?u=3bdd6a36b91d0fc859040a47f0b5fac441f513ab&v=4"
    },
    {
      "login": "mendsley",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/260055?u=decf3c57e68293dbfc51f0de775e07e396005da6&v=4"
    },
    {
      "login": "sippeangelo",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/262378?v=4"
    },
    {
      "login": "yurivict",
      "avatarUrl": "https://avatars2.githubusercontent.com/u/271906?v=4"
    },
    {
      "login": "cameronwhite",
      "avatarUrl": "https://avatars3.githubusercontent.com/u/303951?v=4"
    },
    {
      "login": "DarkDefender",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/312503?v=4"
    },
    {
      "login": "dictoon",
      "avatarUrl": "https://avatars0.githubusercontent.com/u/321290?u=aae6438b50c4716f3d61fc3a05f094674774eba1&v=4"
    },
    {
      "login": "JayFoxRox",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/360330?v=4"
    },
    {
      "login": "asmaloney",
      "avatarUrl": "https://avatars0.githubusercontent.com/u/391371?v=4"
    },
    {
      "login": "stolk",
      "avatarUrl": "https://avatars2.githubusercontent.com/u/455280?v=4"
    },
    {
      "login": "YungKC",
      "avatarUrl": "https://avatars2.githubusercontent.com/u/486644?v=4"
    }
  ],
  "fundingLinks": [],
  "contactLinks": [],
  "stars": 7417,
  "forks": 1989,
  "topics": [
    "simulation",
    "robotics",
    "kinematics",
    "virtual-reality",
    "reinforcement-learning",
    "computer-animation",
    "game-development",
    "simulator",
    "pybullet"
  ]
}