{
  "packageName": "buckaroo-pm/check",
  "name": "libcheck/check",
  "licence": "LGPL-2.1",
  "description": "A unit testing framework for C",
  "readme": "# About Check\n\n[![Travis Build Status](https://travis-ci.org/libcheck/check.svg?branch=master)](https://travis-ci.org/libcheck/check)\n[![Appveyor Build Status](https://ci.appveyor.com/api/projects/status/github/libcheck/check?svg=true)](https://ci.appveyor.com/project/libcheck/check/branch/master)\n\n\nCheck is a unit testing framework for C. It features a simple interface\nfor defining unit tests, putting little in the way of the\ndeveloper. Tests are run in a separate address space, so Check can\ncatch both assertion failures and code errors that cause segmentation\nfaults or other signals. The output from unit tests can be used within\nsource code editors and IDEs.\n\nSee https://libcheck.github.io/check for more information, including a\ntutorial.  The tutorial is also available as `info check`.\n\n# Installation\n\nCheck has the following dependencies:\n\n* [automake](https://www.gnu.org/software/automake/)-1.9.6 (1.11.3 on OS X if you are using /usr/bin/ar)\n* [autoconf](https://www.gnu.org/software/autoconf/)-2.59\n* [libtool](https://www.gnu.org/software/libtool/)-1.5.22\n* [pkg-config](https://www.freedesktop.org/wiki/Software/pkg-config/)-0.20\n* [texinfo](https://www.gnu.org/software/texinfo/)-4.7 (for documentation)\n* tetex-bin (or any texinfo-compatible TeX installation, for documentation)\n* POSIX [sed](https://en.wikipedia.org/wiki/Sed)\n\nThe versions specified may be higher than those actually needed.\n\n## autoconf\n\n    $ autoreconf --install\n    $ ./configure\n    $ make\n    $ make check\n    $ make install\n    $ sudo ldconfig\n\nin this directory to set everything up.  autoreconf calls all of the\nnecessary tools for you, like autoconf, automake, autoheader, etc.  If\nyou ever change something during development, run autoreconf again\n(without --install), and it will perform the minimum set of actions\nnecessary.  Check is installed to `/usr/local/lib` by default. ldconfig rebuilds\nthe linker cache so that newly installed library file is included in the cache.\n\n## cmake\n\n    $ mkdir build\n    $ cd build\n    $ cmake ../\n    $ make\n    $ CTEST_OUTPUT_ON_FAILURE=1 make test\n\n# Linking against Check\n\nCheck uses variadic macros in check.h, and the strict C90 options for\ngcc will complain about this.  In gcc 4.0 and above you can turn this\noff explicitly with `-Wno-variadic-macros`.  In a future API it would be\nnice to eliminate these macros.\n",
  "versions": [
    {
      "ref": "master",
      "manifest": "targets = [ \"//:check\" ]",
      "lockFile": "manifest = \"e39e8d4516cb4c623ffa02e9aea455db7a1168bc1599fabff1a2aa54b4bb1848\"\n\n",
      "buck": "load('//:subdir_glob.bzl', 'subdir_glob')\n\ngenrule(\n  name = 'cmake',\n  out = 'out',\n  srcs = glob([\n    '*.ac',\n    '*.txt',\n    'cmake/**/*.cmake',\n    'cmake/**/*.in',\n    'lib/*.c',\n    'lib/*.h',\n    'lib/*.txt',\n    'src/*.c',\n    'src/*.h',\n    'src/*.in',\n    'src/*.txt',\n  ]),\n  cmd = ' && '.join([\n    'mkdir -p $OUT',\n    'cd $OUT',\n    'cmake -DCHECK_ENABLE_TESTS=OFF $SRCDIR',\n  ]),\n)\n\ngenrule(\n  name = 'config-h',\n  out = 'config.h',\n  cmd = 'cp $(location :cmake)/config.h $OUT',\n)\n\ngenrule(\n  name = 'check-h',\n  out = 'check.h',\n  cmd = 'cp $(location :cmake)/src/check.h $OUT',\n)\n\ngenrule(\n  name = 'check-stdint-h',\n  out = 'check_stdint.h',\n  cmd = 'cp $(location :cmake)/check_stdint.h $OUT',\n)\n\ncxx_library(\n  name = 'check',\n  header_namespace = '',\n  exported_headers = {\n    'check.h': ':check-h',\n    'check_stdint.h': ':check-stdint-h',\n  },\n  headers = subdir_glob([\n    ('src', '*.h'),\n    ('lib', '*.h'),\n  ]),\n  srcs = glob([\n    'src/*.c',\n    'lib/*.c',\n  ]),\n  visibility = [\n    'PUBLIC',\n  ],\n)\n",
      "bazel": "",
      "deps": [],
      "lock": []
    }
  ],
  "updated": "2019-01-10T14:46:03Z",
  "updatedUpstream": "2021-01-02T07:07:49Z",
  "contributors": [
    {
      "login": "njh",
      "avatarUrl": "https://avatars2.githubusercontent.com/u/38734?v=4"
    },
    {
      "login": "prusnak",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/42201?u=24bd00b1856db9374d16f863f8f66fabe0d93341&v=4"
    },
    {
      "login": "nirbheek",
      "avatarUrl": "https://avatars0.githubusercontent.com/u/75801?v=4"
    },
    {
      "login": "cleishm",
      "avatarUrl": "https://avatars2.githubusercontent.com/u/79651?u=e0e09b1e7dfc2a9f8c617383a4e34e45237296a4&v=4"
    },
    {
      "login": "filbranden",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/106037?u=e1cb11d788abacdfcde30670bcb5bf4fab2d05f1&v=4"
    },
    {
      "login": "ckdarby",
      "avatarUrl": "https://avatars0.githubusercontent.com/u/220283?v=4"
    },
    {
      "login": "lhanson",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/273533?v=4"
    },
    {
      "login": "blueness",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/297301?v=4"
    },
    {
      "login": "jd-boyd",
      "avatarUrl": "https://avatars2.githubusercontent.com/u/361465?v=4"
    },
    {
      "login": "gsauthof",
      "avatarUrl": "https://avatars0.githubusercontent.com/u/464832?v=4"
    },
    {
      "login": "Earnestly",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/521538?u=690f5fd5343b1832d6bcf3aba8aa0f4fe1bd19fc&v=4"
    },
    {
      "login": "walac",
      "avatarUrl": "https://avatars3.githubusercontent.com/u/611309?u=02454f0fa23619873e915525efc582ba4b7e939e&v=4"
    },
    {
      "login": "zhuhaow",
      "avatarUrl": "https://avatars2.githubusercontent.com/u/1287724?v=4"
    },
    {
      "login": "viktornonov",
      "avatarUrl": "https://avatars2.githubusercontent.com/u/1288541?v=4"
    },
    {
      "login": "jnpkrn",
      "avatarUrl": "https://avatars2.githubusercontent.com/u/1391681?v=4"
    },
    {
      "login": "vtorri",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/1422401?v=4"
    },
    {
      "login": "hvarga",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/2044225?u=391091b5d4b5c42e8bcea4412967e5083e4376d3&v=4"
    },
    {
      "login": "nmeum",
      "avatarUrl": "https://avatars2.githubusercontent.com/u/2326560?v=4"
    },
    {
      "login": "neheb",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/2918873?v=4"
    },
    {
      "login": "ExcaliburZero",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/4276196?u=a7b80baf33cb370ddbb998e0c4292f9f6b2cb8f8&v=4"
    },
    {
      "login": "mickbeaver",
      "avatarUrl": "https://avatars2.githubusercontent.com/u/4925235?v=4"
    },
    {
      "login": "mikkoi",
      "avatarUrl": "https://avatars0.githubusercontent.com/u/5240857?v=4"
    },
    {
      "login": "brarcher",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/5264535?v=4"
    },
    {
      "login": "bel2125",
      "avatarUrl": "https://avatars2.githubusercontent.com/u/5619191?v=4"
    },
    {
      "login": "jamesjer",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/5866306?v=4"
    }
  ],
  "fundingLinks": [],
  "contactLinks": [],
  "stars": 695,
  "forks": 146,
  "topics": []
}