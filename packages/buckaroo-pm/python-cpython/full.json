{
  "packageName": "buckaroo-pm/python-cpython",
  "name": "python/cpython",
  "licence": "NOASSERTION",
  "description": "The Python programming language",
  "readme": "This is Python version 3.8.0 alpha 0\n====================================\n\n.. image:: https://travis-ci.org/python/cpython.svg?branch=master\n   :alt: CPython build status on Travis CI\n   :target: https://travis-ci.org/python/cpython\n\n.. image:: https://ci.appveyor.com/api/projects/status/4mew1a93xdkbf5ua/branch/master?svg=true\n   :alt: CPython build status on Appveyor\n   :target: https://ci.appveyor.com/project/python/cpython/branch/master\n\n.. image:: https://dev.azure.com/python/cpython/_apis/build/status/Azure%20Pipelines%20CI?branchName=master\n   :alt: CPython build status on Azure DevOps\n   :target: https://dev.azure.com/python/cpython/_build/latest?definitionId=4&branchName=master\n\n.. image:: https://codecov.io/gh/python/cpython/branch/master/graph/badge.svg\n   :alt: CPython code coverage on Codecov\n   :target: https://codecov.io/gh/python/cpython\n\n.. image:: https://img.shields.io/badge/zulip-join_chat-brightgreen.svg\n   :alt: Python Zulip chat\n   :target: https://python.zulipchat.com\n\n\nCopyright (c) 2001-2019 Python Software Foundation.  All rights reserved.\n\nSee the end of this file for further copyright and license information.\n\n.. contents::\n\nGeneral Information\n-------------------\n\n- Website: https://www.python.org\n- Source code: https://github.com/python/cpython\n- Issue tracker: https://bugs.python.org\n- Documentation: https://docs.python.org\n- Developer's Guide: https://devguide.python.org/\n\nContributing to CPython\n-----------------------\n\nFor more complete instructions on contributing to CPython development,\nsee the `Developer Guide`_.\n\n.. _Developer Guide: https://devguide.python.org/\n\nUsing Python\n------------\n\nInstallable Python kits, and information about using Python, are available at\n`python.org`_.\n\n.. _python.org: https://www.python.org/\n\nBuild Instructions\n------------------\n\nOn Unix, Linux, BSD, macOS, and Cygwin::\n\n    ./configure\n    make\n    make test\n    sudo make install\n\nThis will install Python as ``python3``.\n\nYou can pass many options to the configure script; run ``./configure --help``\nto find out more.  On macOS and Cygwin, the executable is called ``python.exe``;\nelsewhere it's just ``python``.\n\nIf you are running on macOS with the latest updates installed, make sure to install\nopenSSL or some other SSL software along with Homebrew or another package manager.\nIf issues persist, see https://devguide.python.org/setup/#macos-and-os-x for more \ninformation. \n\nOn macOS, if you have configured Python with ``--enable-framework``, you\nshould use ``make frameworkinstall`` to do the installation.  Note that this\ninstalls the Python executable in a place that is not normally on your PATH,\nyou may want to set up a symlink in ``/usr/local/bin``.\n\nOn Windows, see `PCbuild/readme.txt\n<https://github.com/python/cpython/blob/master/PCbuild/readme.txt>`_.\n\nIf you wish, you can create a subdirectory and invoke configure from there.\nFor example::\n\n    mkdir debug\n    cd debug\n    ../configure --with-pydebug\n    make\n    make test\n\n(This will fail if you *also* built at the top-level directory.  You should do\na ``make clean`` at the toplevel first.)\n\nTo get an optimized build of Python, ``configure --enable-optimizations``\nbefore you run ``make``.  This sets the default make targets up to enable\nProfile Guided Optimization (PGO) and may be used to auto-enable Link Time\nOptimization (LTO) on some platforms.  For more details, see the sections\nbelow.\n\n\nProfile Guided Optimization\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nPGO takes advantage of recent versions of the GCC or Clang compilers.  If used,\neither via ``configure --enable-optimizations`` or by manually running\n``make profile-opt`` regardless of configure flags, the optimized build\nprocess will perform the following steps:\n\nThe entire Python directory is cleaned of temporary files that may have\nresulted from a previous compilation.\n\nAn instrumented version of the interpreter is built, using suitable compiler\nflags for each flavour. Note that this is just an intermediary step.  The\nbinary resulting from this step is not good for real life workloads as it has\nprofiling instructions embedded inside.\n\nAfter the instrumented interpreter is built, the Makefile will run a training\nworkload.  This is necessary in order to profile the interpreter execution.\nNote also that any output, both stdout and stderr, that may appear at this step\nis suppressed.\n\nThe final step is to build the actual interpreter, using the information\ncollected from the instrumented one.  The end result will be a Python binary\nthat is optimized; suitable for distribution or production installation.\n\n\nLink Time Optimization\n^^^^^^^^^^^^^^^^^^^^^^\n\nEnabled via configure's ``--with-lto`` flag.  LTO takes advantage of the\nability of recent compiler toolchains to optimize across the otherwise\narbitrary ``.o`` file boundary when building final executables or shared\nlibraries for additional performance gains.\n\n\nWhat's New\n----------\n\nWe have a comprehensive overview of the changes in the `What's New in Python\n3.8 <https://docs.python.org/3.8/whatsnew/3.8.html>`_ document.  For a more\ndetailed change log, read `Misc/NEWS\n<https://github.com/python/cpython/blob/master/Misc/NEWS.d>`_, but a full\naccounting of changes can only be gleaned from the `commit history\n<https://github.com/python/cpython/commits/master>`_.\n\nIf you want to install multiple versions of Python see the section below\nentitled \"Installing multiple versions\".\n\n\nDocumentation\n-------------\n\n`Documentation for Python 3.8 <https://docs.python.org/3.8/>`_ is online,\nupdated daily.\n\nIt can also be downloaded in many formats for faster access.  The documentation\nis downloadable in HTML, PDF, and reStructuredText formats; the latter version\nis primarily for documentation authors, translators, and people with special\nformatting requirements.\n\nFor information about building Python's documentation, refer to `Doc/README.rst\n<https://github.com/python/cpython/blob/master/Doc/README.rst>`_.\n\n\nConverting From Python 2.x to 3.x\n---------------------------------\n\nSignificant backward incompatible changes were made for the release of Python\n3.0, which may cause programs written for Python 2 to fail when run with Python\n3.  For more information about porting your code from Python 2 to Python 3, see\nthe `Porting HOWTO <https://docs.python.org/3/howto/pyporting.html>`_.\n\n\nTesting\n-------\n\nTo test the interpreter, type ``make test`` in the top-level directory.  The\ntest set produces some output.  You can generally ignore the messages about\nskipped tests due to optional features which can't be imported.  If a message\nis printed about a failed test or a traceback or core dump is produced,\nsomething is wrong.\n\nBy default, tests are prevented from overusing resources like disk space and\nmemory.  To enable these tests, run ``make testall``.\n\nIf any tests fail, you can re-run the failing test(s) in verbose mode.  For\nexample, if ``test_os`` and ``test_gdb`` failed, you can run::\n\n    make test TESTOPTS=\"-v test_os test_gdb\"\n\nIf the failure persists and appears to be a problem with Python rather than\nyour environment, you can `file a bug report <https://bugs.python.org>`_ and\ninclude relevant output from that command to show the issue.\n\nSee `Running & Writing Tests <https://devguide.python.org/runtests/>`_\nfor more on running tests.\n\nInstalling multiple versions\n----------------------------\n\nOn Unix and Mac systems if you intend to install multiple versions of Python\nusing the same installation prefix (``--prefix`` argument to the configure\nscript) you must take care that your primary python executable is not\noverwritten by the installation of a different version.  All files and\ndirectories installed using ``make altinstall`` contain the major and minor\nversion and can thus live side-by-side.  ``make install`` also creates\n``${prefix}/bin/python3`` which refers to ``${prefix}/bin/pythonX.Y``.  If you\nintend to install multiple versions using the same prefix you must decide which\nversion (if any) is your \"primary\" version.  Install that version using ``make\ninstall``.  Install all other versions using ``make altinstall``.\n\nFor example, if you want to install Python 2.7, 3.6, and 3.8 with 3.8 being the\nprimary version, you would execute ``make install`` in your 3.8 build directory\nand ``make altinstall`` in the others.\n\n\nIssue Tracker and Mailing List\n------------------------------\n\nBug reports are welcome!  You can use the `issue tracker\n<https://bugs.python.org>`_ to report bugs, and/or submit pull requests `on\nGitHub <https://github.com/python/cpython>`_.\n\nYou can also follow development discussion on the `python-dev mailing list\n<https://mail.python.org/mailman/listinfo/python-dev/>`_.\n\n\nProposals for enhancement\n-------------------------\n\nIf you have a proposal to change Python, you may want to send an email to the\ncomp.lang.python or `python-ideas`_ mailing lists for initial feedback.  A\nPython Enhancement Proposal (PEP) may be submitted if your idea gains ground.\nAll current PEPs, as well as guidelines for submitting a new PEP, are listed at\n`python.org/dev/peps/ <https://www.python.org/dev/peps/>`_.\n\n.. _python-ideas: https://mail.python.org/mailman/listinfo/python-ideas/\n\n\nRelease Schedule\n----------------\n\nSee :pep:`569` for Python 3.8 release details.\n\n\nCopyright and License Information\n---------------------------------\n\nCopyright (c) 2001-2019 Python Software Foundation.  All rights reserved.\n\nCopyright (c) 2000 BeOpen.com.  All rights reserved.\n\nCopyright (c) 1995-2001 Corporation for National Research Initiatives.  All\nrights reserved.\n\nCopyright (c) 1991-1995 Stichting Mathematisch Centrum.  All rights reserved.\n\nSee the file \"LICENSE\" for information on the history of this software, terms &\nconditions for usage, and a DISCLAIMER OF ALL WARRANTIES.\n\nThis Python distribution contains *no* GNU General Public License (GPL) code,\nso it may be used in proprietary projects.  There are interfaces to some GNU\ncode but these are entirely optional.\n\nAll trademarks referenced herein are property of their respective holders.\n",
  "versions": [
    {
      "ref": "master",
      "manifest": "[[dependency]]\npackage = \"github.com/buckaroo-pm/bzip2\"\nversion = \"branch=master\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/host-dl\"\nversion = \"branch=master\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/host-util\"\nversion = \"branch=master\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/madler-zlib\"\nversion = \"branch=master\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/readline\"\nversion = \"branch=master\"\n\n",
      "lockFile": "manifest = \"6422b040eecd3ecd4961544b9030b0c30ff7367fa07d294ff1fc53493644ac8d\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/bzip2\"\ntarget = \"//:bzip2\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/host-dl\"\ntarget = \"//:dl\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/host-util\"\ntarget = \"//:util\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/madler-zlib\"\ntarget = \"//:zlib\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/readline\"\ntarget = \"//:readline\"\n\n[lock.\"github.com/buckaroo-pm/bzip2\"]\nversions = [ \"branch=master\" ]\nrevision = \"3e571fbb2b5d21cabf8e5e4cd9283bb53047c69c\"\n\n[lock.\"github.com/buckaroo-pm/host-dl\"]\nversions = [ \"branch=master\" ]\nrevision = \"69a239353756c2ef5c97e5a56a0964fb7ac6eb49\"\n\n[lock.\"github.com/buckaroo-pm/host-util\"]\nversions = [ \"branch=master\" ]\nrevision = \"ef9d7082d55023090b2645678ba2fe14c25101e3\"\n\n[lock.\"github.com/buckaroo-pm/madler-zlib\"]\nversions = [ \"branch=master\" ]\nrevision = \"1f7335c126705550b9cd4e91d2d34835c49bc28e\"\n\n[lock.\"github.com/buckaroo-pm/pkg-config-ncurses\"]\nversions = [ \"branch=master\" ]\nrevision = \"02958fa2d2be17de4a0c7c1f5fecbadbf46d05ca\"\n\n[lock.\"github.com/buckaroo-pm/readline\"]\nversions = [ \"branch=master\" ]\nrevision = \"87cc8974f8b22d349c9f6729e96995e27ac5884c\"\n",
      "buck": "load('//:subdir_glob.bzl', 'subdir_glob')\nload('//:buckaroo_macros.bzl', 'buckaroo_deps_from_package')\n\nlinux_deps = \\\n  buckaroo_deps_from_package('github.com/buckaroo-pm/madler-zlib') + \\\n  buckaroo_deps_from_package('github.com/buckaroo-pm/bzip2') + \\\n  buckaroo_deps_from_package('github.com/buckaroo-pm/readline') + \\\n  buckaroo_deps_from_package('github.com/buckaroo-pm/host-dl') + \\\n  buckaroo_deps_from_package('github.com/buckaroo-pm/host-util')\n\ngenrule(\n  name = 'configure',\n  out = 'out',\n  srcs = glob([\n    'Include/**/*.h',\n    'Misc/**/*.in',\n    'Modules/**/makesetup',\n    'Modules/**/Setup',\n    'Modules/**/*.in',\n    'Modules/**/*.c',\n    'PC/**/*.c',\n    '*.ac',\n    '*.in',\n    '*.guess',\n    '*.sub',\n    'configure',\n    'install-sh',\n  ]),\n  cmd = ' && '.join([\n    'mkdir -p $OUT',\n    'cp -r $SRCDIR/. $OUT',\n    'cd $OUT',\n    './configure',\n  ]),\n)\n\ngenrule(\n  name = 'config-c',\n  out = 'config.c',\n  cmd = 'cp $(location :configure)/Modules/config.c $OUT',\n)\n\ngenrule(\n  name = 'pyconfig-h',\n  out = 'pyconfig.h',\n  cmd = 'cp $(location :configure)/pyconfig.h $OUT',\n)\n\nposix_srcs = glob([\n  'Modules/posixmodule.c',\n])\n\nlinux_srcs = posix_srcs + [\n  'Python/dynload_shlib.c',\n]\n\nmacos_srcs = posix_srcs + [\n  'Modules/_scproxy.c',\n]\n\nwindows_srcs = glob([\n  'Modules/_winapi.c',\n  'Modules/_io/winconsoleio.c',\n  'Python/dynload_win.c',\n  'PC/**/*.c',\n])\n\nhpux_srcs = glob([\n  'Python/*_hpux.c',\n])\n\naix_srcs = glob([\n  'Python/*_aix.c',\n])\n\nplatform_srcs = windows_srcs + aix_srcs + hpux_srcs + linux_srcs + macos_srcs\n\ncxx_library(\n  name = 'python',\n  header_namespace = '',\n  compiler_flags = [\"-fwrapv\"],\n  # preprocessor_flags = [ \"-DNDEBUG\" ],\n  exported_headers = dict(\n    subdir_glob([\n      (\"Include/internal\", \"**/*.h\"),\n      (\"Include\", \"**/*.h\"),\n      (\"Modules\", \"**/*.h\"),\n      (\"Objects\", \"**/*.h\"),\n      (\"Parser\", \"**/*.h\"),\n    ]).items() + [\n      (\"pyconfig.h\", \":pyconfig-h\"),\n  ]),\n  headers = subdir_glob([\n    (\"Modules/_io\", \"**/*.h\")\n  ]),\n  preprocessor_flags = [\n    '-DPy_BUILD_CORE',\n    '-DPLATFORM=\"linux\"',\n  ],\n  srcs = [\n    ':config-c',\n  ] + glob([\n    'Parser/**/*.c',\n    'Objects/**/*.c',\n    # 'Modules/main.c',\n    # 'Modules/config.c',\n    # 'Modules/atexitmodule.c',\n    # 'Modules/faulthandler.c',\n    # 'Modules/signalmodule.c',\n    # 'Modules/multibytecodec.c',\n    # 'Modules/hashtable.c',\n    # 'Modules/getpath.c',\n    # 'Modules/gcmodule.c',\n    # 'Modules/getbuildinfo.c',\n    # 'Modules/_datetimemodule.c',\n    # 'Modules/_functoolsmodule.c',\n    # 'Modules/_json.c',\n    # 'Modules/_struct.c',\n    # 'Modules/_tracemalloc.c',\n    # 'Modules/_io/*.c',\n    # 'Modules/errnomodule.c',\n    # 'Modules/pwdmodule.c',\n    # 'Modules/_sre.c',\n    # 'Modules/zlibmodule.c',\n    # 'Modules/_pickle.c',\n    # 'Modules/_codecsmodule.c',\n    # 'Modules/__xxsubinterpretersmodule.c',\n    'Modules/*.c',\n    # 'PC/**/*.c',\n    # 'PC/config.c',\n    # 'Modules/_opcode.c',\n    'Python/**/*.c',\n  ], exclude = [\n    'Parser/pgenmain.c',\n    'Python/dynload_dl.c',\n    'Python/dynload_shlib.c',\n    'Modules/tkappinit.c',\n    'Modules/_gdbmmodule.c',\n    'Modules/_testcapimodule.c',\n  ] + platform_srcs),\n#   #  [ (file, [\"-DPy_BUILD_CORE\",\"-DGITVERSION=\\\"fd512d7645\\\"\",\"-DGITTAG=\\\"heads/master\\\"\",\"-DGITBRANCH=\\\"master\\\"\"]) for file in glob(\n#   # [\"Modules/getbuildinfo.c\"],\n#   # include_dotfiles=False,\n#   # excludes = []) ] +\n#   [ (file, [\"-DPy_BUILD_CORE\"]) for file in glob(\n#   [\"Modules/_io/*.c\",\"Python/*.c\",\"Parser/*.c\",\"Objects/*.c\",\"Modules/config.c\",\"Modules/main.c\",\"Modules/gcmodule.c\",\"Modules/posixmodule.c\",\"Modules/_functoolsmodule.c\",\"Modules/signalmodule.c\",\"Modules/timemodule.c\",\"Modules/_threadmodule.c\"],\n#   include_dotfiles=False,\n#   excludes = [\"Modules/_io/winconsoleio.c\",\"Python/dup2.c\",\"Python/dynload_aix.c\",\"Python/dynload_dl.c\",\"Python/dynload_hpux.c\",\"Python/dynload_shlib.c\",\"Python/dynload_stub.c\",\"Python/dynload_win.c\",\"Python/getplatform.c\",\"Python/strdup.c\",\"Python/sysmodule.c\",\"Parser/parsetok_pgen.c\",\"Parser/pgenmain.c\",\"Parser/printgrammar.c\",\"Parser/tokenizer_pgen.c\"]) ] +\n#   [ (file, [\"-DPy_BUILD_CORE\",\"-DPLATFORM=\\\"linux\\\"\"]) for file in glob(\n#   [\"Python/getplatform.c\"],\n#   include_dotfiles=False,\n#   excludes = []) ] +\n#   [ (file, [\"-DPy_BUILD_CORE\",\"-DABIFLAGS=\\\"m\\\"\",\"-DMULTIARCH=\\\"x86_64-linux-gnu\\\"\"]) for file in glob(\n#   [\"Python/sysmodule.c\"],\n#   include_dotfiles=False,\n#   excludes = []) ] +\n#   [ (file, [\"-DPy_BUILD_CORE\",\"-DSOABI=\\\"cpython-38m-x86_64-linux-gnu\\\"\"]) for file in glob(\n#   [\"Python/dynload_shlib.c\"],\n#   include_dotfiles=False,\n#   excludes = []) ] +\n#   [ (file, [\"-DPy_BUILD_CORE\",\"-DPYTHONPATH=\\\"\\\"\",\"-DPREFIX=\\\"/usr/local\\\"\",\"-DEXEC_PREFIX=\\\"/usr/local\\\"\",\"-DVERSION=\\\"3.8\\\"\",\"-DVPATH=\\\"\\\"\"]) for file in glob(\n#   [\"Modules/getpath.c\"],\n#   include_dotfiles=False,\n#   excludes = []) ] +\n# glob(\n#     [\"Modules/errnomodule.c\",\"Modules/pwdmodule.c\",\"Modules/_sre.c\",\"Modules/_codecsmodule.c\",\"Modules/_weakref.c\",\"Modules/_operator.c\",\"Modules/_collectionsmodule.c\",\"Modules/_abc.c\",\"Modules/itertoolsmodule.c\",\"Modules/atexitmodule.c\",\"Modules/_stat.c\",\"Modules/_localemodule.c\",\"Modules/faulthandler.c\",\"Modules/_tracemalloc.c\",\"Modules/hashtable.c\",\"Modules/symtablemodule.c\",\"Modules/xxsubtype.c\"],\n#     excludes = [],\n#     include_dotfiles=False\n#   ) + [\n#     'PC/config.c',\n#     'Modules/_opcode.c',\n#   ],\n  platform_srcs = [\n    ('macos.*', macos_srcs),\n    ('linux.*', linux_srcs),\n  ],\n  platform_deps = [\n    ('linux.*', linux_deps),\n  ],\n  visibility = [\n    'PUBLIC',\n  ],\n)\n\ncxx_binary(\n  name = \"exe-python\",\n  compiler_flags = [\"-fwrapv\"],\n  preprocessor_flags = [\"-DNDEBUG\",\"-DPy_BUILD_CORE\"],\n  srcs = glob(\n    [\"Programs/python.c\"],\n    exclude = [],\n    # include_dotfiles=False\n  ) + [\n\n  ],\n  linker_flags = [\"-lpthread\",\"-ldl\",\"-lutil\",\"-lm\"],\n  deps = [\n    \":python\"\n  ],\n)\n",
      "bazel": "",
      "deps": [
        {
          "uri": "github.com/buckaroo-pm/bzip2",
          "name": "buckaroo-pm/bzip2",
          "version": "branch=master"
        },
        {
          "uri": "github.com/buckaroo-pm/host-dl",
          "name": "buckaroo-pm/host-dl",
          "version": "branch=master"
        },
        {
          "uri": "github.com/buckaroo-pm/host-util",
          "name": "buckaroo-pm/host-util",
          "version": "branch=master"
        },
        {
          "uri": "github.com/buckaroo-pm/madler-zlib",
          "name": "buckaroo-pm/madler-zlib",
          "version": "branch=master"
        },
        {
          "uri": "github.com/buckaroo-pm/readline",
          "name": "buckaroo-pm/readline",
          "version": "branch=master"
        }
      ],
      "lock": [
        {
          "uri": "github.com/buckaroo-pm/bzip2",
          "name": "buckaroo-pm/bzip2",
          "spec": {
            "versions": [
              "branch=master"
            ],
            "revision": "3e571fbb2b5d21cabf8e5e4cd9283bb53047c69c"
          }
        },
        {
          "uri": "github.com/buckaroo-pm/host-dl",
          "name": "buckaroo-pm/host-dl",
          "spec": {
            "versions": [
              "branch=master"
            ],
            "revision": "69a239353756c2ef5c97e5a56a0964fb7ac6eb49"
          }
        },
        {
          "uri": "github.com/buckaroo-pm/host-util",
          "name": "buckaroo-pm/host-util",
          "spec": {
            "versions": [
              "branch=master"
            ],
            "revision": "ef9d7082d55023090b2645678ba2fe14c25101e3"
          }
        },
        {
          "uri": "github.com/buckaroo-pm/madler-zlib",
          "name": "buckaroo-pm/madler-zlib",
          "spec": {
            "versions": [
              "branch=master"
            ],
            "revision": "1f7335c126705550b9cd4e91d2d34835c49bc28e"
          }
        },
        {
          "uri": "github.com/buckaroo-pm/pkg-config-ncurses",
          "name": "buckaroo-pm/pkg-config-ncurses",
          "spec": {
            "versions": [
              "branch=master"
            ],
            "revision": "02958fa2d2be17de4a0c7c1f5fecbadbf46d05ca"
          }
        },
        {
          "uri": "github.com/buckaroo-pm/readline",
          "name": "buckaroo-pm/readline",
          "spec": {
            "versions": [
              "branch=master"
            ],
            "revision": "87cc8974f8b22d349c9f6729e96995e27ac5884c"
          }
        }
      ]
    }
  ],
  "updated": "2019-01-30T18:20:20Z",
  "updatedUpstream": "2021-01-13T21:44:58Z",
  "contributors": [
    {
      "login": "alex",
      "avatarUrl": "https://avatars3.githubusercontent.com/u/772?u=7c00c7c8ac3691da556d7686e16ff08b797d4a38&v=4"
    },
    {
      "login": "phsilva",
      "avatarUrl": "https://avatars3.githubusercontent.com/u/1095?v=4"
    },
    {
      "login": "aivarannamaa",
      "avatarUrl": "https://avatars0.githubusercontent.com/u/1802?v=4"
    },
    {
      "login": "dw",
      "avatarUrl": "https://avatars3.githubusercontent.com/u/2315?u=02c2843a7a745a67d82068d3824a9903232952e0&v=4"
    },
    {
      "login": "jd",
      "avatarUrl": "https://avatars0.githubusercontent.com/u/2644?u=791b4bd0aaab691694de0d12a2eaa442a711bac2&v=4"
    },
    {
      "login": "eklitzke",
      "avatarUrl": "https://avatars0.githubusercontent.com/u/2734?v=4"
    },
    {
      "login": "shlomif",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/3150?v=4"
    },
    {
      "login": "EdwardBetts",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/3818?v=4"
    },
    {
      "login": "mrkn",
      "avatarUrl": "https://avatars3.githubusercontent.com/u/3959?v=4"
    },
    {
      "login": "purcell",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/5636?v=4"
    },
    {
      "login": "lebigot",
      "avatarUrl": "https://avatars3.githubusercontent.com/u/5793?v=4"
    },
    {
      "login": "jreese",
      "avatarUrl": "https://avatars3.githubusercontent.com/u/6444?u=8de7e24b447c29b293937d46d31cc3549a51c49c&v=4"
    },
    {
      "login": "masklinn",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/6993?v=4"
    },
    {
      "login": "mitsuhiko",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/7396?v=4"
    },
    {
      "login": "simonw",
      "avatarUrl": "https://avatars0.githubusercontent.com/u/9599?u=5968723deb1a55b82620e106f5ca58e9b11a0942&v=4"
    },
    {
      "login": "Roger",
      "avatarUrl": "https://avatars2.githubusercontent.com/u/9746?u=846ca526765a88dc2f6b1530e253930494e1330b&v=4"
    },
    {
      "login": "blueyed",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/9766?v=4"
    },
    {
      "login": "drothlis",
      "avatarUrl": "https://avatars0.githubusercontent.com/u/12424?v=4"
    },
    {
      "login": "xrmx",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/12932?v=4"
    },
    {
      "login": "pjenvey",
      "avatarUrl": "https://avatars2.githubusercontent.com/u/14639?v=4"
    },
    {
      "login": "ivyl",
      "avatarUrl": "https://avatars2.githubusercontent.com/u/16490?u=aa503c662594c908414ebf948c3eba1b56f8a984&v=4"
    },
    {
      "login": "eallrich",
      "avatarUrl": "https://avatars3.githubusercontent.com/u/17393?u=22979ee8bce2e91119354806bb1dc9f1cdafe1cc&v=4"
    },
    {
      "login": "isaiah",
      "avatarUrl": "https://avatars3.githubusercontent.com/u/18042?u=5b4438299481c4010053fd0ddbbc4cab88920b5d&v=4"
    },
    {
      "login": "silas",
      "avatarUrl": "https://avatars0.githubusercontent.com/u/18528?u=5b060be00e8258ac79b835ba30cbca84fbbea062&v=4"
    },
    {
      "login": "pelme",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/20529?v=4"
    }
  ],
  "fundingLinks": [
    "https://github.com/python",
    "https://www.python.org/psf/donations/python-dev/"
  ],
  "contactLinks": [],
  "stars": 35582,
  "forks": 17453,
  "topics": []
}