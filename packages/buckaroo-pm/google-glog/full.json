{
  "packageName": "buckaroo-pm/google-glog",
  "name": "google/glog",
  "licence": "NOASSERTION",
  "description": "C++ implementation of the Google logging module",
  "readme": "[![Build Status](https://img.shields.io/travis/google/glog/master.svg?label=Travis)](https://travis-ci.org/google/glog/builds)\n[![Grunt status](https://img.shields.io/appveyor/ci/google/glog/master.svg?label=Appveyor)](https://ci.appveyor.com/project/google/glog/history)\n\nThis repository contains a C++ implementation of the Google logging\nmodule.  Documentation for the implementation is in doc/.\n\nSee INSTALL for (generic) installation instructions for C++: basically\n```sh\n./autogen.sh && ./configure && make && make install\n```\n",
  "versions": [
    {
      "ref": "master",
      "manifest": "targets = [ \"//:glog\" ]\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/gflags\"\nversion = \"branch=master\"\n",
      "lockFile": "manifest = \"c92f12f4d7fa383dcbae419915c38d0b878dcf3d3a85df4f14986e4dd0430776\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/gflags\"\ntarget = \"//:gflags\"\n\n[lock.\"github.com/buckaroo-pm/gflags\"]\nversions = [ \"branch=master\" ]\nrevision = \"6640528f2e69514d72aa590b14f1c95c510fc0c6\"\n\n[lock.\"github.com/buckaroo-pm/gflags\".lock.\"github.com/buckaroo-pm/host-pthread\"]\nversions = [ \"branch=master\" ]\nrevision = \"a62519aa69c8e3243d6065fbf4c1d2de072f86f6\"\n",
      "buck": "load('//:buckaroo_macros.bzl', 'buckaroo_deps')\nload('//:subdir_glob.bzl', 'subdir_glob')\n\nwith_gflags = True\n\nnamespace = read_config('glog', 'namespace', 'google').strip()\n\ngenrule(\n  name = 'config-h',\n  out = 'config.h',\n  srcs = [\n    'src/config.h.cmake.in',\n  ],\n  cmd = 'awk \\'{ gsub(/^#cmakedefine/, \\\"//cmakedefine\\\"); print; }\\' < $SRCS > $OUT ',\n)\n\ngenrule(\n  name = 'gen-sh',\n  out = 'gen.sh',\n  cmd = r'''\\\n#!/bin/sh\ncat > $OUT <<\"EOF\"\nsed -e 's/@ac_cv_cxx_using_operator@/1/g' \\\n    -e 's/@ac_cv_have_unistd_h@/1/g' \\\n    -e 's/@ac_cv_have_stdint_h@/1/g' \\\n    -e 's/@ac_cv_have_systypes_h@/1/g' \\\n    -e 's/@ac_cv_have_libgflags@/{}/g' \\\n    -e 's/@ac_cv_have_uint16_t@/1/g' \\\n    -e 's/@ac_cv_have___builtin_expect@/1/g' \\\n    -e 's/@ac_cv_have_.*@/0/g' \\\n    -e 's/@ac_google_start_namespace@/namespace google {{/g' \\\n    -e 's/@ac_google_end_namespace@/}}/g' \\\n    -e 's/@ac_google_namespace@/google/g' \\\n    -e 's/@ac_cv___attribute___noinline@/__attribute__((noinline))/g' \\\n    -e 's/@ac_cv___attribute___noreturn@/__attribute__((noreturn))/g' \\\n    -e 's/@ac_cv___attribute___printf_4_5@/__attribute__((__format__ (__printf__, 4, 5)))/g'\nEOF\n'''.format(int(with_gflags)),\n)\n\n[\n  genrule(\n    name = f + '-h',\n    srcs = [\n      'src/glog/' + f + '.h.in',\n    ],\n    out = f + '.h',\n    cmd = 'sh $(location :gen-sh) < $SRCS > $OUT',\n  ) for f in [\n    'vlog_is_on',\n    'stl_logging',\n    'raw_logging',\n    'logging',\n  ]\n]\n\ncxx_library(\n  name = 'glog',\n  header_namespace = '',\n  exported_headers = {\n    'glog/log_severity.h': 'src/glog/log_severity.h',\n    'glog/vlog_is_on.h': ':vlog_is_on-h',\n    'glog/stl_logging.h': ':stl_logging-h',\n    'glog/raw_logging.h': ':raw_logging-h',\n    'glog/logging.h': ':logging-h',\n  },\n  headers = dict(\n    subdir_glob([\n      ('src', '**/*.h'),\n    ]).items() + [\n      ('config.h', ':config-h'),\n    ]\n  ),\n  srcs = glob([\n    'src/demangle.cc',\n    'src/logging.cc',\n    'src/raw_logging.cc',\n    'src/signalhandler.cc',\n    'src/symbolize.cc',\n    'src/utilities.cc',\n    'src/vlog_is_on.cc',\n  ]),\n  platform_srcs = [\n    ('windows.*', glob([ 'src/windows/**/*.cc' ])),\n  ],\n  deps = buckaroo_deps(),\n  compiler_flags = [\n    '-Wno-sign-compare',\n    '-Wno-unused-function',\n    '-Wno-unused-local-typedefs',\n    '-Wno-unused-variable',\n    '-DGLOG_BAZEL_BUILD',\n    '-DGOOGLE_NAMESPACE=\\'' + namespace + '\\'',\n  ],\n  visibility = [\n    'PUBLIC',\n  ],\n)\n",
      "bazel": "licenses(['notice'])\n\nload(':bazel/glog.bzl', 'glog_library')\n\nglog_library()\n",
      "deps": [
        {
          "uri": "github.com/buckaroo-pm/gflags",
          "name": "buckaroo-pm/gflags",
          "version": "branch=master"
        }
      ],
      "lock": [
        {
          "uri": "github.com/buckaroo-pm/gflags",
          "name": "buckaroo-pm/gflags",
          "spec": {
            "versions": [
              "branch=master"
            ],
            "revision": "6640528f2e69514d72aa590b14f1c95c510fc0c6",
            "lock": {
              "github.com/buckaroo-pm/host-pthread": {
                "versions": [
                  "branch=master"
                ],
                "revision": "a62519aa69c8e3243d6065fbf4c1d2de072f86f6"
              }
            }
          }
        }
      ]
    }
  ],
  "updated": "2019-01-14T15:54:27Z",
  "updatedUpstream": "2021-01-13T14:55:19Z",
  "contributors": [
    {
      "login": "mspang",
      "avatarUrl": "https://avatars3.githubusercontent.com/u/1850?v=4"
    },
    {
      "login": "pwnall",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/11460?u=6b2561f5dc40b851f0218da848ed1fa29f4fcfa6&v=4"
    },
    {
      "login": "fmayer",
      "avatarUrl": "https://avatars3.githubusercontent.com/u/19826?u=810fb14d2569055342d73b0a91043a46cab2cff6&v=4"
    },
    {
      "login": "sergeyvfx",
      "avatarUrl": "https://avatars3.githubusercontent.com/u/23765?u=38ed1f64d6805f3d0edb812c97f57d6ba3e7e926&v=4"
    },
    {
      "login": "shinh",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/29770?v=4"
    },
    {
      "login": "pphaneuf",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/40400?v=4"
    },
    {
      "login": "mayah",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/53658?u=a0f8bb5e9997756532b21665a94382efb5f49baa&v=4"
    },
    {
      "login": "xiaosuo",
      "avatarUrl": "https://avatars3.githubusercontent.com/u/105033?v=4"
    },
    {
      "login": "nya3jp",
      "avatarUrl": "https://avatars2.githubusercontent.com/u/118475?u=3b3ee550b72f5d8a25df5a3e05a5adb4a32b0639&v=4"
    },
    {
      "login": "cdibona",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/165353?v=4"
    },
    {
      "login": "rhencke",
      "avatarUrl": "https://avatars3.githubusercontent.com/u/178348?v=4"
    },
    {
      "login": "dfr",
      "avatarUrl": "https://avatars0.githubusercontent.com/u/190885?v=4"
    },
    {
      "login": "samuela",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/226872?u=77a7e7d5d716a64aa859dd02f3d5564848f4c0dc&v=4"
    },
    {
      "login": "mpercy",
      "avatarUrl": "https://avatars0.githubusercontent.com/u/278148?u=59bf677a3ade92582bff83b6d209bab46b61d0f3&v=4"
    },
    {
      "login": "pixelb",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/316894?u=ffab3c04c96b7284abd81b5a903522bf24be5ed3&v=4"
    },
    {
      "login": "dberlin",
      "avatarUrl": "https://avatars3.githubusercontent.com/u/324715?v=4"
    },
    {
      "login": "pcc",
      "avatarUrl": "https://avatars0.githubusercontent.com/u/425024?v=4"
    },
    {
      "login": "kwaegel",
      "avatarUrl": "https://avatars0.githubusercontent.com/u/433893?v=4"
    },
    {
      "login": "philwo",
      "avatarUrl": "https://avatars0.githubusercontent.com/u/504652?v=4"
    },
    {
      "login": "ammubhave",
      "avatarUrl": "https://avatars3.githubusercontent.com/u/504886?v=4"
    },
    {
      "login": "ribalda",
      "avatarUrl": "https://avatars0.githubusercontent.com/u/562331?u=cbaf65840dbf6b7000fe88d237d1834aa45c1a6d&v=4"
    },
    {
      "login": "willyd",
      "avatarUrl": "https://avatars3.githubusercontent.com/u/628693?u=696d644c061c2fe3ca18eaa83e58971018ede379&v=4"
    },
    {
      "login": "drigz",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/632207?v=4"
    },
    {
      "login": "aochiai",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/641027?v=4"
    },
    {
      "login": "plmuon",
      "avatarUrl": "https://avatars3.githubusercontent.com/u/641115?v=4"
    }
  ],
  "fundingLinks": [],
  "contactLinks": [],
  "stars": 4257,
  "forks": 1589,
  "topics": []
}