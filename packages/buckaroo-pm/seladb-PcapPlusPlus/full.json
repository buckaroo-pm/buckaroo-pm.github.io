{
  "packageName": "buckaroo-pm/seladb-PcapPlusPlus",
  "name": "seladb/PcapPlusPlus",
  "licence": "Unlicense",
  "description": "PcapPlusPlus is a multiplatform C++ network sniffing and packet parsing and crafting framework. PcapPlusPlus is meant to be lightweight, efficient and easy to use. It's a C++ wrapper for popular engines like libpcap, WinPcap, DPDK and PF_RING",
  "readme": "PcapPlusPlus\r\n============\r\n\r\n[![Build Status](https://travis-ci.org/seladb/PcapPlusPlus.svg?branch=master)](https://travis-ci.org/seladb/PcapPlusPlus)\r\n[![Build status](https://ci.appveyor.com/api/projects/status/4u5ui21ibbevkstc?svg=true)](https://ci.appveyor.com/project/seladb/pcapplusplus)\r\n\r\nPcapPlusPlus is a multiplatform C++ network sniffing and packet parsing and crafting framework. PcapPlusPlus is meant to be lightweight, efficient and easy to use.\r\n\r\nPcapPlusPlus web-site: http://seladb.github.io/PcapPlusPlus-Doc\r\n\r\n### Getting Started ###\r\n\r\nPlease visit the [Tutorials](http://seladb.github.io/PcapPlusPlus-Doc/tutorials.html) in PcapPlusPlus web-site to learn about PcapPlusPlus and how to use it\r\n\r\n\r\n### What makes PcapPlusPlus different from similar C++ wrappers for libpcap/WinPcap? ###\r\n\r\n- Designed to be lightweight and efficient\r\n- Support for **DPDK** fast packet processing engine which enables packet capturing and transmition in line rate using kernel bypass\r\n- Support for ntop's **PF_RING** packet capturing engine that dramatically improves the packet capture speed\r\n- Support for parsing and editing of many protocols, including L5-7 protocols like HTTP, SSL/TLS and SIP\r\n- Unique implementation of **TCP reassembly** logic which includes support of TCP retransmission, out-of-order TCP packets and missing TCP data\r\n- Support for Remote Capture capabilities on Windows (using RPCAP protocol supported in WinPcap)\r\n- Support for reading and writing **PCAPNG** files (a lot more more than currently supported in WinPcap/libpcap)\r\n- Vast object-oriented filtering mechanism that makes libpcap filters a lot more user-friendly (no need to know the exact filter string to use)\r\n\r\n### PcapPlusPlus Is Multi-Platform! ###\r\nPcapPlusPlus is currently supported on **Windows**, **Linux** and **Mac OS X**. It was tested on the following platforms:\r\n\r\n- Windows:\r\n    - Microsoft Visual Studio 2015 (32-bit + 64-bit compilation)\r\n    - MinGW32 (32-bit compilation only)\r\n    - MinGW-w64 (32-bit compilation only)\r\n\r\n- Linux:\r\n    - Ubuntu (12.04 LTS, 14.04 LTS, 16.04 LTS, 18.04 LTS)\r\n    - Fedora 26\r\n    - CentOS 7\r\n    - It should work on other Linux distributions as well\r\n\r\n- Mac OS X:\r\n    - Yosemite (10.10)\r\n    - El Capitan (10.11)\r\n    - Sierra (10.12)\r\n    - High Sierra (10.13)\r\n\r\n### Supported Packet Capture Engines ###\r\n\r\nPcapPlusPlus currently works with the following packet capture engines:\r\n\r\n1. libpcap packet capture (on Linux and Mac OS X)\r\n2. WinPcap packet capture (on Windows)\r\n3. Vanilla PF_RING (on Linux)\r\n4. DPDK (on Linux)\r\n5. WinPcap remote capture (on Windows)\r\n6. PCAP and PCAPNG files\r\n7. Raw sockets (on Linux and Windows)\r\n\r\n### Supported Protocols ###\r\n\r\nThe Packet++ library currently supports parsing, editing and creation of packets of the following protocols:\r\n\r\n1. Ethernet\r\n2. SLL (Linux cooked capture)\r\n3. Null/Loopback\r\n4. Raw IP (IPv4 & IPv6)\r\n5. IPv4\r\n6. IPv6\r\n7. ARP\r\n8. VLAN\r\n9. VXLAN\r\n10. MPLS\r\n11. PPPoE\r\n12. GRE\r\n13. TCP\r\n14. UDP\r\n15. ICMP\r\n16. IGMP (IGMPv1, IGMPv2 and IGMPv3 are supported)\r\n17. SIP\r\n18. SDP\r\n19. Radius\r\n20. DNS\r\n21. DHCP\r\n22. HTTP headers (request & response)\r\n23. SSL/TLS - parsing only (no editing capabilities)\r\n24. Packet trailer (a.k.a footer or padding)\r\n25. Generic payload\r\n\r\n### Useful Packet And Network Utilities ###\r\n\r\n1. TCP reassembly logic\r\n2. IP reassembly logic (a.k.a IP de-fragmentation). Works for both IPv4 and IPv6\r\n3. Packet hash key creation (by 5-tuple and 2-tuple)\r\n4. Retrieve remote machine MAC address using ARP protocol\r\n5. Retrieve host IPv4 address by using DNS protocol\r\n6. Checksum calculation\r\n\r\n### Package Content ###\r\n\r\nPcapPlusPlus consists of 3 libraries:\r\n\r\n1. **Packet++** - a library for parsing, creating and editing packets\r\n2. **Pcap++** - a library for intercepting and sending packets, providing network and NIC info, stats, etc. It is actually a C++ wrapper for packet capturing engines such as libpcap, WinPcap, DPDK and PF_RING\r\n3. **Common++** - a library with some common code utilities used by both Packet++ and Pcap++\r\n\r\nIn addition it contains many examples, tutorials and utilities documented in the [Examples](http://seladb.github.io/PcapPlusPlus-Doc/examples.html) and in the [Tutorials](http://seladb.github.io/PcapPlusPlus-Doc/tutorials.html) pages in PcapPlusPlus web-site \r\n\r\n\r\n# Download #\r\n\r\nIn order to download PcapPlusPlus, please visit the github [page](https://github.com/seladb/PcapPlusPlus/).\r\n\r\nYou can also download it using these links:\r\n\r\n- [ZIP format](https://github.com/seladb/PcapPlusPlus/archive/master.zip)\r\n- [tat.gz format](https://github.com/seladb/PcapPlusPlus/archive/master.tar.gz)\r\n \r\nOr clone the git repository by:\r\n\r\n```shell\r\ngit clone https://github.com/seladb/PcapPlusPlus.git\r\n```\r\n\r\n### Compiled Binaries ###\r\n\r\nIf you want an already compiled version of PcapPlusPlus chekcout the latest release:\r\n[https://github.com/seladb/PcapPlusPlus/releases/latest](https://github.com/seladb/PcapPlusPlus/releases/latest)\r\n\r\n\r\n### Compile Yourself ###\r\n\r\nFor compilation instructions of the various platforms please refer to the [Download](http://seladb.github.io/PcapPlusPlus-Doc/download.html) page in PcapPlusPlus web-site\r\n\r\n# PcapPlusPlus Documentation #\r\n\r\n[PcapPlusPlus web-site](http://seladb.github.io/PcapPlusPlus-Doc/) includes all the relevant documentation.\r\n\r\nAlso, the entire API of PcapPlusPlus is documented using doxygen. You can find it here: [http://seladb.github.io/PcapPlusPlus-Doc/Documentation/index.html](http://seladb.github.io/PcapPlusPlus-Doc/Documentation/index.html)\r\n\r\nIf you see any missing information please tell me\r\n\r\n\r\n# PcapPlusPlus Support #\r\n\r\nI'll be very happy to get feedbacks, so feel free to contact me in any of the following ways:\r\n\r\n- Open a Github ticket\r\n- PcapPlusPlus Google group: https://groups.google.com/d/forum/pcapplusplus-support\r\n- Send an email to: pcapplusplus@gmail.com\r\n\r\n\r\n# DPDK & PF_RING Support #\r\n\r\nPcapPlusPLus provides a C++ absraction layers over DPDK & PF_RING. For more details please visit PcapPlusPlus web-site:\r\n\r\nhttp://seladb.github.io/PcapPlusPlus-Doc/dpdk-pf_ring.html\r\n\r\n\r\n# Benchmarks #\r\n\r\nI used Matias Fontanini's [packet-capture-benchmarks](https://github.com/mfontanini/packet-capture-benchmarks) project to compare the performance of PcapPlusPlus with other similar C++ libraries (libtins and libcrafter). \r\n\r\nThe results can eviewed in the [Benchmarks](http://seladb.github.io/PcapPlusPlus-Doc/benchmark.html) page in PcapPlusPlus web-site\r\n\r\n\r\n# Creating Applications With PcapPlusPlus #\r\n\r\nPlease refer to the [Tutorials](http://seladb.github.io/PcapPlusPlus-Doc/tutorials.html) section in PcapPlusPlus web-site\r\n",
  "versions": [
    {
      "ref": "master",
      "manifest": "targets = [ \"//Pcap++:Pcap++\" ]\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/host-pcap\"\nversion = \"branch=master\"\nprivate = true\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/host-pthread\"\nversion = \"branch=master\"\nprivate = true\n",
      "lockFile": "manifest = \"d508386d845e6c2f93ca3d8fad5b7e7e0ec2c22e1abec9376daed388d40d94fc\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/host-pcap\"\ntarget = \"//:pcap\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/host-pthread\"\ntarget = \"//:pthread\"\n\n[lock.\"github.com/buckaroo-pm/host-pcap\"]\nversions = [ \"branch=master\" ]\nrevision = \"a01f4dd799821e70b82da9b3a26afccfd460d4d3\"\n\n[lock.\"github.com/buckaroo-pm/host-pthread\"]\nversions = [ \"branch=master\" ]\nrevision = \"a62519aa69c8e3243d6065fbf4c1d2de072f86f6\"\n",
      "buck": "",
      "bazel": "",
      "deps": [
        {
          "uri": "github.com/buckaroo-pm/host-pcap",
          "name": "buckaroo-pm/host-pcap",
          "version": "branch=master"
        },
        {
          "uri": "github.com/buckaroo-pm/host-pthread",
          "name": "buckaroo-pm/host-pthread",
          "version": "branch=master"
        }
      ],
      "lock": [
        {
          "uri": "github.com/buckaroo-pm/host-pcap",
          "name": "buckaroo-pm/host-pcap",
          "spec": {
            "versions": [
              "branch=master"
            ],
            "revision": "a01f4dd799821e70b82da9b3a26afccfd460d4d3"
          }
        },
        {
          "uri": "github.com/buckaroo-pm/host-pthread",
          "name": "buckaroo-pm/host-pthread",
          "spec": {
            "versions": [
              "branch=master"
            ],
            "revision": "a62519aa69c8e3243d6065fbf4c1d2de072f86f6"
          }
        }
      ]
    }
  ],
  "updated": "2019-01-22T17:48:11Z",
  "updatedUpstream": "2021-01-13T19:35:23Z",
  "contributors": [
    {
      "login": "xloem",
      "avatarUrl": "https://avatars2.githubusercontent.com/u/279585?v=4"
    },
    {
      "login": "v0l0dia",
      "avatarUrl": "https://avatars3.githubusercontent.com/u/497808?u=e637c80e2d3be1f2e0d807e9959e6d9e5d1ee402&v=4"
    },
    {
      "login": "eteran",
      "avatarUrl": "https://avatars2.githubusercontent.com/u/571477?u=594a3ceb44f8251171117a2052c8f86add6b0e38&v=4"
    },
    {
      "login": "zlowram",
      "avatarUrl": "https://avatars3.githubusercontent.com/u/627317?u=d4efa9949dcb41313ad76b26f353d82d847064dd&v=4"
    },
    {
      "login": "tomerb",
      "avatarUrl": "https://avatars3.githubusercontent.com/u/914489?v=4"
    },
    {
      "login": "gvanem",
      "avatarUrl": "https://avatars2.githubusercontent.com/u/945271?u=37a1086dc61d13033269f604444ad0d57fe4b15c&v=4"
    },
    {
      "login": "AndreyBronin",
      "avatarUrl": "https://avatars3.githubusercontent.com/u/983761?u=260f7138a12f4a56d9a2c160331d37bc25271d59&v=4"
    },
    {
      "login": "russkel",
      "avatarUrl": "https://avatars3.githubusercontent.com/u/1073606?u=cd9ec385875be2e28dffba820941ef0aafd39da1&v=4"
    },
    {
      "login": "krepver",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/1073706?u=416e681ebcbb481a0bcd97616332e40333d7d0f7&v=4"
    },
    {
      "login": "sinall",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/1246382?v=4"
    },
    {
      "login": "f-squirrel",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/1248133?u=14703ce3e98156805495c2f1989025b892edc153&v=4"
    },
    {
      "login": "axasoft",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/1426306?v=4"
    },
    {
      "login": "lgbaldoni",
      "avatarUrl": "https://avatars0.githubusercontent.com/u/1450716?u=bc3ce5d2f4190bab492001d42473b4b006bf058d&v=4"
    },
    {
      "login": "maruu",
      "avatarUrl": "https://avatars3.githubusercontent.com/u/2047922?v=4"
    },
    {
      "login": "christinaa",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/2118877?v=4"
    },
    {
      "login": "NanXiao",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/2338189?u=50478039e7023a74d21a235ff834a3ff655a9fe2&v=4"
    },
    {
      "login": "rickyzhang82",
      "avatarUrl": "https://avatars0.githubusercontent.com/u/3475933?v=4"
    },
    {
      "login": "vicenterb",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/4432790?v=4"
    },
    {
      "login": "ncrumbak",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/5282119?v=4"
    },
    {
      "login": "rpanah",
      "avatarUrl": "https://avatars3.githubusercontent.com/u/6577290?u=04d0b72b6b9afeae198e970fb9a84279962f97a4&v=4"
    },
    {
      "login": "DinoStray",
      "avatarUrl": "https://avatars3.githubusercontent.com/u/6963679?u=241ab05b6f4d792dae7f93fe93c066c6987a27bf&v=4"
    },
    {
      "login": "lasorda",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/7352092?v=4"
    },
    {
      "login": "fquinner",
      "avatarUrl": "https://avatars1.githubusercontent.com/u/8431703?u=57ed4290dcfdd0b792aa241c200ae0984becba65&v=4"
    },
    {
      "login": "solvingj",
      "avatarUrl": "https://avatars0.githubusercontent.com/u/8557737?u=6d285106000e38e95d951c577aca1bded90a90a1&v=4"
    },
    {
      "login": "seladb",
      "avatarUrl": "https://avatars2.githubusercontent.com/u/9059541?u=50d40c627539c83374564d397bcc359e5f3034c1&v=4"
    }
  ],
  "fundingLinks": [],
  "contactLinks": [],
  "stars": 1271,
  "forks": 346,
  "topics": [
    "c-plus-plus",
    "pf-ring",
    "dpdk",
    "packet-parsing",
    "winpcap",
    "pcap-files",
    "pcap",
    "packet-processing",
    "cpp",
    "libpcap",
    "multiplatform",
    "linux",
    "mac-osx",
    "windows",
    "networking",
    "network-forensics",
    "network-tools",
    "tcp-reassembly",
    "packet-crafting",
    "pcapplusplus"
  ]
}