_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[31],{"7tP2":function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/blog/templates-vs-macros",function(){return t("GGSm")}])},GGSm:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return m})),t.d(a,"default",(function(){return b}));var n=t("rePB"),c=t("Ff2n"),s=(t("q1tI"),t("7ljp")),o=t("ZDfL");function p(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function r(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?p(Object(t),!0).forEach((function(a){Object(n.a)(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}var m={title:"Comparing the Compilation Times of C++ Templates and Macros",created:"2017-06-02T11:00:00.000Z",author:"Team Buckaroo",summary:"For our example, templates compile faster than generated code. With a few tricks, they are also faster for incremental builds.",banner:"/posts/templates-vs-macros.jpeg",__resourcePath:"blog/templates-vs-macros.md",__scans:{},layout:"index"},N={frontMatter:m},l=o.a;function b(e){var a=e.components,t=Object(c.a)(e,["components"]);return Object(s.a)(l,r(r(r({},N),t),{},{components:a,mdxType:"MDXLayout"}),Object(s.a)("h2",null,"TL;DR"),Object(s.a)("p",null,"For our example, templates compile faster than generated code. With a few tricks, they are also faster for incremental builds."),Object(s.a)("h2",null,"Introduction"),Object(s.a)("p",null,"Templates are a polarizing feature of C++. On the one hand, people love the ability to squeeze out extra performance and add syntactic sugar to their projects. On the other, some argue that they are slow to compile, bloat binaries and give incomprehensible error messages."),Object(s.a)("p",null,"This article will look at one common use-cases of templates and determine if compile times are improved by using code-generation rather than templates."),Object(s.a)("h2",null,"Simple Vector Class"),Object(s.a)("p",null,"We\u2019re going to look at a simple vector class with a size determined at compile-time. The usage of this class might look like this:"),Object(s.a)("pre",r({},{className:"language-cpp"}),Object(s.a)("code",r({parentName:"pre"},{className:"language-cpp"}),Object(s.a)("span",r({parentName:"code"},{className:"token comment"}),"// Create a vector of 10 elements, all initialized to 0"),"\n",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"auto")," v ",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"=")," Vector",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",r({parentName:"code"},{className:"token number"}),"10"),Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),">"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",r({parentName:"code"},{className:"token number"}),"0"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),")"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(s.a)("span",r({parentName:"code"},{className:"token comment"}),"// Set the 1st element to 7"),"\nv",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"["),Object(s.a)("span",r({parentName:"code"},{className:"token number"}),"0"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.a)("span",r({parentName:"code"},{className:"token number"}),"7"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(s.a)("span",r({parentName:"code"},{className:"token comment"}),"// Set the 9th element to 3"),"\nv",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"["),Object(s.a)("span",r({parentName:"code"},{className:"token number"}),"8"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.a)("span",r({parentName:"code"},{className:"token number"}),"3"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(s.a)("span",r({parentName:"code"},{className:"token comment"}),"// Print the sum of all elements"),"\nstd",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"::"),"cout ",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"<<")," v",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",r({parentName:"code"},{className:"token function"}),"sum"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"<<")," std",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"::"),"endl",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(s.a)("span",r({parentName:"code"},{className:"token comment"}),"// Error!"),"\nv",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"["),Object(s.a)("span",r({parentName:"code"},{className:"token number"}),"10"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.a)("span",r({parentName:"code"},{className:"token number"}),"2"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n")),Object(s.a)("p",null,"The implementation is quite simple: we have a regular C++ struct with one type parameter for the length of the vector:"),Object(s.a)("pre",r({},{className:"language-cpp"}),Object(s.a)("code",r({parentName:"pre"},{className:"language-cpp"}),Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"template"),Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"int")," D",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),">"),"\n",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"struct")," ",Object(s.a)("span",r({parentName:"code"},{className:"token class-name"}),"Vector")," ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"static")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"constexpr")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"unsigned")," N ",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"=")," D",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"int")," data",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"["),"N",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"]"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n  \n  ",Object(s.a)("span",r({parentName:"code"},{className:"token function"}),"Vector"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),"Vector",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"<"),"D",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),">")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"const"),Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"&")," v",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"for")," ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"int")," i ",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.a)("span",r({parentName:"code"},{className:"token number"}),"0"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";")," i ",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"<")," N",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";")," ",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"++"),"i",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),"\n      data",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"["),"i",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"=")," v",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"["),"i",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"]"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n  ",Object(s.a)("span",r({parentName:"code"},{className:"token function"}),"Vector"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"int")," fill ",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.a)("span",r({parentName:"code"},{className:"token number"}),"0"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"for")," ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"int")," i ",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.a)("span",r({parentName:"code"},{className:"token number"}),"0"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";")," i ",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"<")," N",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";")," ",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"++"),"i",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),"\n      data",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"["),"i",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"=")," fill",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n  ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"int")," ",Object(s.a)("span",r({parentName:"code"},{className:"token function"}),"sum"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"int")," result ",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.a)("span",r({parentName:"code"},{className:"token number"}),"0"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"for")," ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"int")," i ",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.a)("span",r({parentName:"code"},{className:"token number"}),"0"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";")," i ",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"<")," N",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";")," ",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"++"),"i",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),"\n      result ",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"+=")," data",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"["),"i",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"]"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),"\n    ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"return")," result",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n  ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"int"),Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"*")," ",Object(s.a)("span",r({parentName:"code"},{className:"token function"}),"begin"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"return")," ",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"&"),"data",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"["),Object(s.a)("span",r({parentName:"code"},{className:"token number"}),"0"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"]"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";")," ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"int"),Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"*")," ",Object(s.a)("span",r({parentName:"code"},{className:"token function"}),"end"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"return")," ",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"&"),"data",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"["),"N",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"]"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";")," ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n  ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"int")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"const"),Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"*")," ",Object(s.a)("span",r({parentName:"code"},{className:"token function"}),"begin"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"return")," ",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"&"),"data",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"["),Object(s.a)("span",r({parentName:"code"},{className:"token number"}),"0"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"]"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";")," ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"int")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"const"),Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"*")," ",Object(s.a)("span",r({parentName:"code"},{className:"token function"}),"end"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"return")," ",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"&"),"data",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"["),"N",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"]"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";")," ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n  ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"int"),Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"&")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"operator"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"["),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"unsigned")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"const"),Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"&")," i",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"if")," ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),"N ",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"<=")," i",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"throw")," ",Object(s.a)("span",r({parentName:"code"},{className:"token string"}),'"out of bound"'),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"return")," data",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"["),"i",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"]"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n  ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"int")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"const"),Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"&")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"operator"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"["),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"unsigned")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"const"),Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"&")," i",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"if")," ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),"N ",Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"<=")," i",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"throw")," ",Object(s.a)("span",r({parentName:"code"},{className:"token string"}),'"out of bound"'),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"return")," data",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"["),"i",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"]"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n")),Object(s.a)("p",null,"However, we could also implement this class using the preprocessor!"),Object(s.a)("pre",r({},{className:"language-cpp"}),Object(s.a)("code",r({parentName:"pre"},{className:"language-cpp"}),"\n",Object(s.a)("span",r({parentName:"code"},{className:"token macro property"}),Object(s.a)("span",r({parentName:"span"},{className:"token directive-hash"}),"#"),Object(s.a)("span",r({parentName:"span"},{className:"token directive keyword"}),"define")," ",Object(s.a)("span",r({parentName:"span"},{className:"token macro-name function"}),"CREATE_VECTOR"),Object(s.a)("span",r({parentName:"span"},{className:"token expression"}),Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),"("),"D",Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),")")," "),Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),"\\"),"\n",Object(s.a)("span",r({parentName:"span"},{className:"token expression"}),Object(s.a)("span",r({parentName:"span"},{className:"token keyword"}),"struct")," ",Object(s.a)("span",r({parentName:"span"},{className:"token class-name"}),"Vector_")),Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),"##"),Object(s.a)("span",r({parentName:"span"},{className:"token expression"}),"D ",Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),"{")),Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),"\\"),"\n  ",Object(s.a)("span",r({parentName:"span"},{className:"token expression"}),Object(s.a)("span",r({parentName:"span"},{className:"token keyword"}),"static")," ",Object(s.a)("span",r({parentName:"span"},{className:"token keyword"}),"constexpr")," ",Object(s.a)("span",r({parentName:"span"},{className:"token keyword"}),"int")," N ",Object(s.a)("span",r({parentName:"span"},{className:"token operator"}),"=")," D",Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),";")),Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),"\\"),"\n  ",Object(s.a)("span",r({parentName:"span"},{className:"token expression"}),Object(s.a)("span",r({parentName:"span"},{className:"token keyword"}),"int")," data",Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),"["),"N",Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),"]"),Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),";")),Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),"\\"),"\n",Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),"\\"),"\n  ",Object(s.a)("span",r({parentName:"span"},{className:"token expression"}),"Vector_"),Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),"##"),Object(s.a)("span",r({parentName:"span"},{className:"token expression"}),Object(s.a)("span",r({parentName:"span"},{className:"token function"}),"D")," ",Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),"("),"Vector_"),Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),"##"),Object(s.a)("span",r({parentName:"span"},{className:"token expression"}),"D ",Object(s.a)("span",r({parentName:"span"},{className:"token keyword"}),"const"),Object(s.a)("span",r({parentName:"span"},{className:"token operator"}),"&")," v",Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),")")," ",Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),"{")),Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),"\\"),"\n    ",Object(s.a)("span",r({parentName:"span"},{className:"token expression"}),Object(s.a)("span",r({parentName:"span"},{className:"token keyword"}),"for"),Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),"("),Object(s.a)("span",r({parentName:"span"},{className:"token keyword"}),"int")," i",Object(s.a)("span",r({parentName:"span"},{className:"token operator"}),"="),Object(s.a)("span",r({parentName:"span"},{className:"token number"}),"0"),Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),";")," i",Object(s.a)("span",r({parentName:"span"},{className:"token operator"}),"<"),"N ",Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),";")," ",Object(s.a)("span",r({parentName:"span"},{className:"token operator"}),"++"),"i",Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),")")," ",Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),"{")),Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),"\\"),"\n      ",Object(s.a)("span",r({parentName:"span"},{className:"token expression"}),"data",Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),"["),"i",Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),"]")," ",Object(s.a)("span",r({parentName:"span"},{className:"token operator"}),"=")," v",Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),"["),"i",Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),"]"),Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),";")),Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),"\\"),"\n    ",Object(s.a)("span",r({parentName:"span"},{className:"token expression"}),Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),"}")),Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),"\\"),"\n  ",Object(s.a)("span",r({parentName:"span"},{className:"token expression"}),Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),"}")),Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),"\\"),"\n",Object(s.a)("span",r({parentName:"span"},{className:"token punctuation"}),"\\"),"\n"),"\n",Object(s.a)("span",r({parentName:"code"},{className:"token comment"}),"// etc..."),"\n")),Object(s.a)("p",null,"These two implementations give us equivalent functionality. However, for a given size N, the first generates a vector class using templates and the second using macros."),Object(s.a)("p",null,Object(s.a)("strong",{parentName:"p"},"The question is: which compiles faster?")),Object(s.a)("p",null,"To compare the two approaches, we wrote a small code snippet that uses vector classes from length 0 to 256. We also tested another approach, where we took the macro implementation but ran the preprocessor ",Object(s.a)("em",{parentName:"p"},"before")," the test. This is equivalent to writing every class by hand!"),Object(s.a)("p",null,"We compiled each version 100 times and measured how long it took. Here are the results:"),Object(s.a)("table",null,Object(s.a)("thead",{parentName:"table"},Object(s.a)("tr",{parentName:"thead"},Object(s.a)("th",r({parentName:"tr"},{align:null}),"CXX"),Object(s.a)("th",r({parentName:"tr"},{align:null}),"Macros"),Object(s.a)("th",r({parentName:"tr"},{align:null}),"Preprocessed Macros"),Object(s.a)("th",r({parentName:"tr"},{align:null}),"Templates"))),Object(s.a)("tbody",{parentName:"table"},Object(s.a)("tr",{parentName:"tbody"},Object(s.a)("td",r({parentName:"tr"},{align:null}),"clang 4.0"),Object(s.a)("td",r({parentName:"tr"},{align:null}),"40s"),Object(s.a)("td",r({parentName:"tr"},{align:null}),"37s"),Object(s.a)("td",r({parentName:"tr"},{align:null}),"30s")),Object(s.a)("tr",{parentName:"tbody"},Object(s.a)("td",r({parentName:"tr"},{align:null}),"g++ 6.2"),Object(s.a)("td",r({parentName:"tr"},{align:null}),"61s"),Object(s.a)("td",r({parentName:"tr"},{align:null}),"66s"),Object(s.a)("td",r({parentName:"tr"},{align:null}),"48s")))),Object(s.a)("h3",null,"Conclusion"),Object(s.a)("p",null,"The results show that for this example, ",Object(s.a)("em",{parentName:"p"},"compiling templates is faster than the equivalent macro version"),"! On top of that, templates are more maintainable, since the code is not duplicated, and the compiler can give better error messages."),Object(s.a)("p",null,"If you consider how templates work, then this makes a great deal of sense. Instantiating a template is just a replacement of its template-parameters with concrete values or types. With code generation, we must parse the C++ and build the AST from scratch for each macro-result."),Object(s.a)("p",null,Object(s.a)("strong",{parentName:"p"},"But What About Incremental Builds?")),Object(s.a)("p",null,"This test leaves out incremental builds. One advantage of using code-generation (it is claimed!) is that implementation of each vector class can be put inside of its own translation-unit, meaning that it does not have to be recompiled every time that it is used."),Object(s.a)("p",null,"However, we can achieve the same effect using templates! C++ 11 introduced the extern template construct, which tells the compiler that a template is compiled in another translation-unit:"),Object(s.a)("pre",r({},{className:"language-cpp"}),Object(s.a)("code",r({parentName:"pre"},{className:"language-cpp"}),"\n",Object(s.a)("span",r({parentName:"code"},{className:"token comment"}),"// Vector<16> is in another binary"),"\n",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"extern")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"template")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"class")," ",Object(s.a)("span",r({parentName:"code"},{className:"token class-name"}),"Vector"),Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",r({parentName:"code"},{className:"token number"}),"16"),Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),">"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n")),Object(s.a)("p",null,Object(s.a)("inlineCode",{parentName:"p"},"extern template")," is like a forward declaration for templates."),Object(s.a)("p",null,"We can use this construct to pull the most common template instantiations into their own translation-unit, dramatically decreasing incremental build times."),Object(s.a)("pre",r({},{className:"language-cpp"}),Object(s.a)("code",r({parentName:"pre"},{className:"language-cpp"}),"\n",Object(s.a)("span",r({parentName:"code"},{className:"token macro property"}),Object(s.a)("span",r({parentName:"span"},{className:"token directive-hash"}),"#"),Object(s.a)("span",r({parentName:"span"},{className:"token directive keyword"}),"include")," ",Object(s.a)("span",r({parentName:"span"},{className:"token string"}),"<vector.hpp>")),"\n\n",Object(s.a)("span",r({parentName:"code"},{className:"token comment"}),"// Instantiation of common sizes"),"\n",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"template")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"class")," ",Object(s.a)("span",r({parentName:"code"},{className:"token class-name"}),"Vector"),Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",r({parentName:"code"},{className:"token number"}),"16"),Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),">"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"template")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"class")," ",Object(s.a)("span",r({parentName:"code"},{className:"token class-name"}),"Vector"),Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",r({parentName:"code"},{className:"token number"}),"32"),Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),">"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"template")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"class")," ",Object(s.a)("span",r({parentName:"code"},{className:"token class-name"}),"Vector"),Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",r({parentName:"code"},{className:"token number"}),"64"),Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),">"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"template")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"class")," ",Object(s.a)("span",r({parentName:"code"},{className:"token class-name"}),"Vector"),Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",r({parentName:"code"},{className:"token number"}),"128"),Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),">"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n")),Object(s.a)("p",null,"And we extern template the common cases in the vector header to prevent consumers from compiling their own version."),Object(s.a)("pre",r({},{className:"language-cpp"}),Object(s.a)("code",r({parentName:"pre"},{className:"language-cpp"}),Object(s.a)("span",r({parentName:"code"},{className:"token comment"}),"// ..."),"\n",Object(s.a)("span",r({parentName:"code"},{className:"token comment"}),"// Vector class above"),"\n\n",Object(s.a)("span",r({parentName:"code"},{className:"token comment"}),"// Forward declaration of common sizes"),"\n",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"extern")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"template")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"class")," ",Object(s.a)("span",r({parentName:"code"},{className:"token class-name"}),"Vector"),Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",r({parentName:"code"},{className:"token number"}),"16"),Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),">"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"extern")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"template")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"class")," ",Object(s.a)("span",r({parentName:"code"},{className:"token class-name"}),"Vector"),Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",r({parentName:"code"},{className:"token number"}),"32"),Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),">"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"extern")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"template")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"class")," ",Object(s.a)("span",r({parentName:"code"},{className:"token class-name"}),"Vector"),Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",r({parentName:"code"},{className:"token number"}),"64"),Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),">"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"extern")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"template")," ",Object(s.a)("span",r({parentName:"code"},{className:"token keyword"}),"class")," ",Object(s.a)("span",r({parentName:"code"},{className:"token class-name"}),"Vector"),Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",r({parentName:"code"},{className:"token number"}),"128"),Object(s.a)("span",r({parentName:"code"},{className:"token operator"}),">"),Object(s.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n")),Object(s.a)("p",null,"We then ran an incremental build (vector.cpp already compiled). The results speak for themselves:"),Object(s.a)("table",null,Object(s.a)("thead",{parentName:"table"},Object(s.a)("tr",{parentName:"thead"},Object(s.a)("th",r({parentName:"tr"},{align:null}),"CXX"),Object(s.a)("th",r({parentName:"tr"},{align:null}),"Templates"),Object(s.a)("th",r({parentName:"tr"},{align:null}),"Templates with Forward Decls"))),Object(s.a)("tbody",{parentName:"table"},Object(s.a)("tr",{parentName:"tbody"},Object(s.a)("td",r({parentName:"tr"},{align:null}),"clang 4.0"),Object(s.a)("td",r({parentName:"tr"},{align:null}),"30s"),Object(s.a)("td",r({parentName:"tr"},{align:null}),"12s compile + 16s link")),Object(s.a)("tr",{parentName:"tbody"},Object(s.a)("td",r({parentName:"tr"},{align:null}),"g++ 6.2"),Object(s.a)("td",r({parentName:"tr"},{align:null}),"48s"),Object(s.a)("td",r({parentName:"tr"},{align:null}),"14s compile + 12s link")))),Object(s.a)("p",null,"Next time you are trying to improve your incremental build times, consider forward declaring your templates!"),Object(s.a)("p",null,Object(s.a)("img",r({parentName:"p"},{src:"https://cdn-images-1.medium.com/max/2272/1*0hqOaABQ7XGPT-OYNgiUBg.png",alt:null}))),Object(s.a)("p",null,Object(s.a)("img",r({parentName:"p"},{src:"https://cdn-images-1.medium.com/max/2272/1*Vgw1jkA6hgnvwzTsfMlnpg.png",alt:null}))),Object(s.a)("p",null,Object(s.a)("img",r({parentName:"p"},{src:"https://cdn-images-1.medium.com/max/2272/1*gKBpq1ruUi0FVK2UM_I4tQ.png",alt:null}))),Object(s.a)("blockquote",null,Object(s.a)("p",{parentName:"blockquote"},Object(s.a)("a",r({parentName:"p"},{href:"http://bit.ly/Hackernoon"}),"Hacker Noon")," is how hackers start their afternoons. We\u2019re a part of the ",Object(s.a)("a",r({parentName:"p"},{href:"http://bit.ly/atAMIatAMI"}),"@AMI")," family. We are now ",Object(s.a)("a",r({parentName:"p"},{href:"http://bit.ly/hackernoonsubmission"}),"accepting submissions")," and happy to ",Object(s.a)("a",r({parentName:"p"},{href:"mailto:partners@amipublications.com"}),"discuss advertising & sponsorship")," opportunities.\nIf you enjoyed this story, we recommend reading our ",Object(s.a)("a",r({parentName:"p"},{href:"http://bit.ly/hackernoonlatestt"}),"latest tech stories")," and ",Object(s.a)("a",r({parentName:"p"},{href:"https://hackernoon.com/trending"}),"trending tech stories"),". Until next time, don\u2019t take the realities of the world for granted!")),Object(s.a)("p",null,Object(s.a)("img",r({parentName:"p"},{src:"https://cdn-images-1.medium.com/max/30000/1*35tCjoPcvq6LbB3I6Wegqw.jpeg",alt:null}))))}b.isMDXComponent=!0}},[["7tP2",0,2,1,3,4]]]);