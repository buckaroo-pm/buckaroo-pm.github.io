_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[10],{"29mr":function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/blog/a-tour-of-cpp17-constexpr-if",function(){return t("GjHQ")}])},GjHQ:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return r})),t.d(a,"default",(function(){return u}));var n=t("rePB"),c=t("Ff2n"),s=(t("q1tI"),t("7ljp")),o=t("ZDfL");function p(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function m(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?p(Object(t),!0).forEach((function(a){Object(n.a)(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}var r={title:"A Tour of C++ 17: If Constexpr",created:"2017-05-31T22:00:00.000Z",author:"Team Buckaroo",banner:"/posts/tour2017.jpeg",__resourcePath:"blog/a-tour-of-cpp17-constexpr-if.md",__scans:{},layout:"index"},N={frontMatter:r},l=o.a;function u(e){var a=e.components,t=Object(c.a)(e,["components"]);return Object(s.a)(l,m(m(m({},N),t),{},{components:a,mdxType:"MDXLayout"}),Object(s.a)("p",null,"We are excited to see that if-constexpr has made it into C++ 17! In this post, we will look at some C++ 14 code and show how we can make it simpler and more concise using this new language feature."),Object(s.a)("h2",null,"Introduction"),Object(s.a)("p",null,"Before diving into ",Object(s.a)("strong",{parentName:"p"},"if-constexpr"),", it might be useful to have a quick recap of constexpr. Introduced in C++ 11, constexpr is a keyword that marks an expression or function as having a ",Object(s.a)("em",{parentName:"p"},"compile-time constant result"),"."),Object(s.a)("pre",m({},{className:"language-cpp"}),Object(s.a)("code",m({parentName:"pre"},{className:"language-cpp"}),Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"constexpr")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"int")," ",Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"square"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"int")," x",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{")," \n  ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"return")," x ",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"*")," x",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"int")," ",Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"main"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"return")," ",Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"square"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",m({parentName:"code"},{className:"token number"}),"4"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(s.a)("p",null,"And, of course, this will optimized away by the compiler:"),Object(s.a)("pre",m({},{className:"language-nasm"}),Object(s.a)("code",m({parentName:"pre"},{className:"language-nasm"}),Object(s.a)("span",m({parentName:"code"},{className:"token label function"}),"main:")," \n    mov     ",Object(s.a)("span",m({parentName:"code"},{className:"token register variable"}),"eax"),", ",Object(s.a)("span",m({parentName:"code"},{className:"token number"}),"16"),"\n    ret\n")),Object(s.a)("p",null,"OK, so you might be wondering what the purpose of ",Object(s.a)("inlineCode",{parentName:"p"},"constexpr")," is. After all, isn\u2019t the compiler smart enough to optimize functions like this, even when they are not marked as ",Object(s.a)("inlineCode",{parentName:"p"},"constexpr"),"?"),Object(s.a)("p",null,"The real value of ",Object(s.a)("inlineCode",{parentName:"p"},"constexpr")," is as a ",Object(s.a)("em",{parentName:"p"},"guarantee")," that the function will be computable at compile-time. This prevents nasty side-effects sneaking into your code as it evolves, and it allows the compiler to do some clever things:"),Object(s.a)("ul",null,Object(s.a)("li",{parentName:"ul"},Object(s.a)("p",{parentName:"li"},"Unlike templates and preprocessor macros, ",Object(s.a)("inlineCode",{parentName:"p"},"constexpr")," allows for loops and recursion at compile-time without extreme boilerplate.")),Object(s.a)("li",{parentName:"ul"},Object(s.a)("p",{parentName:"li"},Object(s.a)("inlineCode",{parentName:"p"},"constexpr")," functions can be used as regular functions, although internally they have greater restrictions.")),Object(s.a)("li",{parentName:"ul"},Object(s.a)("p",{parentName:"li"},Object(s.a)("inlineCode",{parentName:"p"},"constexpr")," functions can easily be converted into regular functions as requirements change.")),Object(s.a)("li",{parentName:"ul"},Object(s.a)("p",{parentName:"li"},Object(s.a)("inlineCode",{parentName:"p"},"constexpr")," functions compile much quicker than the equivalent template-based solutions, which scale linearly with the depth of the template-recursion."))),Object(s.a)("h3",null,"Compile-time Fibonacci"),Object(s.a)("p",null,"As an example, take a look at these two compile-time implementations of the Fibonacci sequence:"),Object(s.a)("pre",m({},{className:"language-cpp"}),Object(s.a)("code",m({parentName:"pre"},{className:"language-cpp"}),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"template"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"unsigned")," n",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"struct")," ",Object(s.a)("span",m({parentName:"code"},{className:"token class-name"}),"Fibonacci")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"static")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"unsigned")," value ",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"=")," Fibonacci",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),"n ",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"-")," ",Object(s.a)("span",m({parentName:"code"},{className:"token number"}),"1"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"::"),"value ",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"+")," Fibonacci",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),"n ",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"-")," ",Object(s.a)("span",m({parentName:"code"},{className:"token number"}),"2"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"::"),"value",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"template"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"struct")," ",Object(s.a)("span",m({parentName:"code"},{className:"token class-name"}),"Fibonacci"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",m({parentName:"code"},{className:"token number"}),"0"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"static")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"unsigned")," value ",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.a)("span",m({parentName:"code"},{className:"token number"}),"0"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"template"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"struct")," ",Object(s.a)("span",m({parentName:"code"},{className:"token class-name"}),"Fibonacci"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",m({parentName:"code"},{className:"token number"}),"1"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"static")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"unsigned")," value ",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.a)("span",m({parentName:"code"},{className:"token number"}),"1"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"int")," ",Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"main"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"return")," Fibonacci",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",m({parentName:"code"},{className:"token number"}),"5"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"::"),"value",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"   \n",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(s.a)("pre",m({},{className:"language-cpp"}),Object(s.a)("code",m({parentName:"pre"},{className:"language-cpp"}),Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"constexpr")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"unsigned")," ",Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"fibonacci"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"unsigned")," x",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"return")," x ",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<=")," ",Object(s.a)("span",m({parentName:"code"},{className:"token number"}),"1")," ",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"?")," \n    ",Object(s.a)("span",m({parentName:"code"},{className:"token number"}),"1")," ",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),":")," \n    ",Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"fibonacci"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),"x ",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"-")," ",Object(s.a)("span",m({parentName:"code"},{className:"token number"}),"1"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"+")," ",Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"fibonacci"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),"x ",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"-")," ",Object(s.a)("span",m({parentName:"code"},{className:"token number"}),"2"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"int")," ",Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"main"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"return")," ",Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"fibonacci"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",m({parentName:"code"},{className:"token number"}),"5"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(s.a)("h3",null,"So what is ",Object(s.a)("strong",{parentName:"h3"},"if-constexpr"),"?"),Object(s.a)("p",null,"In short, ",Object(s.a)("strong",{parentName:"p"},"if-constexpr")," extends the compile-time subset of the C++ language to include if-statements. What\u2019s more, if a branch of the ",Object(s.a)("strong",{parentName:"p"},"if-constexpr")," is not hit, then it will not even be compiled."),Object(s.a)("p",null,"With ",Object(s.a)("strong",{parentName:"p"},"if-constexpr")," at your disposal, you don\u2019t need to resort to elaborate meta-programming techniques like template pattern-matching and SFINAE."),Object(s.a)("p",null,"Let\u2019s look at some examples."),Object(s.a)("h2",null,"Example 1 \u2014 getting the nth-arg"),Object(s.a)("p",null,"Many template meta-programs operate on variadic-type-lists. In C++ 14, getting the nth-type of an argument lists is often implemented using complex templating:"),Object(s.a)("pre",m({},{className:"language-cpp"}),Object(s.a)("code",m({parentName:"pre"},{className:"language-cpp"}),Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"template"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"unsigned")," n",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"struct")," ",Object(s.a)("span",m({parentName:"code"},{className:"token class-name"}),"Arg")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"template"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"class")," ",Object(s.a)("span",m({parentName:"code"},{className:"token class-name"}),"X"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),",")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"class"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),"Xs",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">"),"\n ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"constexpr")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"auto")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"operator"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),"X x",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),",")," Xs",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),"xs",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n   ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"return")," Arg",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),"n ",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"-")," ",Object(s.a)("span",m({parentName:"code"},{className:"token number"}),"1"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),"xs",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"template"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"struct")," ",Object(s.a)("span",m({parentName:"code"},{className:"token class-name"}),"Arg"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",m({parentName:"code"},{className:"token number"}),"0"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"template"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"class")," ",Object(s.a)("span",m({parentName:"code"},{className:"token class-name"}),"X"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),",")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"class"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),"Xs",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">"),"\n ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"constexpr")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"auto")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"operator"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),"X x",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),",")," Xs",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n   ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"return")," x",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"template"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"unsigned")," n",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">"),"\n\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"constexpr")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"auto")," arg ",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"=")," Arg",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),"n",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(s.a)("span",m({parentName:"code"},{className:"token comment"}),"// arg<2>(0, 1, 2, 3, 4, 5) == 2;"),"\n")),Object(s.a)("p",null,"C++ 17 makes this much more intuitive:"),Object(s.a)("pre",m({},{className:"language-cpp"}),Object(s.a)("code",m({parentName:"pre"},{className:"language-cpp"}),Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"template"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"unsigned")," n",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"struct")," ",Object(s.a)("span",m({parentName:"code"},{className:"token class-name"}),"Get")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"template"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"class")," ",Object(s.a)("span",m({parentName:"code"},{className:"token class-name"}),"X"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),",")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"class"),"\u2026Xs",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">"),"\n ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"constexpr")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"auto")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"operator"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),"X x",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),",")," Xs\u2026xs",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n   ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"if")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"constexpr"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),"n ",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"sizeof"),"\u2026",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),"xs",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n     ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"return"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n   ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"else")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"if")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"constexpr"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),"n ",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">")," ",Object(s.a)("span",m({parentName:"code"},{className:"token number"}),"0"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n     ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"return")," Get",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),"n",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"-"),Object(s.a)("span",m({parentName:"code"},{className:"token number"}),"1"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),"xs\u2026",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n   ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"else")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n     ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"return")," x",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n   ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),"\n ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n")),Object(s.a)("h2",null,"Example 2 \u2014 API-shimming"),Object(s.a)("p",null,"Sometimes you want to support an alternative API. C++ 14 provides an easy way to check if an object can be used in a certain way:"),Object(s.a)("pre",m({},{className:"language-cpp"}),Object(s.a)("code",m({parentName:"pre"},{className:"language-cpp"}),Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"template"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"class")," ",Object(s.a)("span",m({parentName:"code"},{className:"token class-name"}),"T"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"constexpr")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"auto")," ",Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"supportsAPI"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),"T x",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"->")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"decltype"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),"x",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"Method1"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),",")," x",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"Method2"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),",")," true_type",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"return")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"constexpr")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"auto")," ",Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"supportsAPI"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"->")," false_type ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"return")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(s.a)("p",null,"Then, implementing custom behaviour in C++ 14 can be done like this:"),Object(s.a)("pre",m({},{className:"language-cpp"}),Object(s.a)("code",m({parentName:"pre"},{className:"language-cpp"}),Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"template"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"class")," ",Object(s.a)("span",m({parentName:"code"},{className:"token class-name"}),"T"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"auto")," ",Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"compute"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),"T x",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"->")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"decltype"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"(")," enable_if_t",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<")," ",Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"supportsAPI"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),"T",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),",")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"int"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"return")," x",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"Method"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"template"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"class")," ",Object(s.a)("span",m({parentName:"code"},{className:"token class-name"}),"T"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"auto")," ",Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"compute"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),"T x",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"->")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"decltype"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"(")," enable_if_t",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"!"),Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"supportsAPI"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),"T",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),",")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"int"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"return")," ",Object(s.a)("span",m({parentName:"code"},{className:"token number"}),"0"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(s.a)("p",null,"The C++17 equivalent is much less verbose:"),Object(s.a)("pre",m({},{className:"language-cpp"}),Object(s.a)("code",m({parentName:"pre"},{className:"language-cpp"}),Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"template"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"class")," ",Object(s.a)("span",m({parentName:"code"},{className:"token class-name"}),"T"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"int")," ",Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"compute"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),"T x",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"if")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"constexpr"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"(")," ",Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"supportsAPI"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),"T",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n   ",Object(s.a)("span",m({parentName:"code"},{className:"token comment"}),"// only gets compiled if the condition is true"),"\n   ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"return")," x",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"Method"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"else")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n   ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"return")," ",Object(s.a)("span",m({parentName:"code"},{className:"token number"}),"0"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(s.a)("p",null,"This is very convenient as code that belongs semantically together is not scattered across multiple functions. Furthermore, you can even define lambdas containing ",Object(s.a)("strong",{parentName:"p"},"if-constexpr"),"."),Object(s.a)("h2",null,"Example 3 \u2014 Compile-time algorithm-picking"),Object(s.a)("p",null,"Often you need to find the best algorithm based on the properties of a type. There are many solutions. For instance, the STL uses \u201ctype tags\u201d to pick the right algorithm for some given iterators:"),Object(s.a)("pre",m({},{className:"language-cpp"}),Object(s.a)("code",m({parentName:"pre"},{className:"language-cpp"}),Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"struct")," ",Object(s.a)("span",m({parentName:"code"},{className:"token class-name"}),"FooTag")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"struct")," ",Object(s.a)("span",m({parentName:"code"},{className:"token class-name"}),"BarTag")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"auto")," ",Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"foldFF"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"auto")," ",Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"foldFB"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"auto")," ",Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"foldBF"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"auto")," ",Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"foldBB"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"."),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"struct")," ",Object(s.a)("span",m({parentName:"code"},{className:"token class-name"}),"A")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n ",Object(s.a)("span",m({parentName:"code"},{className:"token comment"}),"/* ... */"),"\n ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"using")," tag ",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"=")," FooTag",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"struct")," ",Object(s.a)("span",m({parentName:"code"},{className:"token class-name"}),"B")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n ",Object(s.a)("span",m({parentName:"code"},{className:"token comment"}),"/* ... */"),"\n ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"using")," tag ",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"=")," BarTag",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"template"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"class")," ",Object(s.a)("span",m({parentName:"code"},{className:"token class-name"}),"L"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),",")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"class")," ",Object(s.a)("span",m({parentName:"code"},{className:"token class-name"}),"R"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"auto")," ",Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"fold"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),"L l",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),",")," R r",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),",")," FooTag",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),",")," BarTag",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{")," ",Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"foldFB"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),"l",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),",")," r",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token comment"}),"/* more dispatching functions*/"),"\n\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"template"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"class")," ",Object(s.a)("span",m({parentName:"code"},{className:"token class-name"}),"L"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),",")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"class")," ",Object(s.a)("span",m({parentName:"code"},{className:"token class-name"}),"R"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"auto")," ",Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"fold"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),"L l",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),",")," R r",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"return")," ",Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"fold"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),"l",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),",")," r",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),",")," \n ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"typename")," ",Object(s.a)("span",m({parentName:"code"},{className:"token class-name"}),"L"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"::"),"tag",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),","),"\n ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"typename")," ",Object(s.a)("span",m({parentName:"code"},{className:"token class-name"}),"R"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"::"),"tag",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(s.a)("p",null,"However, once you have more complex rules, you might need a more powerful solution \u2014 ",Object(s.a)("a",m({parentName:"p"},{href:"http://en.cppreference.com/w/cpp/language/sfinae"}),"SFINAE"),":"),Object(s.a)("p",null,"C++ 14:"),Object(s.a)("pre",m({},{className:"language-cpp"}),Object(s.a)("code",m({parentName:"pre"},{className:"language-cpp"}),Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"struct")," ",Object(s.a)("span",m({parentName:"code"},{className:"token class-name"}),"BazTag")," ",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),":")," ",Object(s.a)("span",m({parentName:"code"},{className:"token base-clause"}),Object(s.a)("span",m({parentName:"span"},{className:"token class-name"}),"FooTag"),Object(s.a)("span",m({parentName:"span"},{className:"token punctuation"}),",")," ",Object(s.a)("span",m({parentName:"span"},{className:"token class-name"}),"BarTag"))," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"template"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"class")," ",Object(s.a)("span",m({parentName:"code"},{className:"token class-name"}),"L"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),",")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"class")," ",Object(s.a)("span",m({parentName:"code"},{className:"token class-name"}),"R"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),","),"\n  enable_if_t",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),"\n   is_same",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),"L",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"::"),"tag",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),",")," FooTag",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"::"),"value ",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"&&")," \n   is_base_of",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),"R",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"::"),"tag",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),",")," BarTag",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"::"),"value\n  ",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">")," ",Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"fold"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),"L l",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),",")," R r",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"return")," ",Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"foldFB"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),"l",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),",")," r",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(s.a)("p",null,"With** **C++ 17 you can describe these rules with less boilerplate and in a clearer way:"),Object(s.a)("pre",m({},{className:"language-cpp"}),Object(s.a)("code",m({parentName:"pre"},{className:"language-cpp"}),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"template"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"class")," ",Object(s.a)("span",m({parentName:"code"},{className:"token class-name"}),"L"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),",")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"class")," ",Object(s.a)("span",m({parentName:"code"},{className:"token class-name"}),"R"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"auto")," ",Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"fold"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),"L l",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),",")," R r",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"using")," lTag ",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"typename")," ",Object(s.a)("span",m({parentName:"code"},{className:"token class-name"}),"L"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"::"),"tag",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"using")," rTag ",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"typename")," ",Object(s.a)("span",m({parentName:"code"},{className:"token class-name"}),"R"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"::"),"tag",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"if")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"constexpr")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),"is_base_of",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),"rTag",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),",")," BarTag",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"::"),"value",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"if")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"constexpr")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),"is_same",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"<"),"lTag",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),",")," FooTag",Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),">"),Object(s.a)("span",m({parentName:"code"},{className:"token operator"}),"::"),"value",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n      ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"return")," ",Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"foldFB"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),"l",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),",")," r",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"else")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n      ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"return")," ",Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"foldBB"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),"l",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),",")," r",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}")," ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"else")," ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(s.a)("span",m({parentName:"code"},{className:"token keyword"}),"return")," ",Object(s.a)("span",m({parentName:"code"},{className:"token function"}),"foldFF"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),")"),Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(s.a)("span",m({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(s.a)("p",null,"This is very practical as working with if-statements is more intuitive than using a variety of language-features."),Object(s.a)("p",null,"Refactoring meta-functions becomes as simple as ordinary code. With ",Object(s.a)("strong",{parentName:"p"},"if-constexpr"),", worrying about ambiguous overloads and other unexpected complications is a thing of the past."))}u.isMDXComponent=!0}},[["29mr",0,2,1,3,4]]]);