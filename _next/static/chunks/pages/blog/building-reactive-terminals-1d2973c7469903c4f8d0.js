_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[15],{DXlN:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return m})),t.d(a,"default",(function(){return u}));var n=t("rePB"),c=t("Ff2n"),o=(t("q1tI"),t("7ljp")),s=t("ZDfL");function p(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function r(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?p(Object(t),!0).forEach((function(a){Object(n.a)(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}var m={title:"Building Reactive Terminal Interfaces in C++",banner:"/posts/rxterm.gif",author:"Team Buckaroo",created:"2017-08-21T11:00:00.000Z",__resourcePath:"blog/building-reactive-terminals.md",__scans:{},layout:"index"},N={frontMatter:m},l=s.a;function u(e){var a=e.components,t=Object(c.a)(e,["components"]);return Object(o.a)(l,r(r(r({},N),t),{},{components:a,mdxType:"MDXLayout"}),Object(o.a)("h2",null,"TL;DR"),Object(o.a)("p",null,"Using functional programming techniques, we can easily build fancy terminals with dynamic components in C++. ",Object(o.a)("a",r({parentName:"p"},{href:"https://github.com/loopperfect/rxterm"}),"RxTerm")," is a C++ library that provides some of the necessary building blocks for implementing this concept."),Object(o.a)("p",null,"We applied the same ideas in ",Object(o.a)("a",r({parentName:"p"},{href:"https://buckaroo.pm"}),"Buckaroo"),". This is the result:"),Object(o.a)("p",null,Object(o.a)("img",r({parentName:"p"},{src:"/posts/rxterm.gif",alt:null}))),Object(o.a)("h2",null,"Motivation"),Object(o.a)("p",null,"Imagine that we want to build a text-based application that updates the console as its state changes. A great example of this is Curl, which gives a live progress bar for downloads. Try this in your teminal:"),Object(o.a)("pre",null,Object(o.a)("code",r({parentName:"pre"},{}),"curl http://www.openss7.org/repos/tarballs/strx25-0.9.2.1.tar.bz2 > /dev/null\n")),Object(o.a)("p",null,"Such interfaces are implemented using ",Object(o.a)("a",r({parentName:"p"},{href:"https://en.wikipedia.org/wiki/ANSI_escape_code"}),"ANSI escape codes"),". These are invisible characters that have side-effects, such as erasing characters and moving the cursor."),Object(o.a)("p",null,"We can use these escape codes to create live text interfaces. A simple implementation might update a progress bar like this:"),Object(o.a)("pre",r({},{className:"language-js"}),Object(o.a)("code",r({parentName:"pre"},{className:"language-js"}),Object(o.a)("span",r({parentName:"code"},{className:"token comment"}),"// Pseudo-code"),"\n",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"function")," ",Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"updateProgressBar"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"print")," ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),"eraseCharEscapeCode ",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"*")," lastProgressBarLength",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"print")," ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),"\u2018#\u2019 ",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"*")," progressBarLength",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n  lastProgressBarLength ",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"=")," progressBarLength",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(o.a)("p",null,"So far so good, but what if we have more complicated case? Ideally, we would leverage a library that figures these things out for us. We should only have to specify what the terminal output should look like, and the library functions would figure out the characters to print to get us there."),Object(o.a)("p",null,"So, at a high-level, we need three things:"),Object(o.a)("ol",null,Object(o.a)("li",{parentName:"ol"},"A variable to track the previous state of the console"),Object(o.a)("li",{parentName:"ol"},"A function for rendering the current application state"),Object(o.a)("li",{parentName:"ol"},"A function for transforming the console from the previous state to the next state")),Object(o.a)("p",null,Object(o.a)("a",r({parentName:"p"},{href:"https://facebook.github.io/react/"}),"React")," developers will be familiar with this pattern. It\u2019s a clever strategy that can actually be applied to any I/O device!"),Object(o.a)("p",null,"Additionally, we want to be able leverage reusable UI components for things like progress-bars, lists and so on. Something like HTML, but simpler, would be ideal. A component would be any object than can be rendered to console output."),Object(o.a)("h2",null,"Simple API Example"),Object(o.a)("p",null,"To see where we are going, let\u2019s take a look at an example in ",Object(o.a)("a",r({parentName:"p"},{href:"https://github.com/LoopPerfect/rxterm"}),"RxTerm"),". With RxTerm, we can turn basic terminal components into more complex ones using composition. If the app-state changes, then we compute a new view for the terminal and replace the currently visible output."),Object(o.a)("p",null,"This example shows how we can design a new component called fancyCounter, which prints frames like this:"),Object(o.a)("p",null,Object(o.a)("img",r({parentName:"p"},{src:"https://cdn-images-1.medium.com/max/2000/1*SI86FEWso3OOTMRMRq0mBQ.png",alt:null}))),Object(o.a)("p",null,"Here\u2019s the code:"),Object(o.a)("p",null,Object(o.a)("img",r({parentName:"p"},{src:"/posts/rxterm-2.png",alt:null}))),Object(o.a)("p",null,"As you can see, the interface is very high-level."),Object(o.a)("h2",null,"ANSI Escape Codes"),Object(o.a)("p",null,"Let\u2019s start with the basics. How can we use ANSI escape codes to change the color and delete a line?"),Object(o.a)("pre",r({},{className:"language-cpp"}),Object(o.a)("code",r({parentName:"pre"},{className:"language-cpp"}),"\n",Object(o.a)("span",r({parentName:"code"},{className:"token macro property"}),Object(o.a)("span",r({parentName:"span"},{className:"token directive-hash"}),"#"),Object(o.a)("span",r({parentName:"span"},{className:"token directive keyword"}),"include")," ",Object(o.a)("span",r({parentName:"span"},{className:"token string"}),"<iostream>")),"\n\n",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"int")," ",Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"main"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),"\n  std",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"::"),"cout ",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"<<")," ",Object(o.a)("span",r({parentName:"code"},{className:"token string"}),'"\\e[31m"')," ",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"<<")," ",Object(o.a)("span",r({parentName:"code"},{className:"token string"}),'"Hello"')," ",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"<<")," ",Object(o.a)("span",r({parentName:"code"},{className:"token string"}),'"\\e[0m"')," ",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"<<"),' World" ',Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"<<")," std",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"::"),"endl",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"return")," ",Object(o.a)("span",r({parentName:"code"},{className:"token number"}),"0"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(o.a)("p",null,"This function prints ",Object(o.a)("inlineCode",{parentName:"p"},"Hello")," in red type followed by ",Object(o.a)("inlineCode",{parentName:"p"},"World")," in the default color. The magic escape sequences (",Object(o.a)("inlineCode",{parentName:"p"},"\\e[31m")," and ",Object(o.a)("inlineCode",{parentName:"p"},"\\e[0m"),") modify how the terminal displays characters."),Object(o.a)("p",null,Object(o.a)("strong",{parentName:"p"},Object(o.a)("em",{parentName:"strong"},"Hello World"))),Object(o.a)("p",null,"An escape sequence is introduced with \\e[ followed by a semicolon-separated-list of modifiers, terminated with m. For instance, \\e[3;31;42mTEXT would print TEXT in red italics on a blue background."),Object(o.a)("p",null,Object(o.a)("strong",{parentName:"p"},Object(o.a)("em",{parentName:"strong"},"TEXT"))),Object(o.a)("p",null,"We can also print \\e[0m to reset the terminal back to its default state."),Object(o.a)("p",null,"You can find a whole list on ",Object(o.a)("a",r({parentName:"p"},{href:"http://wiki.bash-hackers.org/scripting/terminalcodes"}),"bash-hackers.org"),"."),Object(o.a)("h2",null,"Abstracting the Terminal State"),Object(o.a)("p",null,"To be able to compose components, we need a high-level representation of the state of the console. Since we want to support colors, an intuitive representation of this is a map from coordinates to pixels:"),Object(o.a)("pre",r({},{className:"language-cpp"}),Object(o.a)("code",r({parentName:"pre"},{className:"language-cpp"}),"\n",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"enum")," ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"class")," ",Object(o.a)("span",r({parentName:"code"},{className:"token class-name"}),"Color")," ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{")," ",Object(o.a)("span",r({parentName:"code"},{className:"token comment"}),"/* ... */")," ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"enum")," ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"class")," ",Object(o.a)("span",r({parentName:"code"},{className:"token class-name"}),"Font")," ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{")," ",Object(o.a)("span",r({parentName:"code"},{className:"token comment"}),"/* ... */")," ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"struct")," ",Object(o.a)("span",r({parentName:"code"},{className:"token class-name"}),"Style")," ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),"\n  Color bg",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n  Color fg",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n  Font font",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"struct")," ",Object(o.a)("span",r({parentName:"code"},{className:"token class-name"}),"Pixel")," ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"char")," c",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n  Style s",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";")," ",Object(o.a)("span",r({parentName:"code"},{className:"token comment"}),"// Color and font"),"\n",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"struct")," ",Object(o.a)("span",r({parentName:"code"},{className:"token class-name"}),"Image")," ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),"\n \n  ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"unsigned")," ",Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"getWidth"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"const"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"unsigned")," ",Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"getHeight"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"const"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n \n  Pixel ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"const"),Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"&")," ",Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"get"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"unsigned")," x",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),",")," ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"unsigned")," y",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"const"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n  Pixel",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"&")," ",Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"get"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"unsigned")," x",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),",")," ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"unsigned")," y",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n \n  ",Object(o.a)("span",r({parentName:"code"},{className:"token comment"}),"// Renders the image to a string for the terminal"),"\n  std",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"::"),"string ",Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"toString"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"const"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n \n  ",Object(o.a)("span",r({parentName:"code"},{className:"token type-opencl-host-cpp keyword"}),"Image"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),"\n    ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"unsigned")," width",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),",")," \n    ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"unsigned")," height",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),",")," \n    std",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"::"),"vector",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"<"),"Pixel",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),">")," pixels",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n")),Object(o.a)("p",null,"Once we have the basic abstraction for components,\nwe can take advantage of type-erasure to maintain value-semantics and make inheritance an implementation detail:"),Object(o.a)("pre",r({},{className:"language-cpp"}),Object(o.a)("code",r({parentName:"pre"},{className:"language-cpp"}),Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"struct")," ",Object(o.a)("span",r({parentName:"code"},{className:"token class-name"}),"Renderable")," ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"virtual")," ",Object(o.a)("span",r({parentName:"code"},{className:"token type-opencl-host-cpp keyword"}),"Image")," ",Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"render"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"unsigned")," ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"const")," width",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"const")," ",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"=")," ",Object(o.a)("span",r({parentName:"code"},{className:"token number"}),"0"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"virtual")," ",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"~"),Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"Renderable"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"template"),Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"<"),Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"class")," ",Object(o.a)("span",r({parentName:"code"},{className:"token class-name"}),"T"),Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),">"),"\n",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"struct")," ",Object(o.a)("span",r({parentName:"code"},{className:"token class-name"}),"Model")," ",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),":")," ",Object(o.a)("span",r({parentName:"code"},{className:"token base-clause"}),Object(o.a)("span",r({parentName:"span"},{className:"token class-name"}),"Renderable"))," ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),"\n  \n  T data",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n  \n  ",Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"Model"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),"T ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"const"),Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"&")," data",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),":")," data",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{")," data ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),"\n  \n  virutal ",Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"ComponentModel"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"struct")," ",Object(o.a)("span",r({parentName:"code"},{className:"token class-name"}),"Component")," ",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),":")," ",Object(o.a)("span",r({parentName:"code"},{className:"token base-clause"}),Object(o.a)("span",r({parentName:"span"},{className:"token class-name"}),"Renderable"))," ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),"\n  \n  ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"template"),Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"<"),Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"class")," ",Object(o.a)("span",r({parentName:"code"},{className:"token class-name"}),"T"),Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),">"),"\n  ",Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"Component"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),"T data",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," \n    ",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),":")," pimpl",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),"make_shared",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"<"),"Model",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"<"),"T",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),">>"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),"data",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),"\n \n  ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"virtual")," ",Object(o.a)("span",r({parentName:"code"},{className:"token type-opencl-host-cpp keyword"}),"Image")," ",Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"render"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"unsigned")," ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"const")," width",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"const")," ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),"\n   ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"return")," pimpl",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"->"),Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"render"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),"width",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),"\n \n  shared_ptr",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"<"),"Renderable",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),">")," pimpl",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";")," \n",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n")),Object(o.a)("p",null,"Now, we can build higher order components like a Text object:"),Object(o.a)("pre",r({},{className:"language-cpp"}),Object(o.a)("code",r({parentName:"pre"},{className:"language-cpp"}),Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"struct")," ",Object(o.a)("span",r({parentName:"code"},{className:"token class-name"}),"Text")," ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),"\n  Style style",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";")," \n  std",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"::"),"string text",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n  \n  ",Object(o.a)("span",r({parentName:"code"},{className:"token type-opencl-host-cpp keyword"}),"Image")," ",Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"render"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"const")," ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),"\n    std",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"::"),"vector",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"<"),"Pixel",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),">")," ",Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"pixels"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),"text",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"."),Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"size"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),",")," Pixel",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{")," style ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"for")," ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"int")," i ",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"=")," ",Object(o.a)("span",r({parentName:"code"},{className:"token number"}),"0"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";")," i ",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"<")," text",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"."),Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"size"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";")," ",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"++"),"i",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),"\n      pixels",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"["),"i",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"]"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"."),"c ",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"=")," text",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"["),"i",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"]"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";")," \n    ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),"\n    ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"return")," ",Object(o.a)("span",r({parentName:"code"},{className:"token type-opencl-host-cpp keyword"}),"Image"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{")," width",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),",")," height",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),",")," pixels ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n")),Object(o.a)("p",null,"You can find the actual implementation ",Object(o.a)("a",r({parentName:"p"},{href:"https://github.com/LoopPerfect/rxterm/blob/master/rxterm/include/components/text.hpp"}),"here"),"."),Object(o.a)("h2",null,"Performing State Transitions"),Object(o.a)("p",null,"Imagine we want to transition from this:"),Object(o.a)("pre",null,Object(o.a)("code",r({parentName:"pre"},{}),"running task: download\nprogress(50%): [xxxxxx ]\nTasks Done: 1/5: [x ]\n")),Object(o.a)("p",null,"\u2026 to this:"),Object(o.a)("pre",null,Object(o.a)("code",r({parentName:"pre"},{}),"running task: download\nprogress(75%): [xxxxxxxxx ]\nTasks Done: 1/5: [x ]\n")),Object(o.a)("p",null,"The simplest way would be to delete the latest 3 lines and print the new lines. We can delete the latest line by printing \\e[2K\\r\\e[1A (delete line; move cursor to the start of the line; move cursor up one line)."),Object(o.a)("p",null,"A more sophisticated approach would be to compute the difference and move to the target position and edit only the terminal pixels that changed. For simplicity, we will stick to the first approach and combine the moving parts into one class:"),Object(o.a)("pre",r({},{className:"language-cpp"}),Object(o.a)("code",r({parentName:"pre"},{className:"language-cpp"}),Object(o.a)("span",r({parentName:"code"},{className:"token comment"}),"// Pseudo-code"),"\n",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"struct")," ",Object(o.a)("span",r({parentName:"code"},{className:"token class-name"}),"VirtualTerminal")," ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),"\n  string buffer",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";")," ",Object(o.a)("span",r({parentName:"code"},{className:"token comment"}),"// Currently visible output"),"\n \n  string ",Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"computeTransition"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),"string ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"const"),Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"&")," prev",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),",")," string ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"const"),Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"&")," next",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"const")," string deleteLine ",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"=")," ",Object(o.a)("span",r({parentName:"code"},{className:"token string"}),'"\\e[2K\\r\\e[1A"'),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"return")," ",Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"repeat"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"count"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(o.a)("span",r({parentName:"code"},{className:"token string"}),'"\\n"'),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),",")," prev",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),",")," ",Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"deleteLine"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"+")," next",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),"\n \n  VirtualTerminal ",Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"flip"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),"std",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"::"),"string ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"const"),Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"&")," str",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"const")," ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),"\n    cout ",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"<<")," ",Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"computeTransition"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),"buffer",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),",")," str",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n    cout",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"."),Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"flush"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"return")," VirtualTerminal",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),"str",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n")),Object(o.a)("p",null,"The ",Object(o.a)("a",r({parentName:"p"},{href:"https://github.com/LoopPerfect/rxterm/blob/master/rxterm/include/terminal.hpp"}),"actual implementation is hosted on GitHub"),"."),Object(o.a)("h2",null,"Verdict"),Object(o.a)("p",null,"We saw how easy it is to write a reactive terminal framework and manage the state transitions without too many headaches!"),Object(o.a)("p",null,"You can find the implemention of some basic components in our ",Object(o.a)("a",r({parentName:"p"},{href:"https://github.com/loopperfect/rxterm"}),"repo on GitHub"),". We would love to see more people doing beautiful terminal interfaces!"),Object(o.a)("h3",null,"Teaser: FRP Style Components With RxCpp"),Object(o.a)("p",null,"Our next article will be about how we can leverage ",Object(o.a)("a",r({parentName:"p"},{href:"https://github.com/Reactive-Extensions/RxCpp"}),"RxCpp")," to write highly concurrent applications with complex state management."),Object(o.a)("pre",r({},{className:"language-cpp"}),Object(o.a)("code",r({parentName:"pre"},{className:"language-cpp"}),Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"auto")," progressbar ",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"=")," rx",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"::"),Object(o.a)("span",r({parentName:"code"},{className:"token class-name"}),"observable"),Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"<"),Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),">"),Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"::"),Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"from"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),"\n  rxcpp",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"::"),Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"interval"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),"std",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"::"),"chrono",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"::"),Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"milliseconds"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(o.a)("span",r({parentName:"code"},{className:"token number"}),"250"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"."),Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"take_until"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"["),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"]"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"auto")," x",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{")," ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"return")," x ",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),">")," ",Object(o.a)("span",r({parentName:"code"},{className:"token number"}),"100"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";")," ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"."),Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"map"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"["),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"]"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"auto")," x",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{")," ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"return")," x ",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"/")," ",Object(o.a)("span",r({parentName:"code"},{className:"token number"}),"100.0"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"."),Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"map"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),"Progressbar",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"auto")," app ",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"=")," rx",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"::"),Object(o.a)("span",r({parentName:"code"},{className:"token class-name"}),"observable"),Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"<"),Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),">"),Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"::"),Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"zipWith"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),"\n  rx",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"::"),"observable",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"<"),Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),">"),Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"::"),"just",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"<"),"Text",Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),">"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(o.a)("span",r({parentName:"code"},{className:"token string"}),'"progressbar example"'),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),","),"\n  progressbar",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),","),"\n  stackLayout",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n\napp",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"."),Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"scan"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),"\n  ",Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"VirtualTerminal"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),",")," \n  ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"["),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"]"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"auto")," ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"const"),Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"&")," vt",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),",")," Component ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"const"),Object(o.a)("span",r({parentName:"code"},{className:"token operator"}),"&")," c",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(o.a)("span",r({parentName:"code"},{className:"token keyword"}),"return")," vt",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"."),Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"flip"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(o.a)("span",r({parentName:"code"},{className:"token function"}),"renderToTerm"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"("),"vt",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),",")," TerminalWidth",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),",")," c",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),"}"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),")"),Object(o.a)("span",r({parentName:"code"},{className:"token punctuation"}),";"),"\n")),Object(o.a)("h2",null,"More About Buckaroo"),Object(o.a)("p",null,"We created ",Object(o.a)("a",r({parentName:"p"},{href:"https://buckaroo.pm"}),"Buckaroo")," to make C++ code-reuse easier. Read more about it ",Object(o.a)("a",r({parentName:"p"},{href:"https://medium.com/@buckaroo.pm/"}),"on Medium"),":\n",Object(o.a)("a",r({parentName:"p"},{href:"https://hackernoon.com/7-reasons-to-use-buck-build-5b44d7413585"}),Object(o.a)("strong",{parentName:"a"},"7 Reasons to Use Buck Build"),Object(o.a)("em",{parentName:"a"},"Buck is a cross-platform, cross-language build system made for large scale compilation at Facebook. All Buckaroo\u2026"),"hackernoon.com"),"\n",Object(o.a)("a",r({parentName:"p"},{href:"https://hackernoon.com/approaches-to-c-dependency-management-or-why-we-built-buckaroo-26049d4646e7"}),Object(o.a)("strong",{parentName:"a"},"Approaches to C++ Dependency Management, or Why We Built Buckaroo"),Object(o.a)("em",{parentName:"a"},"C++ is an unusual language in that it does not yet have a dominant package manager (we\u2019re working on it!). As a result\u2026"),"hackernoon.com"),"\n",Object(o.a)("a",r({parentName:"p"},{href:"https://hackernoon.com/6-reasons-why-we-distribute-c-libraries-as-source-code-2dc614d5ef1e"}),Object(o.a)("strong",{parentName:"a"},"6 Reasons Why We Distribute C++ Libraries as Source-Code"),Object(o.a)("em",{parentName:"a"},"When writing C++ applications, you will inevitably make use of external libraries. This is a good thing! Code re-use\u2026"),"hackernoon.com")))}u.isMDXComponent=!0},ZJVz:function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/blog/building-reactive-terminals",function(){return t("DXlN")}])}},[["ZJVz",0,2,1,3,4]]]);