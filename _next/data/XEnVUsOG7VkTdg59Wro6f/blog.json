{"pageProps":{"posts":[{"title":"Are Headers Really the Problem?","created":"2019-02-26T11:00:00.000Z","author":"Team Buckaroo","summary":"A huge barrier that newcomers to C++ face is that of undefined references. We create a project, include a few headers and BOOM, linker error. What if we could fix this at a build-system level?","banner":"/posts/header-problem.jpeg","link":"/blog/are-headers-really-the-problem"},{"title":"A Response to \"Accio Dependency Manager\"","created":"2019-02-22T22:00:00.000Z","author":"Team Buckaroo","summary":"There is a Medium post making the rounds at the moment about a dream C++ dependency manager. It's well written, and definitely worth a read. Here's our take. ","banner":"https://raw.githubusercontent.com/JamitLabs/Accio/stable/Logo.png","link":"/blog/a-response-to-accio-dependency-manager"},{"title":"value_ptr — The Missing C++ Smart-pointer","created":"2019-02-21T00:00:00.000Z","author":"Team Buckaroo","summary":"The C++ standard library is missing a smart-pointer! Use value_ptr to get value semantics on a heap resource. At the cost of some extra copying, your code will be simpler and easier to reason about.","banner":"https://images.unsplash.com/photo-1583320975624-d099f8c042f6?ixid=MXwxMjA3fDB8MHxzZWFyY2h8Mnx8dmFsdWV8ZW58MHwwfDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60","link":"/blog/value-ptr-the-missing-smart-ptr"},{"title":"Goodbye JSON, Hello TOML","created":"2019-02-11T22:00:00.000Z","author":"Team Buckaroo","summary":"For the next version of Buckaroo, we wanted to make improvements to the manifest format. Old versions of Buckaroo used JSON for the manifest and lock-files. This choice was not made very consciously, but at the time it seemed reasonable...","banner":"https://images.unsplash.com/photo-1590918203039-7ce23e042634?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MTI2fHxjbGVhbnxlbnwwfDB8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60","link":"/blog/goodbye-json-hello-toml"},{"title":"What's New in Buckaroo 2?","created":"2019-02-11T17:12:00.000Z","author":"Team Buckaroo","summary":"We are proud to announce Buckaroo v2.0.0! Buckaroo has been re-architected to accommodate the lessons learned from v1.x, incorporate your feedback and close more than 85 issues in the process...","banner":"/buckaroo.png","link":"/blog/whats-new-in-buckaroo-2"},{"title":"C++ Coroutine TS — It’s about inversion of control!","summary":"This article gives you one motivating example where lazy sequences enable you to *seperate your concerns* and maximize code reuse without increasing complexity.","created":"2018-11-09T11:00:00.000Z","author":"Team Buckaroo","banner":"/posts/coroutine.jpeg","attribution":"“person flip skiing above snow during daytime” by Jörg Angeli on Unsplash","link":"/blog/c-coroutine-ts-its-about-inversion-of-control"},{"title":"Why Not Make?","summary":"Make is a conceptually simple build-system, and it is packaged with major Linux distributions. However, Make should rarely be your build-system of choice when starting a new C++ project.","banner":"/posts/why-not-make.jpeg","attribution":"“blue building block lot” by Iker Urteaga on Unsplash","author":"Team Buckaroo","created":"2018-11-07T11:00:00.000Z","link":"/blog/announcing-buildinfer-for-c"},{"title":"Common Misconceptions of C++","banner":"/posts/common-missconceptions.jpeg","attribution":"“black swirl of letters” by Nathaniel Shuman on Unsplash","author":"Team Buckaroo","created":"2018-11-06T11:00:00.000Z","link":"/blog/common-misconceptions-of-c"},{"title":"Introducing Conduit: Lazy Sequences Using the Coroutine TS","banner":"/posts/introducing-conduit.png","author":"Team Buckaroo","created":"2018-10-31T11:00:00.000Z","link":"/blog/introducing-conduit-lazy-sequences-for-c"},{"title":"Build-Systems Should Use Hashes Over Timestamps","banner":"/posts/build-systems-should-use-hashes.jpeg","author":"Team Buckaroo","created":"2018-10-26T11:00:00.000Z","attribution":"“cube white block lot on gray surface” by Christian Fregnan on Unsplash","link":"/blog/build-systems-should-use-hashes"},{"title":"(Even) More Reasons to use Buck Build","banner":"/posts/even-more-reasons-to-use-buck.jpeg","author":"Team Buckaroo","created":"2018-10-12T11:00:00.000Z","attribution":"“Why? signage near grass during daytime” by Ken Treloar on Unsplash","link":"/blog/even-more-reasons-to-use-buck"},{"title":"Generated Include Guards: An Alternative to pragma once","banner":"/posts/generated-include-guards.jpeg","author":"Team Buckaroo","created":"2017-10-18T11:00:00.000Z","attribution":"Photo by Toa Heftiba on Unsplash","link":"/blog/generated-include-guards"},{"title":"Experimenting with Small Buffer Optimization for C++ Lambdas","banner":"/posts/smallfun.jpeg","author":"Team Buckaroo","created":"2017-09-19T11:00:00.000Z","attribution":"Photo by Pascal Richier on Unsplash","link":"/blog/experimenting-with-smallbuffer-optimization"},{"title":"Building Reactive Terminal Interfaces in C++","banner":"/posts/rxterm.gif","author":"Team Buckaroo","created":"2017-08-21T11:00:00.000Z","link":"/blog/building-reactive-terminals"},{"title":"Highlights of Buckaroo 1.3","banner":"/buckaroo.png","author":"Team Buckaroo","created":"2017-08-14T11:00:00.000Z","link":"/blog/highlights-of-buckaroo-1-3"},{"title":" 6 Reasons Why We Distribute C++ Libraries as Source-Code","banner":"/posts/reason-why-we-distribute.jpeg","author":"Team Buckaroo","created":"2017-07-25T11:00:00.000Z","attribution":"It’s JavaScript… which is distributed as source-code! (Photo by Markus Spiske on Unsplash)","link":"/blog/reasons-why-we-distribute-libraries-as-source-code"},{"title":"Approaches to C++ Dependency Management, or Why We Built Buckaroo","banner":"/posts/why-we-built-buckaroo.jpeg","author":"Team Buckaroo","created":"2017-07-17T11:00:00.000Z","attribution":"It’s JavaScript… which is distributed as source-code! (Photo by Markus Spiske on Unsplash)","link":"/blog/approaches-to-c-dependency-managment"},{"title":"What's New in Buckaroo 1.2?","created":"2017-07-13T17:12:00.000Z","author":"Team Buckaroo","banner":"/buckaroo.png","link":"/blog/whats-new-in-buckaroo-1-2"},{"title":"Getting Started with Buck build on Travis CI","created":"2017-06-14T11:00:00.000Z","author":"Team Buckaroo","banner":"/posts/berlin.jpeg","attribution":"Travis CI, Made in Berlin (Photo by Markus Spiske)","link":"/blog/getting-started-with-buck-on-travis"},{"title":"Comparing the Compilation Times of C++ Templates and Macros","created":"2017-06-02T11:00:00.000Z","author":"Team Buckaroo","summary":"For our example, templates compile faster than generated code. With a few tricks, they are also faster for incremental builds.","banner":"/posts/templates-vs-macros.jpeg","link":"/blog/templates-vs-macros"},{"title":"A Tour of C++ 17: If Constexpr","created":"2017-05-31T22:00:00.000Z","author":"Team Buckaroo","banner":"/posts/tour2017.jpeg","link":"/blog/a-tour-of-cpp17-constexpr-if"},{"title":"Error Handling in C++ or: Why You Should Use Eithers in Favor of Exceptions and Error-codes","banner":"/posts/forrest.jpeg","author":"Team Buckaroo","created":"2017-05-16T11:00:00.000Z","link":"/blog/either-vs-error-codes"},{"title":"Lessons Learned from Porting 300 C/C++ Projects to Buck Build","banner":"/posts/300packages.jpeg","author":"Team Buckaroo","created":"2017-05-16T11:00:00.000Z","link":"/blog/lessons-learned-from-porting-300-c-libraries"},{"title":"How to Create a Buck-based C/C++ Project","banner":"/posts/deer.jpeg","author":"Team Buckaroo","created":"2017-05-15T11:00:00.000Z","link":"/blog/how-to-create-a-buck-based-project"},{"title":"7 Quick Tips for Java Programmers Starting C++","banner":"/posts/7-tips-for-java.jpeg","author":"Team Buckaroo","created":"2017-09-7T11:00:00.000Z","attribution":"Photo by fireskystudios.com on Unsplash","link":"/blog/quick-tips-for-java-programmers"},{"title":"7 Reasons to Use Buck Build","banner":"/posts/buck-presentation.jpg","author":"Team Buckaroo","created":"2017-05-09T11:00:00.000Z","link":"/blog/reasons-to-use-buck-build"}]},"__N_SSG":true}