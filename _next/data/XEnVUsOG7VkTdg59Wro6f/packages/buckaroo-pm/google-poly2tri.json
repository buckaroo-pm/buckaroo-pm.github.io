{"pageProps":{"data":{"packageName":"buckaroo-pm/google-poly2tri","name":"greenm01/poly2tri","licence":"NOASSERTION","description":"Automatically exported from code.google.com/p/poly2tri","readme":"ï»¿#####################################################################################\n###\n### Since there are no Input validation of the data given for triangulation you need \n### to think about this. Poly2Tri does not support repeat points within epsilon.\n### \n### * If you have a cyclic function that generates random points make sure you don't \n### add the same coordinate twice.\n###\n### * If you are given input and aren't sure same point exist twice you need to \n### check for this yourself.\n###      \n### * Only simple polygons are supported. You may add holes or interior Steiner points\n###\n### * Interior holes must not touch other holes, nor touch the polyline boundary\n###\n### * Use the library in this order:\n###\n### 1) Initialize CDT with a simple polyline (this defines the constrained edges)\n### 2) Add holes if necessary (also simple polylines)\n### 3) Add Steiner points\n### 4) Triangulate\n###\n### Make sure you understand the preceding notice before posting an issue. If you have \n### an issue not covered by the above, include your data-set with the problem.\n###\n### The only easy day was yesterday; have a nice day. <Mason Green>\n###\n######################################################################################\n\n===========================\nTESTBED INSTALLATION GUIDE\n===========================\n\n------------\nDependencies\n------------\n\n  Core poly2tri lib:\n  - Standard Template Library (STL)\n  \n  Testbed:\n  - gcc\n  - OpenGL\n  - GLFW (http://glfw.sf.net)\n  - Python\n \nwaf (http://code.google.com/p/waf/) is used to compile the testbed.   \nA waf script (86kb) is included in the repositoty.\n\n----------------------------------------------\nBuilding the Testbed\n----------------------------------------------\n\nPosix/MSYS environment:\n\n  ./waf configure\n  ./waf build\n\nWindows command line:\n\n  python waf configure\n  python waf build\n\n----------------------------------------------\nRunning the Examples\n----------------------------------------------\n\nLoad data points from a file:\np2t <filename> <center_x> <center_y> <zoom>\n\nRandom distribution of points inside a consrained box:\np2t random <num_points> <box_radius> <zoom>\n\nExamples:\n\n  ./p2t dude.dat 300 500 2\n  ./p2t nazca_monkey.dat 0 0 9\n  \n  ./p2t random 10 100 5.0\n  ./p2t random 1000 20000 0.025\n","versions":[{"ref":"master","manifest":"targets = [ \"//:poly2tri\" ]\n","lockFile":"manifest = \"c1135d5419db93cd3aa324d80afaf81cf5dfc23dbd4f5b9745fdd23331f3ee48\"\n\n","buck":"load('//:subdir_glob.bzl', 'subdir_glob')\n\ncxx_library(\n  name = 'poly2tri',\n  header_namespace = 'poly2tri',\n  exported_headers = subdir_glob([\n    ('poly2tri', '**/*.h'),\n  ]),\n  srcs = glob([\n    'poly2tri/**/*.cc',\n  ]),\n  visibility = ['PUBLIC']\n)\n","bazel":"","deps":[],"lock":[]}],"updated":"2019-01-25T13:44:19Z","updatedUpstream":"2021-01-03T03:34:07Z","contributors":[{"login":"greenm01","avatarUrl":"https://avatars0.githubusercontent.com/u/70345?v=4"}],"fundingLinks":[],"contactLinks":[],"stars":227,"forks":73,"topics":[]}},"__N_SSG":true}