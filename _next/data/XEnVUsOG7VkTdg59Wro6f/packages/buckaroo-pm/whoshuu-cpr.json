{"pageProps":{"data":{"packageName":"buckaroo-pm/whoshuu-cpr","name":"whoshuu/cpr","licence":"MIT","description":"C++ Requests: Curl for People, a spiritual port of Python Requests","readme":"# C++ Requests: Curl for People <img align=\"right\" height=\"40\" src=\"http://i.imgur.com/d9Xtyts.png\">\n\n[![Build Status](https://travis-ci.org/whoshuu/cpr.svg?branch=master)](https://travis-ci.org/whoshuu/cpr) [![Build status](https://ci.appveyor.com/api/projects/status/imalkp3a6hblpj5y/branch/master?svg=true)](https://ci.appveyor.com/project/whoshuu/cpr/branch/master) [![Coverage Status](https://coveralls.io/repos/whoshuu/cpr/badge.svg?branch=master&service=github)](https://coveralls.io/github/whoshuu/cpr) [![Documentation](https://img.shields.io/badge/documentation-master-brightgreen.svg)](https://whoshuu.github.io/cpr/)\n\nC++ Requests is a simple wrapper around [libcurl](http://curl.haxx.se/libcurl) inspired by the excellent [Python Requests](https://github.com/kennethreitz/requests) project.\n\nDespite its name, libcurl's easy interface is anything but, and making mistakes misusing it is a common source of error and frustration. Using the more expressive language facilities of C++11, this library captures the essence of making network calls into a few concise idioms.\n\nHere's a quick GET request:\n\n```c++\n#include <cpr/cpr.h>\n\nint main(int argc, char** argv) {\n    auto r = cpr::Get(cpr::Url{\"https://api.github.com/repos/whoshuu/cpr/contributors\"},\n                      cpr::Authentication{\"user\", \"pass\"},\n                      cpr::Parameters{{\"anon\", \"true\"}, {\"key\", \"value\"}});\n    r.status_code;                  // 200\n    r.header[\"content-type\"];       // application/json; charset=utf-8\n    r.text;                         // JSON text string\n}\n```\n\nAnd here's [less functional, more complicated code, without cpr](https://gist.github.com/whoshuu/2dc858b8730079602044).\n\n## Documentation\n\nYou can find the latest documentation [here](https://whoshuu.github.io/cpr). It's a work in progress, but it should give you a better idea of how to use the library than the [tests](https://github.com/whoshuu/cpr/tree/master/test) currently do.\n\n## Features\n\nC++ Requests currently supports:\n\n* Custom headers\n* Url encoded parameters\n* Url encoded POST values\n* Multipart form POST upload\n* File POST upload\n* Basic authentication\n* Digest authentication\n* Timeout specification\n* Timeout for low speed connection\n* Asynchronous requests\n* :cookie: support!\n* Proxy support\n* Callback interface\n* PUT methods\n* DELETE methods\n* HEAD methods\n* OPTIONS methods\n* PATCH methods\n\n## Planned\n\nSupport for the following will be forthcoming (in rough order of implementation priority):\n\n* [Streamed requests](https://github.com/whoshuu/cpr/issues/25)\n* [OpenSSL support](https://github.com/whoshuu/cpr/issues/31)\n\nand much more!\n\n## Usage\n\nFor just getting this library up and running, I highly recommend forking the [example project](https://github.com/whoshuu/cpr-example). It's configured with the minimum CMake magic and boilerplate needed to start playing around with networked applications.\n\nIf you already have a project you need to integrate C++ Requests with, the primary way is to use git submodules. Add this repository as a submodule of your root repository:\n\n```shell\ngit submodule add git@github.com:whoshuu/cpr.git\nOR \ngit submodule add https://github.com/whoshuu/cpr.git\n\ngit submodule update --init --recursive\n```\n\nNext, add this subdirectory to your CMakeLists.txt before declaring any targets that might use it:\n\n```cmake\nadd_subdirectory(cpr)\n```\n\nThis will produce two important CMake variables, `CPR_INCLUDE_DIRS` and `CPR_LIBRARIES`, which you'll use in the typical way:\n\n```cmake\ninclude_directories(${CPR_INCLUDE_DIRS})\ntarget_link_libraries(your_target_name ${CPR_LIBRARIES})\n```\n\nand that should do it! Using the submodule method of integrating C++ Requests, there's no need to handle libcurl yourself, all of those dependencies are taken care of for you.\n\n## Requirements\n\nThe only explicit requirements are:\n\n* a C++11 compatible compiler such as Clang or GCC. The minimum required version of GCC is unknown, so if anyone has trouble building this library with a specific version of GCC, do let me know\n* curl and its development libraries\n","versions":[{"ref":"master","manifest":"targets = [ \"//:cpr\" ]\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/pkg-config-curl\"\nversion = \"branch=master\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/cesanta-mongoose\"\nversion = \"~5.6\"\nprivate = true\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/google-googletest\"\nversion = \"branch=master\"\nprivate = true\n","lockFile":"manifest = \"2e9974fcb331ee23a5e10879a873c88038262f9cd3839dda9648bb3037458ca4\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/cesanta-mongoose\"\ntarget = \"//:mongoose\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/google-googletest\"\ntarget = \"//:googletest\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/pkg-config-curl\"\ntarget = \"//:curl\"\n\n[lock.\"github.com/buckaroo-pm/cesanta-mongoose\"]\nversions = [ \"5.6.0\" ]\nrevision = \"8e34aad44f7310074ef92600fa510d40b7d74586\"\n\n[lock.\"github.com/buckaroo-pm/cesanta-mongoose\".lock.\"github.com/buckaroo-pm/host-pthread\"]\nversions = [ \"branch=master\" ]\nrevision = \"a62519aa69c8e3243d6065fbf4c1d2de072f86f6\"\n\n[lock.\"github.com/buckaroo-pm/google-googletest\"]\nversions = [ \"branch=master\" ]\nrevision = \"cb8d2c1a2fcd344953e6c129a1a699a2c230551d\"\n\n[lock.\"github.com/buckaroo-pm/pkg-config-curl\"]\nversions = [ \"branch=master\" ]\nrevision = \"9589b95caa9fb75eb8fc0ac84127efdef15a6a4f\"\n","buck":"load('//:subdir_glob.bzl', 'subdir_glob')\nload('//:buckaroo_macros.bzl', 'buckaroo_deps_from_package')\n\ncxx_library(\n  name = 'cpr',\n  header_namespace = '',\n  exported_headers = subdir_glob([\n    ('include', '**/*.h'),\n  ]),\n  srcs = glob([\n    'cpr/**/*.cpp',\n  ]),\n  licenses = [\n    'LICENSE',\n  ],\n  deps = buckaroo_deps_from_package('github.com/buckaroo-pm/pkg-config-curl'),\n  visibility = [\n    'PUBLIC'\n  ],\n)\n","bazel":"","deps":[{"uri":"github.com/buckaroo-pm/pkg-config-curl","name":"buckaroo-pm/pkg-config-curl","version":"branch=master"},{"uri":"github.com/buckaroo-pm/cesanta-mongoose","name":"buckaroo-pm/cesanta-mongoose","version":"~5.6"},{"uri":"github.com/buckaroo-pm/google-googletest","name":"buckaroo-pm/google-googletest","version":"branch=master"}],"lock":[{"uri":"github.com/buckaroo-pm/cesanta-mongoose","name":"buckaroo-pm/cesanta-mongoose","spec":{"versions":["5.6.0"],"revision":"8e34aad44f7310074ef92600fa510d40b7d74586","lock":{"github.com/buckaroo-pm/host-pthread":{"versions":["branch=master"],"revision":"a62519aa69c8e3243d6065fbf4c1d2de072f86f6"}}}},{"uri":"github.com/buckaroo-pm/google-googletest","name":"buckaroo-pm/google-googletest","spec":{"versions":["branch=master"],"revision":"cb8d2c1a2fcd344953e6c129a1a699a2c230551d"}},{"uri":"github.com/buckaroo-pm/pkg-config-curl","name":"buckaroo-pm/pkg-config-curl","spec":{"versions":["branch=master"],"revision":"9589b95caa9fb75eb8fc0ac84127efdef15a6a4f"}}]}],"updated":"2019-01-23T16:48:59Z","updatedUpstream":"2021-01-13T11:53:35Z","contributors":[{"login":"antonlindstrom","avatarUrl":"https://avatars2.githubusercontent.com/u/10686?v=4"},{"login":"xpol","avatarUrl":"https://avatars2.githubusercontent.com/u/20248?v=4"},{"login":"thedrow","avatarUrl":"https://avatars2.githubusercontent.com/u/48936?v=4"},{"login":"flier","avatarUrl":"https://avatars0.githubusercontent.com/u/61618?v=4"},{"login":"apollo13","avatarUrl":"https://avatars1.githubusercontent.com/u/81547?v=4"},{"login":"tstack","avatarUrl":"https://avatars1.githubusercontent.com/u/107532?v=4"},{"login":"thcd","avatarUrl":"https://avatars2.githubusercontent.com/u/121994?u=8a5f57d6b0fa172bd49a07965590474c5f2091cd&v=4"},{"login":"adam-nielsen","avatarUrl":"https://avatars0.githubusercontent.com/u/278772?v=4"},{"login":"xloem","avatarUrl":"https://avatars2.githubusercontent.com/u/279585?v=4"},{"login":"dilshodm","avatarUrl":"https://avatars1.githubusercontent.com/u/284653?v=4"},{"login":"Talkless","avatarUrl":"https://avatars0.githubusercontent.com/u/292191?v=4"},{"login":"mikedld","avatarUrl":"https://avatars1.githubusercontent.com/u/298203?v=4"},{"login":"bobjansen","avatarUrl":"https://avatars1.githubusercontent.com/u/311522?v=4"},{"login":"smiley","avatarUrl":"https://avatars2.githubusercontent.com/u/354181?u=e5575d18ef3f4780f7865b9c1d034102d4b092d0&v=4"},{"login":"pierriko","avatarUrl":"https://avatars1.githubusercontent.com/u/373230?u=4b0e71e8e41a679cdae3b6ec2bdccc69c4975ee0&v=4"},{"login":"klaussilveira","avatarUrl":"https://avatars1.githubusercontent.com/u/467729?u=7c4359b8edbff9d9ac5d0cea29b8df7df80cac69&v=4"},{"login":"DEGoodmanWilson","avatarUrl":"https://avatars1.githubusercontent.com/u/521866?u=3fba6ee127183ee70b62a10f4a42316927c90659&v=4"},{"login":"guoxiao","avatarUrl":"https://avatars2.githubusercontent.com/u/528318?u=817b0ac3b505f83fa4441b06ed17ac085f78d7b5&v=4"},{"login":"andreasgerstmayr","avatarUrl":"https://avatars0.githubusercontent.com/u/538011?u=c2eba441a1b660e53c1484a1cc52932a1e803ca8&v=4"},{"login":"sunpoet","avatarUrl":"https://avatars1.githubusercontent.com/u/688777?u=d4af443cce0124aed957f3d9fe6f75382294a447&v=4"},{"login":"pravic","avatarUrl":"https://avatars3.githubusercontent.com/u/724639?v=4"},{"login":"SuperV1234","avatarUrl":"https://avatars3.githubusercontent.com/u/918661?u=777c33754c4a5ae474a0b3c99f0c260de9768f5c&v=4"},{"login":"coin-au-carre","avatarUrl":"https://avatars3.githubusercontent.com/u/1044719?v=4"},{"login":"erengy","avatarUrl":"https://avatars2.githubusercontent.com/u/1078430?v=4"},{"login":"EliSchleifer","avatarUrl":"https://avatars2.githubusercontent.com/u/1265982?v=4"}],"fundingLinks":[],"contactLinks":[],"stars":3362,"forks":589,"topics":["c-plus-plus","libcurl","http","requests"]}},"__N_SSG":true}