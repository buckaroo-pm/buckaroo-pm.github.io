{"pageProps":{"data":{"packageName":"buckaroo-pm/copperspice-libguarded","name":"copperspice/cs_libguarded","licence":"BSD-2-Clause","description":"Header-only library for multithreaded programming","readme":"## libGuarded\n\n### Introduction\n\nThe libGuarded library is a standalone header-only library for multithreaded programming.\n\nThis library provides templated classes which prevent race conditions by controlling access to shared data. Existing\nmultithreading primitives like mutexes and locks are only bound to the protected data by conventions. This makes it very\neasy to introduce bugs in your code by forgetting to use the right locks before accessing a block of data. The idea of this\nlibrary is to tie the data and the locks in a type safe interface that only allows correct usage.\n\n\n### System Requirements\n\nTo use libGuarded you will need a C++14 compiler and a C++14 standard library.\n\nCurrently uses the Autotools build system for building and running the unit test suite.\nThe library has been tested with clang thread sanitizer, multiple code reviews, and production software.\n\n\n### Documentation\n\nClass level documentation for libGuarded is available on the CopperSpice website:\n\nwww.copperspice.com/docs/libguarded/index.html\n\n\n\n### Presentations\n\nMultiple videos discussing libGuarded and multithreading can be found on the following pages:\n\nwww.youtube.com/copperspice <br>\nwww.copperspice.com/presentations.html\n\n\n\n### Authors / Contributors\n\n* **Ansel Sermersheim**\n* **Barbara Geller**\n* **Casey Bodley**\n* **Jan Wilmans**\n* **Eric Lemanissier**\n\n\n### License\n\nThis library is released under the BSD 2-clause license. For more information refer to the LICENSE file provided with this\nproject.\n\n\n### References\n\n* Website: www.copperspice.com\n* Email:   info@copperspice.com\n","versions":[{"ref":"master","manifest":"targets = [ \"//:guarded\" ]","lockFile":"manifest = \"53cb8cf03aba055c7c196c7294cc3fab2edf3052e7914b416f5a2958de2256a5\"\n\n","buck":"load('//:buckaroo_macros.bzl', 'buckaroo_deps')\nload('//:subdir_glob.bzl', 'subdir_glob')\n\nprebuilt_cxx_library(\n  name = 'guarded',\n  header_only = True,\n  header_namespace = '',\n  exported_headers = subdir_glob([\n    ('src', '**/*.hpp'),\n  ]),\n  deps = buckaroo_deps(),\n  visibility = [\n    'PUBLIC',\n  ],\n)\n","bazel":"","deps":[],"lock":[]}],"updated":"2019-01-18T15:11:17Z","updatedUpstream":"2021-01-11T04:43:29Z","contributors":[{"login":"arBmind","avatarUrl":"https://avatars0.githubusercontent.com/u/44107?v=4"},{"login":"ericLemanissier","avatarUrl":"https://avatars1.githubusercontent.com/u/1926390?v=4"},{"login":"cbodley","avatarUrl":"https://avatars2.githubusercontent.com/u/1928002?u=532705655e593ca683ede5714f3bb5a3b462e8ad&v=4"},{"login":"agserm","avatarUrl":"https://avatars3.githubusercontent.com/u/11763146?u=a81c0133bc8ff85207c1b40f82ea776c3b4a5165&v=4"},{"login":"bgeller","avatarUrl":"https://avatars1.githubusercontent.com/u/16813788?u=61df87821caef48fa1a4350573c8649496f3f2fa&v=4"}],"fundingLinks":[],"contactLinks":[],"stars":143,"forks":20,"topics":["multithreading","cpp"]}},"__N_SSG":true}