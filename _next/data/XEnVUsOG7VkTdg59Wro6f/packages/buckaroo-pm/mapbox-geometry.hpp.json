{"pageProps":{"data":{"packageName":"buckaroo-pm/mapbox-geometry.hpp","name":"mapbox/geometry.hpp","licence":"ISC","description":"C++ geometry types","readme":"# geometry.hpp\n\n[![badge](https://mapbox.s3.amazonaws.com/cpp-assets/hpp-skel-badge_blue.svg)](https://github.com/mapbox/hpp-skel)\n\nProvides header-only, generic C++ interfaces for geometry types, geometry collections, and features.\n\n - `mapbox::geometry::point`\n - `mapbox::geometry::multi_point`\n - `mapbox::geometry::line_string`\n - `mapbox::geometry::multi_line_string`\n - `mapbox::geometry::polygon`\n - `mapbox::geometry::multi_polygon`\n - `mapbox::geometry::geometry_collection`\n - `mapbox::feature::feature` (experimental)\n\n### Design\n\nThese types are designed to be easy to parse and serialize to [GeoJSON](http://geojson.org/).\n\nThey should also be a robust and high performance container for data processing and conversion.\n\n\n### Goals\n\n - Header-only\n - Fast compile\n - c++11/c++14 compatibility\n - No external dependencies for usage of core types (point, line_string, etc)\n - Minimal dependencies for usage of enclosing `geometry` type (`mapbox::variant`)\n - Easily [adaptable to `boost::geometry`](http://www.boost.org/doc/libs/1_56_0/libs/geometry/doc/html/geometry/examples/example__adapting_a_legacy_geometry_object_model.html)\n\n\n### Usage\n\nUsing a single type directly (requires no external dependencies):\n\n```cpp\n#include <mapbox/geometry/point.hpp>\n#include <iostream>\n\nusing mapbox::geometry::point;\n\nint main() {\n    point<double> pt(1.0,0.0);\n    std::clog << \"x: \" << pt.x << \" y: \" << pt.y << \"\\n\";\n}\n```\n\nCreating a geometry collection (depends on https://github.com/mapbox/variant):\n\n```cpp\n#include <mapbox/geometry/geometry.hpp>\n#include <mapbox/variant.hpp>\n#include <iostream>\n\nusing mapbox::geometry::geometry_collection;\nusing mapbox::geometry::geometry;\nusing mapbox::geometry::point;\n\nusing point_type = point<double>;\n\nstruct printer\n{\n    printer() {}\n\n    void operator()(point_type const& pt) const\n    {\n        std::clog << \"x: \" << pt.x << \" y: \" << pt.y << \"\\n\";\n    }\n\n    template <typename T>\n    void operator()(T const& g) const\n    {\n        std::clog << \"encountered non-point geometry\\n\";\n    }\n};\n\nint main() {\n    geometry_collection<double> gc;\n    gc.emplace_back(point_type(1.0,0.0));\n    geometry<double> const& geom = gc.at(0);\n    printer visitor;\n    mapbox::util::apply_visitor(visitor,geom);\n}\n```\n","versions":[{"ref":"master","manifest":"targets = [ \"//:geometry\" ] \n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/Catch2\"\nversion = \"1.12.1\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/mapbox-variant\"\nversion = \"branch=master\"\n","lockFile":"manifest = \"a5c7b9e39bbc5eb251142b0e27f44b636c7052710b4c5becef97758f67c81865\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/Catch2\"\ntarget = \"//:catch\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/mapbox-variant\"\ntarget = \"//:variant\"\n\n[[lock]]\nname = \"github.com/buckaroo-pm/Catch2\"\nrevision = \"65ab25beb9080c77a7aa0edbfab1812a06e174d1\"\n\n[[lock]]\nname = \"github.com/buckaroo-pm/mapbox-variant\"\nrevision = \"e735b7c1be9fe58e364685e6093628644776baf3\"\n","buck":"prebuilt_cxx_library(\n  name = 'geometry', \n  header_namespace = 'mapbox', \n  header_only = True, \n  exported_headers = subdir_glob([\n    ('include/mapbox', '**/*.hpp'), \n  ]), \n  deps = [\n    'buckaroo.github.buckaroo-pm.mapbox-variant//:variant', \n  ], \n  visibility = [\n    'PUBLIC', \n  ], \n)\n","bazel":"","deps":[{"uri":"github.com/buckaroo-pm/Catch2","name":"buckaroo-pm/Catch2","version":"1.12.1"},{"uri":"github.com/buckaroo-pm/mapbox-variant","name":"buckaroo-pm/mapbox-variant","version":"branch=master"}],"lock":[{"uri":"0","name":"0","spec":{"name":"github.com/buckaroo-pm/Catch2","revision":"65ab25beb9080c77a7aa0edbfab1812a06e174d1"}},{"uri":"1","name":"1","spec":{"name":"github.com/buckaroo-pm/mapbox-variant","revision":"e735b7c1be9fe58e364685e6093628644776baf3"}}]}],"updated":"2018-11-15T11:23:25Z","updatedUpstream":"2020-12-22T14:35:49Z","contributors":[{"login":"zugaldia","avatarUrl":"https://avatars1.githubusercontent.com/u/6964?u=e17bd7e9c8e0d4ca1df6956596cffc4ef10176de&v=4"},{"login":"bookest","avatarUrl":"https://avatars1.githubusercontent.com/u/14640?u=75e815f366d32a63b0d223fe47182a1570a96bb3&v=4"},{"login":"springmeyer","avatarUrl":"https://avatars1.githubusercontent.com/u/20300?v=4"},{"login":"mikelmaron","avatarUrl":"https://avatars1.githubusercontent.com/u/22896?u=f22126445e688b260ca316709407189f669c2083&v=4"},{"login":"mourner","avatarUrl":"https://avatars2.githubusercontent.com/u/25395?u=6f04fa0e30ee06ee7ef8d13dd6c166d0ca70aeea&v=4"},{"login":"sbma44","avatarUrl":"https://avatars2.githubusercontent.com/u/31717?v=4"},{"login":"sgillies","avatarUrl":"https://avatars3.githubusercontent.com/u/33697?u=518c359114c548926c56fef4b51a123e9a4a5d47&v=4"},{"login":"kkaefer","avatarUrl":"https://avatars1.githubusercontent.com/u/52399?u=7b3a53dfef51246b5c1342108a664842b4ea3571&v=4"},{"login":"alfwatt","avatarUrl":"https://avatars1.githubusercontent.com/u/53469?u=ff9e35352887e919bfd74b6ad0bee578af80e165&v=4"},{"login":"anderco","avatarUrl":"https://avatars1.githubusercontent.com/u/55106?v=4"},{"login":"yuletide","avatarUrl":"https://avatars3.githubusercontent.com/u/58695?u=6322adc3fcbff377e32f0e6299d7aaddd841dc6e&v=4"},{"login":"artemp","avatarUrl":"https://avatars1.githubusercontent.com/u/59056?u=84b41abea2ca9e9c6e5a6af9277ee06e8376c68f&v=4"},{"login":"tristen","avatarUrl":"https://avatars1.githubusercontent.com/u/61150?u=40b52d083ac2c6f414ef35c79271c776787e7bd0&v=4"},{"login":"ivovandongen","avatarUrl":"https://avatars1.githubusercontent.com/u/64527?u=e284cc763f7ca8765196fc0f6279e7538742cdfd&v=4"},{"login":"brunoabinader","avatarUrl":"https://avatars2.githubusercontent.com/u/76133?v=4"},{"login":"apendleton","avatarUrl":"https://avatars3.githubusercontent.com/u/78930?u=911348d600e91c721685538a958ee4252a854589&v=4"},{"login":"yhahn","avatarUrl":"https://avatars1.githubusercontent.com/u/83384?u=b2c1ca34e763ba420f510b5a1d62201c1d9624eb&v=4"},{"login":"PureW","avatarUrl":"https://avatars0.githubusercontent.com/u/85910?v=4"},{"login":"AlekseiCherkes","avatarUrl":"https://avatars3.githubusercontent.com/u/87640?u=f75d2bf7fd442db59db853feab57a208761fddef&v=4"},{"login":"ianshward","avatarUrl":"https://avatars2.githubusercontent.com/u/91258?u=5e631aa4328b540f955d9c2e9e2588fcc1bd0d0d&v=4"},{"login":"gundersen","avatarUrl":"https://avatars0.githubusercontent.com/u/93353?v=4"},{"login":"willwhite","avatarUrl":"https://avatars1.githubusercontent.com/u/93564?u=3e17a4a45e3ce686ca811d9ed79257db04ff345f&v=4"},{"login":"lxbarth","avatarUrl":"https://avatars2.githubusercontent.com/u/98233?u=3ca609d2f417501e961958c5bef2f99327b3f84e&v=4"},{"login":"jfirebaugh","avatarUrl":"https://avatars0.githubusercontent.com/u/98601?u=5b527e69ac7e93e41d9a9518e805e99bd4a08389&v=4"},{"login":"kshehadeh","avatarUrl":"https://avatars0.githubusercontent.com/u/107061?u=d5e994f10868eb85c21bc5b8793da960f3044ed6&v=4"}],"fundingLinks":[],"contactLinks":[],"stars":66,"forks":29,"topics":[]}},"__N_SSG":true}