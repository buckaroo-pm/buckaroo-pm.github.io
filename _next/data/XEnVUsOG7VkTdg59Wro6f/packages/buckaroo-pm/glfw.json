{"pageProps":{"data":{"packageName":"buckaroo-pm/glfw","name":"glfw/glfw","licence":"Zlib","description":"A multi-platform library for OpenGL, OpenGL ES, Vulkan, window and input","readme":"# GLFW\n\n[![Build status](https://travis-ci.org/glfw/glfw.svg?branch=master)](https://travis-ci.org/glfw/glfw)\n[![Build status](https://ci.appveyor.com/api/projects/status/0kf0ct9831i5l6sp/branch/master?svg=true)](https://ci.appveyor.com/project/elmindreda/glfw)\n[![Coverity Scan](https://scan.coverity.com/projects/4884/badge.svg)](https://scan.coverity.com/projects/glfw-glfw)\n\n## Introduction\n\nGLFW is an Open Source, multi-platform library for OpenGL, OpenGL ES and Vulkan\napplication development.  It provides a simple, platform-independent API for\ncreating windows, contexts and surfaces, reading input, handling events, etc.\n\nGLFW natively supports Windows, macOS and Linux and other Unix-like systems.\nAn experimental implementation for the Wayland protocol is available but not\nyet officially supported.\n\nGLFW is licensed under the [zlib/libpng\nlicense](http://www.glfw.org/license.html).\n\nThe latest stable release is version 3.2.1.\n\nSee the [downloads](http://www.glfw.org/download.html) page for details and\nfiles, or fetch the `latest` branch, which always points to the latest stable\nrelease.  Each release starting with 3.0 also has a corresponding [annotated\ntag](https://github.com/glfw/glfw/releases) with source and binary archives.\nThe [version history](http://www.glfw.org/changelog.html) lists all user-visible\nchanges for every release.\n\nThis is a development branch for version 3.3, which is _not yet described_.\nPre-release documentation is available [here](http://www.glfw.org/docs/3.3/).\n\nThe `master` branch is the stable integration branch and _should_ always compile\nand run on all supported platforms, although details of newly added features may\nchange until they have been included in a release.  New features and many bug\nfixes live in [other branches](https://github.com/glfw/glfw/branches/all) until\nthey are stable enough to merge.\n\nIf you are new to GLFW, you may find the\n[tutorial](http://www.glfw.org/docs/latest/quick.html) for GLFW 3 useful.  If\nyou have used GLFW 2 in the past, there is a [transition\nguide](http://www.glfw.org/docs/latest/moving.html) for moving to the GLFW\n3 API.\n\n\n## Compiling GLFW\n\nGLFW itself requires only the headers and libraries for your window system.  It\ndoes not need the headers for any context creation API (WGL, GLX, EGL, NSGL,\nOSMesa) or rendering API (OpenGL, OpenGL ES, Vulkan) to enable support for them.\n\nGLFW supports compilation on Windows with Visual C++ 2010 and later, MinGW and\nMinGW-w64, on macOS with Clang and on Linux and other Unix-like systems with GCC\nand Clang.  It will likely compile in other environments as well, but this is\nnot regularly tested.\n\nThere are [pre-compiled Windows binaries](http://www.glfw.org/download.html)\navailable for all supported compilers.\n\nSee the [compilation guide](http://www.glfw.org/docs/latest/compile.html) for\nmore information about how to compile GLFW yourself.\n\n\n## Using GLFW\n\nSee the [documentation](http://www.glfw.org/docs/latest/) for tutorials, guides\nand the API reference.\n\n\n## Contributing to GLFW\n\nSee the [contribution\nguide](https://github.com/glfw/glfw/blob/master/docs/CONTRIBUTING.md) for\nmore information.\n\n\n## System requirements\n\nGLFW supports Windows XP and later and macOS 10.7 and later.  Linux and other\nUnix-like systems running the X Window System are supported even without\na desktop environment or modern extensions, although some features require\na running window or clipboard manager.  The OSMesa backend requires Mesa 6.3.\n\nSee the [compatibility guide](http://www.glfw.org/docs/latest/compat.html)\nin the documentation for more information.\n\n\n## Dependencies\n\nGLFW itself depends only on the headers and libraries for your window system.\n\nThe (experimental) Wayland backend also depends on the `extra-cmake-modules`\npackage, which is used to generated Wayland protocol headers.\n\nThe examples and test programs depend on a number of tiny libraries.  These are\nlocated in the `deps/` directory.\n\n - [getopt\\_port](https://github.com/kimgr/getopt_port/) for examples\n   with command-line options\n - [TinyCThread](https://github.com/tinycthread/tinycthread) for threaded\n   examples\n - An OpenGL 3.2 core loader generated by\n   [glad](https://github.com/Dav1dde/glad) for examples using modern OpenGL\n - [linmath.h](https://github.com/datenwolf/linmath.h) for linear algebra in\n   examples\n - [Nuklear](https://github.com/vurtun/nuklear) for test and example UI\n - [stb\\_image\\_write](https://github.com/nothings/stb) for writing images to disk\n - [Vulkan headers](https://www.khronos.org/registry/vulkan/) for Vulkan tests\n\nThe Vulkan example additionally requires the LunarG Vulkan SDK to be installed,\nor it will not be included in the build.  On macOS you need to provide the path\nto the SDK manually as it has no standard installation location.\n\nThe documentation is generated with [Doxygen](http://doxygen.org/) if CMake can\nfind that tool.\n\n\n## Reporting bugs\n\nBugs are reported to our [issue tracker](https://github.com/glfw/glfw/issues).\nPlease check the [contribution\nguide](https://github.com/glfw/glfw/blob/master/docs/CONTRIBUTING.md) for\ninformation on what to include when reporting a bug.\n\n\n## Changelog\n\n- Added `glfwGetError` function for querying the last error code and its\n  description (#970)\n- Added `glfwUpdateGamepadMappings` function for importing gamepad mappings in\n  SDL\\_GameControllerDB format (#900)\n- Added `glfwJoystickIsGamepad` function for querying whether a joystick has\n  a gamepad mapping (#900)\n- Added `glfwGetJoystickGUID` function for querying the SDL compatible GUID of\n  a joystick (#900)\n- Added `glfwGetGamepadName` function for querying the name provided by the\n  gamepad mapping (#900)\n- Added `glfwGetGamepadState` function, `GLFW_GAMEPAD_*` and `GLFWgamepadstate`\n  for retrieving gamepad input state (#900)\n- Added `glfwGetWindowContentScale`, `glfwGetMonitorContentScale` and\n  `glfwSetWindowContentScaleCallback` for DPI-aware rendering\n  (#235,#439,#677,#845,#898)\n- Added `glfwRequestWindowAttention` function for requesting attention from the\n  user (#732,#988)\n- Added `glfwGetKeyScancode` function that allows retrieving platform dependent\n  scancodes for keys (#830)\n- Added `glfwSetWindowMaximizeCallback` and `GLFWwindowmaximizefun` for\n  receiving window maximization events (#778)\n- Added `glfwSetWindowAttrib` function for changing window attributes (#537)\n- Added `glfwGetJoystickHats` function for querying joystick hats\n  (#889,#906,#934)\n- Added `glfwInitHint` for setting initialization hints\n- Added `glfwWindowHintString` for setting string type window hints (#893,#1139)\n- Added `glfwGetWindowOpacity` and `glfwSetWindowOpacity` for controlling whole\n  window transparency (#1089)\n- Added `glfwSetMonitorUserPointer` and `glfwGetMonitorUserPointer` for\n  per-monitor user pointers\n- Added `glfwSetJoystickUserPointer` and `glfwGetJoystickUserPointer` for\n  per-joystick user pointers\n- Added `glfwGetX11SelectionString` and `glfwSetX11SelectionString`\n  functions for accessing X11 primary selection (#894,#1056)\n- Added headless [OSMesa](http://mesa3d.org/osmesa.html) backend (#850)\n- Added definition of `GLAPIENTRY` to public header\n- Added `GLFW_TRANSPARENT_FRAMEBUFFER` window hint and attribute for controlling\n  per-pixel framebuffer transparency (#197,#663,#715,#723,#1078)\n- Added `GLFW_HOVERED` window attribute for polling cursor hover state (#1166)\n- Added `GLFW_CENTER_CURSOR` window hint for controlling cursor centering\n  (#749,#842)\n- Added `GLFW_FOCUS_ON_SHOW` window hint and attribute to control input focus\n  on calling show window (#1189)\n- Added `GLFW_SCALE_TO_MONITOR` window hint for automatic window resizing\n  (#676,#1115)\n- Added `GLFW_JOYSTICK_HAT_BUTTONS` init hint (#889)\n- Added `GLFW_LOCK_KEY_MODS` input mode and `GLFW_MOD_*_LOCK` mod bits (#946)\n- Added macOS specific `GLFW_COCOA_RETINA_FRAMEBUFFER` window hint\n- Added macOS specific `GLFW_COCOA_FRAME_NAME` window hint (#195)\n- Added macOS specific `GLFW_COCOA_GRAPHICS_SWITCHING` window hint (#377,#935)\n- Added macOS specific `GLFW_COCOA_CHDIR_RESOURCES` init hint\n- Added macOS specific `GLFW_COCOA_MENUBAR` init hint\n- Added X11 specific `GLFW_X11_CLASS_NAME` and `GLFW_X11_INSTANCE_NAME` window\n  hints (#893,#1139)\n- Added `GLFW_INCLUDE_ES32` for including the OpenGL ES 3.2 header\n- Added `GLFW_OSMESA_CONTEXT_API` for creating OpenGL contexts with\n  [OSMesa](https://www.mesa3d.org/osmesa.html) (#281)\n- Added `GenerateMappings.cmake` script for updating gamepad mappings\n- Made `glfwCreateWindowSurface` emit an error when the window has a context\n  (#1194,#1205)\n- Deprecated window parameter of clipboard string functions\n- Deprecated charmods callback\n- Removed `GLFW_USE_RETINA` compile-time option\n- Removed `GLFW_USE_CHDIR` compile-time option\n- Removed `GLFW_USE_MENUBAR` compile-time option\n- Bugfix: Calling `glfwMaximizeWindow` on a full screen window was not ignored\n- Bugfix: `GLFW_INCLUDE_VULKAN` could not be combined with the corresponding\n          OpenGL and OpenGL ES header macros\n- Bugfix: `glfwGetInstanceProcAddress` returned `NULL` for\n          `vkGetInstanceProcAddr` when `_GLFW_VULKAN_STATIC` was enabled\n- Bugfix: Invalid library paths were used in test and example CMake files (#930)\n- Bugfix: The scancode for synthetic key release events was always zero\n- Bugfix: The generated Doxyfile did not handle paths with spaces (#1081)\n- [Win32] Added system error strings to relevant GLFW error descriptions (#733)\n- [Win32] Moved to `WM_INPUT` for disabled cursor mode motion input (#125)\n- [Win32] Removed XInput circular deadzone from joystick axis data (#1045)\n- [Win32] Bugfix: Undecorated windows could not be iconified by the user (#861)\n- [Win32] Bugfix: Deadzone logic could underflow with some controllers (#910)\n- [Win32] Bugfix: Bitness test in `FindVulkan.cmake` was VS specific (#928)\n- [Win32] Bugfix: `glfwVulkanSupported` emitted an error on systems with\n                  a loader but no ICD (#916)\n- [Win32] Bugfix: Non-iconified full sreeen windows did not prevent screen\n                  blanking or password enabled screensavers (#851)\n- [Win32] Bugfix: Mouse capture logic lost secondary release messages (#954)\n- [Win32] Bugfix: The 32-bit Vulkan loader library static was not searched for\n- [Win32] Bugfix: Vulkan libraries have a new path as of SDK 1.0.42.0 (#956)\n- [Win32] Bugfix: Monitors with no display devices were not enumerated (#960)\n- [Win32] Bugfix: Monitor events were not emitted (#784)\n- [Win32] Bugfix: The Cygwin DLL was installed to the wrong directory (#1035)\n- [Win32] Bugfix: Normalization of axis data via XInput was incorrect (#1045)\n- [Win32] Bugfix: `glfw3native.h` would undefine a foreign `APIENTRY` (#1062)\n- [Win32] Bugfix: Disabled cursor mode prevented use of caption buttons\n                  (#650,#1071)\n- [Win32] Bugfix: Returned key names did not match other platforms (#943)\n- [Win32] Bugfix: Undecorated windows did not maximize to workarea (#899)\n- [Win32] Bugfix: Window was resized twice when entering full screen (#1085)\n- [Win32] Bugfix: The HID device notification was not unregistered (#1170)\n- [Win32] Bugfix: `glfwCreateWindow` activated window even with `GLFW_FOCUSED`\n                  hint set to false (#1179,#1180)\n- [Win32] Bugfix: The keypad equals key was reported as `GLFW_KEY_UNKNOWN`\n                  (#1315,#1316)\n- [X11] Moved to XI2 `XI_RawMotion` for disable cursor mode motion input (#125)\n- [X11] Replaced `_GLFW_HAS_XF86VM` compile-time option with dynamic loading\n- [X11] Bugfix: `glfwGetVideoMode` would segfault on Cygwin/X\n- [X11] Bugfix: Dynamic X11 library loading did not use full sonames (#941)\n- [X11] Bugfix: Window creation on 64-bit would read past top of stack (#951)\n- [X11] Bugfix: XDND support had multiple non-conformance issues (#968)\n- [X11] Bugfix: The RandR monitor path was disabled despite working RandR (#972)\n- [X11] Bugfix: IM-duplicated key events would leak at low polling rates (#747)\n- [X11] Bugfix: Gamma ramp setting via RandR did not validate ramp size\n- [X11] Bugfix: Key name string encoding depended on current locale (#981,#983)\n- [X11] Bugfix: Incremental reading of selections was not supported (#275)\n- [X11] Bugfix: Selection I/O reported but did not support `COMPOUND_TEXT`\n- [X11] Bugfix: Latin-1 text read from selections was not converted to UTF-8\n- [X11] Bugfix: NVidia EGL would segfault if unloaded before closing the display\n- [X11] Bugfix: Checking window maximized attrib could crash some WMs (#1356)\n- [X11] Bugfix: Update cursor position on enter event (#1366)\n- [Linux] Added workaround for missing `SYN_DROPPED` in pre-2.6.39 kernel\n          headers (#1196)\n- [Linux] Moved to evdev for joystick input (#906,#1005)\n- [Linux] Bugfix: Event processing did not detect joystick disconnection (#932)\n- [Linux] Bugfix: The joystick device path could be truncated (#1025)\n- [Linux] Bugfix: `glfwInit` would fail if inotify creation failed (#833)\n- [Linux] Bugfix: `strdup` was used without any required feature macro (#1055)\n- [Cocoa] Added support for Vulkan window surface creation via\n          [MoltenVK](https://moltengl.com/moltenvk/) (#870)\n- [Cocoa] Added support for loading a `MainMenu.nib` when available\n- [Cocoa] Bugfix: Disabling window aspect ratio would assert (#852)\n- [Cocoa] Bugfix: Window creation failed to set first responder (#876,#883)\n- [Cocoa] Bugfix: Removed use of deprecated `CGDisplayIOServicePort` function\n                  (#165,#192,#508,#511)\n- [Cocoa] Bugfix: Disabled use of deprecated `CGDisplayModeCopyPixelEncoding`\n                  function on macOS 10.12+\n- [Cocoa] Bugfix: Running in AppSandbox would emit warnings (#816,#882)\n- [Cocoa] Bugfix: Windows created after the first were not cascaded (#195)\n- [Cocoa] Bugfix: Leaving video mode with `glfwSetWindowMonitor` would set\n                  incorrect position and size (#748)\n- [Cocoa] Bugfix: Iconified full screen windows could not be restored (#848)\n- [Cocoa] Bugfix: Value range was ignored for joystick hats and buttons (#888)\n- [Cocoa] Bugfix: Full screen framebuffer was incorrectly sized for some video\n                  modes (#682)\n- [Cocoa] Bugfix: A string object for IME was updated non-idiomatically (#1050)\n- [Cocoa] Bugfix: A hidden or disabled cursor would become visible when a user\n                  notification was shown (#971,#1028)\n- [Cocoa] Bugfix: Some characters did not repeat due to Press and Hold (#1010)\n- [Cocoa] Bugfix: Window title was lost when full screen or undecorated (#1082)\n- [Cocoa] Bugfix: Window was resized twice when entering full screen (#1085)\n- [Cocoa] Bugfix: Duplicate size events were not filtered (#1085)\n- [Cocoa] Bugfix: Event polling did not initialize AppKit if necessary (#1218)\n- [Cocoa] Bugfix: OpenGL rendering was not initially visible on 10.14\n                  (#1334,#1346)\n- [WGL] Added support for `WGL_EXT_colorspace` for OpenGL ES contexts\n- [WGL] Added support for `WGL_ARB_create_context_no_error`\n- [GLX] Added support for `GLX_ARB_create_context_no_error`\n- [GLX] Bugfix: Context creation could segfault if no GLXFBConfigs were\n                available (#1040)\n- [EGL] Added support for `EGL_KHR_get_all_proc_addresses` (#871)\n- [EGL] Added support for `EGL_KHR_context_flush_control`\n- [EGL] Bugfix: The test for `EGL_RGB_BUFFER` was invalid\n\n\n## Contact\n\nOn [glfw.org](http://www.glfw.org/) you can find the latest version of GLFW, as\nwell as news, documentation and other information about the project.\n\nIf you have questions related to the use of GLFW, we have a\n[forum](http://discourse.glfw.org/), and the `#glfw` IRC channel on\n[Freenode](http://freenode.net/).\n\nIf you have a bug to report, a patch to submit or a feature you'd like to\nrequest, please file it in the\n[issue tracker](https://github.com/glfw/glfw/issues) on GitHub.\n\nFinally, if you're interested in helping out with the development of GLFW or\nporting it to your favorite platform, join us on the forum, GitHub or IRC.\n\n\n## Acknowledgements\n\nGLFW exists because people around the world donated their time and lent their\nskills.\n\n - Bobyshev Alexander\n - Matt Arsenault\n - David Avedissian\n - Keith Bauer\n - John Bartholomew\n - Coşku Baş\n - Niklas Behrens\n - Niklas Bergström\n - Denis Bernard\n - Doug Binks\n - blanco\n - Kyle Brenneman\n - Rok Breulj\n - Martin Capitanio\n - David Carlier\n - Arturo Castro\n - Chi-kwan Chan\n - Ian Clarkson\n - Michał Cichoń\n - Lambert Clara\n - Yaron Cohen-Tal\n - Omar Cornut\n - Andrew Corrigan\n - Bailey Cosier\n - Noel Cower\n - Jason Daly\n - Jarrod Davis\n - Olivier Delannoy\n - Paul R. Deppe\n - Michael Dickens\n - Роман Донченко\n - Mario Dorn\n - Wolfgang Draxinger\n - Jonathan Dummer\n - Ralph Eastwood\n - Fredrik Ehnbom\n - Robin Eklind\n - Siavash Eliasi\n - Felipe Ferreira\n - Michael Fogleman\n - Gerald Franz\n - Mário Freitas\n - GeO4d\n - Marcus Geelnard\n - Stephen Gowen\n - Kovid Goyal\n - Eloi Marín Gratacós\n - Stefan Gustavson\n - Jonathan Hale\n - Sylvain Hellegouarch\n - Matthew Henry\n - heromyth\n - Lucas Hinderberger\n - Paul Holden\n - Warren Hu\n - IntellectualKitty\n - Aaron Jacobs\n - Erik S. V. Jansson\n - Toni Jovanoski\n - Arseny Kapoulkine\n - Cem Karan\n - Osman Keskin\n - Josh Kilmer\n - Cameron King\n - Peter Knut\n - Christoph Kubisch\n - Yuri Kunde Schlesner\n - Konstantin Käfer\n - Eric Larson\n - Robin Leffmann\n - Glenn Lewis\n - Shane Liesegang\n - Eyal Lotem\n - Tristam MacDonald\n - Hans Mackowiak\n - Дмитри Малышев\n - Zbigniew Mandziejewicz\n - Célestin Marot\n - Kyle McDonald\n - David Medlock\n - Bryce Mehring\n - Jonathan Mercier\n - Marcel Metz\n - Liam Middlebrook\n - Jonathan Miller\n - Kenneth Miller\n - Bruce Mitchener\n - Jack Moffitt\n - Jeff Molofee\n - Pierre Morel\n - Jon Morton\n - Pierre Moulon\n - Martins Mozeiko\n - Julian Møller\n - ndogxj\n - Kristian Nielsen\n - Kamil Nowakowski\n - Denis Ovod\n - Ozzy\n - Andri Pálsson\n - Peoro\n - Braden Pellett\n - Christopher Pelloux\n - Arturo J. Pérez\n - Anthony Pesch\n - Orson Peters\n - Emmanuel Gil Peyrot\n - Cyril Pichard\n - Keith Pitt\n - Stanislav Podgorskiy\n - Alexandre Pretyman\n - przemekmirek\n - Philip Rideout\n - Eddie Ringle\n - Jorge Rodriguez\n - Ed Ropple\n - Aleksey Rybalkin\n - Riku Salminen\n - Brandon Schaefer\n - Sebastian Schuberth\n - Christian Sdunek\n - Matt Sealey\n - Steve Sexton\n - Arkady Shapkin\n - Yoshiki Shibukawa\n - Dmitri Shuralyov\n - Daniel Skorupski\n - Bradley Smith\n - Patrick Snape\n - Erlend Sogge Heggen\n - Julian Squires\n - Johannes Stein\n - Pontus Stenetorp\n - Michael Stocker\n - Justin Stoecker\n - Elviss Strazdins\n - Paul Sultana\n - Nathan Sweet\n - TTK-Bandit\n - Sergey Tikhomirov\n - Arthur Tombs\n - Ioannis Tsakpinis\n - Samuli Tuomola\n - Matthew Turner\n - urraka\n - Elias Vanderstuyft\n - Stef Velzel\n - Jari Vetoniemi\n - Ricardo Vieira\n - Nicholas Vitovitch\n - Simon Voordouw\n - Corentin Wallez\n - Torsten Walluhn\n - Patrick Walton\n - Xo Wang\n - Jay Weisskopf\n - Frank Wille\n - Ryogo Yoshimura\n - Andrey Zholos\n - Santi Zupancic\n - Jonas Ådahl\n - Lasse Öörni\n - All the unmentioned and anonymous contributors in the GLFW community, for bug\n   reports, patches, feedback, testing and encouragement\n\n","versions":[{"ref":"master","manifest":"targets = [ \"//:glfw\" ]\n\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/host-cocoa\"\nversion = \"branch=master\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/host-core-foundation\"\nversion = \"branch=master\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/host-core-video\"\nversion = \"branch=master\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/host-dl\"\nversion = \"branch=master\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/host-io-kit\"\nversion = \"branch=master\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/host-pthread\"\nversion = \"branch=master\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/pkg-config-gl\"\nversion = \"branch=master\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/pkg-config-x11\"\nversion = \"branch=master\"\n","lockFile":"manifest = \"a5f0e3fdfb981118ae35284aec950f7b7fe4faeb8482ded83b7a9255a14c2adc\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/host-cocoa\"\ntarget = \"//:cocoa\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/host-core-foundation\"\ntarget = \"//:core-foundation\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/host-core-video\"\ntarget = \"//:core-video\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/host-dl\"\ntarget = \"//:dl\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/host-io-kit\"\ntarget = \"//:io-kit\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/host-pthread\"\ntarget = \"//:pthread\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/pkg-config-gl\"\ntarget = \"//:gl\"\n\n[[dependency]]\npackage = \"github.com/buckaroo-pm/pkg-config-x11\"\ntarget = \"//:x11\"\n\n[lock.\"github.com/buckaroo-pm/host-cocoa\"]\nversions = [ \"branch=master\" ]\nrevision = \"72ea2945d7e139d9f4803c726339778e619b8cdb\"\n\n[lock.\"github.com/buckaroo-pm/host-core-foundation\"]\nversions = [ \"branch=master\" ]\nrevision = \"fd7081ffe1244afb86c41c2d41d3603f851feae8\"\n\n[lock.\"github.com/buckaroo-pm/host-core-video\"]\nversions = [ \"branch=master\" ]\nrevision = \"65639f49f1a4836f0f3b31503ebad8c9c2a73a71\"\n\n[lock.\"github.com/buckaroo-pm/host-dl\"]\nversions = [ \"branch=master\" ]\nrevision = \"69a239353756c2ef5c97e5a56a0964fb7ac6eb49\"\n\n[lock.\"github.com/buckaroo-pm/host-io-kit\"]\nversions = [ \"branch=master\" ]\nrevision = \"68cf79a5a0cecfb6d68896ad29d3b0c001849dd5\"\n\n[lock.\"github.com/buckaroo-pm/host-pthread\"]\nversions = [ \"branch=master\" ]\nrevision = \"a62519aa69c8e3243d6065fbf4c1d2de072f86f6\"\n\n[lock.\"github.com/buckaroo-pm/pkg-config-gl\"]\nversions = [ \"branch=master\" ]\nrevision = \"c8734a6884d0aaa713c059673a103fe58de08084\"\n\n[lock.\"github.com/buckaroo-pm/pkg-config-x11\"]\nversions = [ \"branch=master\" ]\nrevision = \"6f292a6166cd3c45c776b294485a24e7d71c0e0c\"\n","buck":"load('//:buckaroo_macros.bzl', 'buckaroo_deps_from_package')\nload('//:subdir_glob.bzl', 'subdir_glob')\n\nnull_srcs = glob([\n  'src/**/null_*.c',\n])\n\nmacos_srcs = glob([\n  'src/cocoa_*.c',\n  'src/cocoa_*.m',\n  'src/nsgl_*.m',\n  'src/posix_tls.c',\n  'src/vulkan.c',\n])\n\nlinux_srcs = glob([\n  'src/linux_*.c',\n])\n\nposix_srcs = glob([\n  'src/posix_*.c',\n])\n\nmir_srcs = glob([\n  'src/mir_*.c',\n])\n\negl_srcs = glob([\n  'src/egl_*.c',\n])\n\nx11_srcs = glob([\n  'src/x11_*.c',\n])\n\nglx_srcs = glob([\n  'src/glx_*.c',\n])\n\nwgl_srcs = glob([\n  'src/wgl_*.c',\n])\n\nwl_srcs = glob([\n  'src/wl_*.c',\n])\n\nwindows_srcs = glob([\n  'src/win32_*.c',\n])\n\nvulkan_srcs = glob([\n  'src/vulkan.c',\n])\n\nplatform_srcs = \\\n  null_srcs + macos_srcs + windows_srcs + linux_srcs + \\\n  posix_srcs + mir_srcs + x11_srcs + glx_srcs + \\\n  egl_srcs + wgl_srcs + wl_srcs + vulkan_srcs\n\nmacos_flags = [\n  '-D_GLFW_COCOA',\n  '-D_GLFW_USE_MENUBAR',\n  '-D_GLFW_USE_RETINA',\n]\n\nlinux_flags = [\n  '-D_GLFW_X11',\n]\n\nwindows_flags = [\n  '-D_GLFW_WIN32',\n]\n\nmacos_exported_linker_flags = [\n  '-framework', 'Cocoa',\n  '-framework', 'IOKit',\n  '-framework', 'CoreVideo',\n]\n\nwindows_exported_linker_flags = [\n  'User32.lib',\n  'Gdi32.lib',\n  'Shell32.lib',\n]\n\nlinux_deps = \\\n  buckaroo_deps_from_package('github.com/buckaroo-pm/pkg-config-gl') + \\\n  buckaroo_deps_from_package('github.com/buckaroo-pm/pkg-config-x11') + \\\n  buckaroo_deps_from_package('github.com/buckaroo-pm/host-dl') + \\\n  buckaroo_deps_from_package('github.com/buckaroo-pm/host-pthread')\n\nmacos_deps = \\\n  buckaroo_deps_from_package('github.com/buckaroo-pm/host-cocoa') + \\\n  buckaroo_deps_from_package('github.com/buckaroo-pm/host-io-kit') + \\\n  buckaroo_deps_from_package('github.com/buckaroo-pm/host-core-foundation') + \\\n  buckaroo_deps_from_package('github.com/buckaroo-pm/host-core-video')\n\ncxx_library(\n  name = 'glfw',\n  header_namespace = '',\n  exported_headers = subdir_glob([\n    ('include', 'GLFW/*.h'),\n  ]),\n  headers = subdir_glob([\n    ('src', '*/*.h'),\n  ]),\n  srcs = glob([\n    'src/**/*.c',\n  ], exclude = platform_srcs),\n  platform_srcs = [\n    ('linux.*', linux_srcs + posix_srcs + x11_srcs + egl_srcs + glx_srcs + vulkan_srcs),\n    ('macos.*', macos_srcs),\n    ('windows.*', windows_srcs + egl_srcs + wgl_srcs + vulkan_srcs),\n  ],\n  compiler_flags = [\n    '-D_GLFW_BUILD_DLL',\n  ],\n  platform_compiler_flags = [\n    ('^macos.*', macos_flags),\n    ('^linux.*', linux_flags),\n    ('^windows.*', windows_flags),\n  ],\n  exported_platform_linker_flags = [\n    ('^macos.*', macos_exported_linker_flags),\n    ('^windows.*', windows_exported_linker_flags),\n  ],\n  platform_deps = [\n    ('linux.*', linux_deps),\n    ('macos.*', macos_deps),\n  ],\n  licenses = [\n    'LICENSE.md',\n  ],\n  visibility = [\n    'PUBLIC',\n  ],\n)\n","bazel":"","deps":[{"uri":"github.com/buckaroo-pm/host-cocoa","name":"buckaroo-pm/host-cocoa","version":"branch=master"},{"uri":"github.com/buckaroo-pm/host-core-foundation","name":"buckaroo-pm/host-core-foundation","version":"branch=master"},{"uri":"github.com/buckaroo-pm/host-core-video","name":"buckaroo-pm/host-core-video","version":"branch=master"},{"uri":"github.com/buckaroo-pm/host-dl","name":"buckaroo-pm/host-dl","version":"branch=master"},{"uri":"github.com/buckaroo-pm/host-io-kit","name":"buckaroo-pm/host-io-kit","version":"branch=master"},{"uri":"github.com/buckaroo-pm/host-pthread","name":"buckaroo-pm/host-pthread","version":"branch=master"},{"uri":"github.com/buckaroo-pm/pkg-config-gl","name":"buckaroo-pm/pkg-config-gl","version":"branch=master"},{"uri":"github.com/buckaroo-pm/pkg-config-x11","name":"buckaroo-pm/pkg-config-x11","version":"branch=master"}],"lock":[{"uri":"github.com/buckaroo-pm/host-cocoa","name":"buckaroo-pm/host-cocoa","spec":{"versions":["branch=master"],"revision":"72ea2945d7e139d9f4803c726339778e619b8cdb"}},{"uri":"github.com/buckaroo-pm/host-core-foundation","name":"buckaroo-pm/host-core-foundation","spec":{"versions":["branch=master"],"revision":"fd7081ffe1244afb86c41c2d41d3603f851feae8"}},{"uri":"github.com/buckaroo-pm/host-core-video","name":"buckaroo-pm/host-core-video","spec":{"versions":["branch=master"],"revision":"65639f49f1a4836f0f3b31503ebad8c9c2a73a71"}},{"uri":"github.com/buckaroo-pm/host-dl","name":"buckaroo-pm/host-dl","spec":{"versions":["branch=master"],"revision":"69a239353756c2ef5c97e5a56a0964fb7ac6eb49"}},{"uri":"github.com/buckaroo-pm/host-io-kit","name":"buckaroo-pm/host-io-kit","spec":{"versions":["branch=master"],"revision":"68cf79a5a0cecfb6d68896ad29d3b0c001849dd5"}},{"uri":"github.com/buckaroo-pm/host-pthread","name":"buckaroo-pm/host-pthread","spec":{"versions":["branch=master"],"revision":"a62519aa69c8e3243d6065fbf4c1d2de072f86f6"}},{"uri":"github.com/buckaroo-pm/pkg-config-gl","name":"buckaroo-pm/pkg-config-gl","spec":{"versions":["branch=master"],"revision":"c8734a6884d0aaa713c059673a103fe58de08084"}},{"uri":"github.com/buckaroo-pm/pkg-config-x11","name":"buckaroo-pm/pkg-config-x11","spec":{"versions":["branch=master"],"revision":"6f292a6166cd3c45c776b294485a24e7d71c0e0c"}}]}],"updated":"2019-06-16T11:11:19Z","updatedUpstream":"2021-01-13T22:30:24Z","contributors":[{"login":"cmarcelo","avatarUrl":"https://avatars3.githubusercontent.com/u/10478?v=4"},{"login":"jamorton","avatarUrl":"https://avatars1.githubusercontent.com/u/18852?u=119f63df16c43d3d18677808c1775e0622f15dfc&v=4"},{"login":"keithpitt","avatarUrl":"https://avatars1.githubusercontent.com/u/25882?u=ffb4d580ca71f149460a3a5e877dae0745fd0103&v=4"},{"login":"metajack","avatarUrl":"https://avatars3.githubusercontent.com/u/28357?u=83e28aabcefc43345d562e0a33efd6001526e7bf&v=4"},{"login":"EddieRingle","avatarUrl":"https://avatars2.githubusercontent.com/u/32543?u=fac5a3a6f086a9351d1e439ab47a62ec81232658&v=4"},{"login":"mith","avatarUrl":"https://avatars0.githubusercontent.com/u/33195?v=4"},{"login":"tikhomirov","avatarUrl":"https://avatars2.githubusercontent.com/u/36554?u=06945dd662540d912465baf8108cddbd62bac421&v=4"},{"login":"OneSadCookie","avatarUrl":"https://avatars2.githubusercontent.com/u/37714?u=2acaad520dc9dbdfb6315f4a9fa6d1d09d3e7eae&v=4"},{"login":"GHF","avatarUrl":"https://avatars0.githubusercontent.com/u/38979?v=4"},{"login":"nilium","avatarUrl":"https://avatars3.githubusercontent.com/u/44962?u=7ae87432ccbe3513a26941a958f7589b79607c46&v=4"},{"login":"jadahl","avatarUrl":"https://avatars1.githubusercontent.com/u/46741?v=4"},{"login":"arturoc","avatarUrl":"https://avatars0.githubusercontent.com/u/48240?v=4"},{"login":"kkaefer","avatarUrl":"https://avatars1.githubusercontent.com/u/52399?u=7b3a53dfef51246b5c1342108a664842b4ea3571&v=4"},{"login":"cosier","avatarUrl":"https://avatars2.githubusercontent.com/u/65694?u=7899268fd4ea85851c0d06b5bed2609e356d1c76&v=4"},{"login":"knielsen","avatarUrl":"https://avatars0.githubusercontent.com/u/79553?v=4"},{"login":"adrianbroher","avatarUrl":"https://avatars3.githubusercontent.com/u/84891?v=4"},{"login":"eropple","avatarUrl":"https://avatars2.githubusercontent.com/u/109262?v=4"},{"login":"johnbartholomew","avatarUrl":"https://avatars3.githubusercontent.com/u/115749?u=00b5e5c4202de7d33a763170059fe1f0d2b5bc22&v=4"},{"login":"perminovVS","avatarUrl":"https://avatars0.githubusercontent.com/u/126923?u=3676404e03eb7f65db3a2c590d3da7acbecefaae&v=4"},{"login":"elmindreda","avatarUrl":"https://avatars0.githubusercontent.com/u/133714?v=4"},{"login":"arsenm","avatarUrl":"https://avatars3.githubusercontent.com/u/138339?v=4"},{"login":"raedwulf","avatarUrl":"https://avatars0.githubusercontent.com/u/143964?v=4"},{"login":"kylemcdonald","avatarUrl":"https://avatars2.githubusercontent.com/u/157106?u=7b8da0cd0f30ef8e45836b5180913606eac6feea&v=4"},{"login":"michaelld","avatarUrl":"https://avatars0.githubusercontent.com/u/157892?v=4"},{"login":"pcwalton","avatarUrl":"https://avatars1.githubusercontent.com/u/157897?u=fab8268f5338550918b6e4379bb3ac6f6dce67c6&v=4"}],"fundingLinks":[],"contactLinks":[],"stars":7115,"forks":2618,"topics":["vulkan","opengl","c","linux","macos","windows","unix","opengl-es"]}},"__N_SSG":true}