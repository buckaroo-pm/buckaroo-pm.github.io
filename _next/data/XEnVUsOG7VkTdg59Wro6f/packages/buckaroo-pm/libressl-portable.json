{"pageProps":{"data":{"packageName":"buckaroo-pm/libressl-portable","name":"libressl-portable/portable","licence":"","description":"LibreSSL Portable itself. This includes the build scaffold and compatibility layer that builds portable LibreSSL from the OpenBSD source code. Pull requests or patches sent to tech@openbsd.org are welcome.","readme":"![LibreSSL image](https://www.libressl.org/images/libressl.jpg)\n## Official portable version of [LibreSSL](https://www.libressl.org) ##\n\n[![Build Status](https://travis-ci.org/libressl-portable/portable.svg?branch=master)](https://travis-ci.org/libressl-portable/portable)\n\nLibreSSL is a fork of [OpenSSL](https://www.openssl.org) 1.0.1g developed by the\n[OpenBSD](https://www.openbsd.org) project.  Our goal is to modernize the codebase,\nimprove security, and apply best practice development processes from OpenBSD.\n\n## Compatibility with OpenSSL: ##\n\nLibreSSL is API compatible with OpenSSL 1.0.1, but does not yet include all\nnew APIs from OpenSSL 1.0.2 and later. LibreSSL also includes APIs not yet\npresent in OpenSSL. The current common API subset is OpenSSL 1.0.1.\n\nLibreSSL is not ABI compatible with any release of OpenSSL, or necessarily\nearlier releases of LibreSSL. You will need to relink your programs to\nLibreSSL in order to use it, just as in moving between major versions of OpenSSL.\nLibreSSL's installed library version numbers are incremented to account for\nABI and API changes.\n\n## Compatibility with other operating systems: ##\n\nWhile primarily developed on and taking advantage of APIs available on OpenBSD,\nthe LibreSSL portable project attempts to provide working alternatives for\nother operating systems, and assists with improving OS-native implementations\nwhere possible.\n\nAt the time of this writing, LibreSSL is know to build and work on:\n\n* Linux (kernel 3.17 or later recommended)\n* FreeBSD (tested with 9.2 and later)\n* NetBSD (7.0 or later recommended)\n* HP-UX (11i)\n* Solaris (11 and later preferred)\n* Mac OS X (tested with 10.8 and later)\n* AIX (5.3 and later)\n\nLibreSSL also supports the following Windows environments:\n* Microsoft Windows (Vista or higher, x86 and x64)\n* Wine (32-bit and 64-bit)\n* Builds with Mingw-w64, Cygwin, and Visual Studio\n\nOfficial release tarballs are available at your friendly neighborhood\nOpenBSD mirror in directory\n[LibreSSL](https://ftp.openbsd.org/pub/OpenBSD/LibreSSL/),\nalthough we suggest that you use a [mirror](https://www.openbsd.org/ftp.html).\n\nThe LibreSSL portable build framework is also\n[mirrored](https://github.com/libressl-portable/portable) in Github.\n\nPlease report bugs either to the public libressl@openbsd.org mailing list,\nor to the github\n[issue tracker](https://github.com/libressl-portable/portable/issues)\n\nSevere vulnerabilities or bugs requiring coordination with OpenSSL can be\nsent to the core team at libressl-security@openbsd.org.\n\n# Building LibreSSL #\n\n## Prerequisites when building from a Git checkout ##\n\nIf you have checked this source using Git, or have downloaded a source tarball\nfrom Github, follow these initial steps to prepare the source tree for\nbuilding. _Note: Your build will fail if you do not follow these instructions! If you cannot follow these instructions (e.g. Windows system using CMake) or cannot meet these prerequistes, please download an official release distribution from https://ftp.openbsd.org/pub/OpenBSD/LibreSSL/ instead. Using official releases is strongly advised if you are not a developer._\n\n1. Ensure you have the following packages installed:\n   automake, autoconf, git, libtool, perl\n2. Run './autogen.sh' to prepare the source tree for building or\n   run './dist.sh' to prepare a tarball.\n\n## Steps that apply to all builds ##\n\nOnce you have a source tree, either by downloaded using git and having\nrun the autogen.sh script above, or by downloading a release distribution from\nan OpenBSD mirror, run these commands to build and install the package on most\nsystems:\n\n```sh\n./configure   # see ./configure --help for configuration options\nmake check    # runs builtin unit tests\nmake install  # set DESTDIR= to install to an alternate location\n```\n\nIf you wish to use the CMake build system, use these commands:\n\n```sh\nmkdir build\ncd build\ncmake ..\nmake\nmake test\n```\n\nFor faster builds, you can use Ninja as well:\n\n```sh\nmkdir build-ninja\ncd build-ninja\ncmake -G\"Ninja\" ..\nninja\nninja test\n```\n\n### OS specific build information: ###\n\n#### HP-UX (11i) ####\n\nSet the UNIX_STD environment variable to '2003' before running 'configure'\nin order to build with the HP C/aC++ compiler. See the \"standards(5)\" man\npage for more details.\n\n```sh\nexport UNIX_STD=2003\n./configure\nmake\n```\n\n#### Windows - Mingw-w64 ####\n\nLibreSSL builds against relatively recent versions of Mingw-w64, not to be\nconfused with the original mingw.org project.  Mingw-w64 3.2 or later\nshould work. See README.windows for more information\n\n#### Windows - Visual Studio ####\n\nLibreSSL builds using the CMake target \"Visual Studio 12 2013\" and newer. To\ngenerate a Visual Studio project, install CMake, enter the LibreSSL source\ndirectory and run:\n\n```sh\n mkdir build-vs2013\n cd build-vs2013\n cmake -G\"Visual Studio 12 2013\" ..\n```\n\nReplace \"Visual Studion 12 2013\" with whatever version of Visual Studio you\nhave installed. This will generate a LibreSSL.sln file that you can incorporate\ninto other projects or build by itself.\n\n#### Cmake - Additional Options ####\n\n| Option Name | Default | Description\n| ------------ | -----: | ------\n|  LIBRESSL_SKIP_INSTALL | OFF | allows skipping install() rules.  Can be specified from command line using <br>```-DLIBRESSL_SKIP_INSTALL=ON``` |\n|  LIBRESSL_APPS | ON | allows skipping application builds. Apps are required to run tests |\n|  LIBRESSL_TESTS | ON | allows skipping of tests. Tests are only available in static builds |\n|  BUILD_SHARED_LIBS | OFF | CMake option for building shared libraries. |\n|  ENABLE_ASM | ON | builds assembly optimized rules. |\n|  ENABLE_EXTRATESTS | OFF | Enable extra tests that may be unreliable on some platforms |\n|  ENABLE_NC | OFF | Enable installing TLS-enabled nc(1) |\n|  OPENSSLDIR | Blank | Set the default openssl directory.  Can be specified from command line using <br>```-DOPENSSLDIR=<dirname>``` |\n\n","versions":[{"ref":"master","manifest":"targets = [ \"//:crypto\", \"//:ssl\", \"//:tls\" ]\n","lockFile":"","buck":"load('//:extract.bzl', 'extract')\n\nheaders = [\n  'openssl/aes.h',\n  'openssl/chacha.h',\n  'openssl/dsa.h',\n  'openssl/gost.h',\n  'openssl/obj_mac.h',\n  'openssl/pkcs7.h',\n  'openssl/sm3.h',\n  'openssl/txt_db.h',\n  'openssl/asn1.h',\n  'openssl/cmac.h',\n  'openssl/dso.h',\n  'openssl/hkdf.h',\n  'openssl/ocsp.h',\n  'openssl/poly1305.h',\n  'openssl/srtp.h',\n  'openssl/ui_compat.h',\n  'openssl/asn1t.h',\n  'openssl/comp.h',\n  'openssl/dtls1.h',\n  'openssl/hmac.h',\n  'openssl/opensslconf.h',\n  'openssl/rand.h',\n  'openssl/ssl23.h',\n  'openssl/ui.h',\n  'openssl/bio.h',\n  'openssl/conf_api.h',\n  'openssl/ecdh.h',\n  'openssl/idea.h',\n  'openssl/opensslfeatures.h',\n  'openssl/rc2.h',\n  'openssl/ssl2.h',\n  'openssl/whrlpool.h',\n  'openssl/blowfish.h',\n  'openssl/conf.h',\n  'openssl/ecdsa.h',\n  'openssl/lhash.h',\n  'openssl/opensslv.h',\n  'openssl/rc4.h',\n  'openssl/ssl3.h',\n  'openssl/x509.h',\n  'openssl/bn.h',\n  'openssl/crypto.h',\n  'openssl/ec.h',\n  'openssl/md4.h',\n  'openssl/ossl_typ.h',\n  'openssl/ripemd.h',\n  'openssl/ssl.h',\n  'openssl/x509v3.h',\n  'openssl/buffer.h',\n  'openssl/curve25519.h',\n  'openssl/engine.h',\n  'openssl/md5.h',\n  'openssl/pem2.h',\n  'openssl/rsa.h',\n  'openssl/stack.h',\n  'openssl/x509_vfy.h',\n  'openssl/camellia.h',\n  'openssl/des.h',\n  'openssl/err.h',\n  'openssl/modes.h',\n  'openssl/pem.h',\n  'openssl/safestack.h',\n  'openssl/tls1.h',\n  'openssl/cast.h',\n  'openssl/dh.h',\n  'openssl/evp.h',\n  'openssl/objects.h',\n  'openssl/pkcs12.h',\n  'openssl/sha.h',\n  'openssl/ts.h', \n  'tls.h', \n]\n\nopenssl_dir = read_config('openssl', 'openssl_dir', '/usr/local/ssl')\n\ngenrule(\n  name = 'make', \n  out = 'out', \n  srcs = glob([\n    'apps/**/*', \n    'crypto/**/*', \n    'include/**/*', \n    'libtls-standalone/**/*', \n    'man/**/*', \n    'm4/**/*', \n    'patches/**/*', \n    'scripts/**/*', \n    'ssl/**/*', \n    'tests/**/*', \n    'tls/**/*', \n    '*', \n  ], exclude = glob([\n    'BUCK', \n    '.buckconfig.*', \n    '*.bzl', \n    '*.toml', \n  ])), \n  cmd = ' && '.join([\n    'cp -r $SRCDIR/. $TMP', \n    'cd $TMP', \n    './autogen.sh', \n    './configure --prefix=$OUT', # --with-openssldir=' + openssl_dir + ' ', \n    'mkdir -p $OUT', \n    'make -j4', \n    'make install', \n  ]), \n)\n\nprebuilt_cxx_library(\n  name = 'crypto', \n  header_namespace = '', \n  exported_headers = dict([\n    (x, extract('make', 'include/' + x)) for x in headers\n  ]), \n  static_lib = extract('make', 'lib/libcrypto.so'), \n  preferred_linkage = 'static', \n  visibility = [\n    'PUBLIC', \n  ], \n)\n\nprebuilt_cxx_library(\n  name = 'ssl', \n  header_namespace = '', \n  static_lib = extract('make', 'lib/libssl.so'), \n  preferred_linkage = 'static', \n  deps = [\n    ':crypto', \n  ], \n  visibility = [\n    'PUBLIC', \n  ], \n)\n\nprebuilt_cxx_library(\n  name = 'tls', \n  header_namespace = '', \n  static_lib = extract('make', 'lib/libtls.so'), \n  preferred_linkage = 'static', \n  deps = [\n    ':crypto', \n    ':ssl', \n  ], \n  visibility = [\n    'PUBLIC', \n  ], \n)\n","bazel":"","deps":[],"lock":[]}],"updated":"2018-12-10T16:17:21Z","updatedUpstream":"2021-01-13T04:12:33Z","contributors":[{"login":"mattsta","avatarUrl":"https://avatars1.githubusercontent.com/u/15594?u=49ad471aa5b212c6d0508e05ce4204381545a03e&v=4"},{"login":"nobu","avatarUrl":"https://avatars0.githubusercontent.com/u/16700?v=4"},{"login":"lumag","avatarUrl":"https://avatars2.githubusercontent.com/u/20323?u=129bfd6699c69c212a16e93f510f0f8b9de3336c&v=4"},{"login":"OJ","avatarUrl":"https://avatars0.githubusercontent.com/u/28896?u=0fc21e6a7d4b359010b68fcdd9cff6a33a78a469&v=4"},{"login":"vanderhoorn","avatarUrl":"https://avatars1.githubusercontent.com/u/32971?v=4"},{"login":"mdempsky","avatarUrl":"https://avatars1.githubusercontent.com/u/38349?u=339b084d7f31f84363ddad303837ed261613d10b&v=4"},{"login":"songdongsheng","avatarUrl":"https://avatars2.githubusercontent.com/u/68488?v=4"},{"login":"molind","avatarUrl":"https://avatars3.githubusercontent.com/u/102496?v=4"},{"login":"krono","avatarUrl":"https://avatars1.githubusercontent.com/u/119279?v=4"},{"login":"geoffbeier","avatarUrl":"https://avatars3.githubusercontent.com/u/133355?u=7ede573a0f009c2f4f00ed20323374adf65f4d8f&v=4"},{"login":"zhicheng","avatarUrl":"https://avatars2.githubusercontent.com/u/135029?v=4"},{"login":"trofi","avatarUrl":"https://avatars2.githubusercontent.com/u/226650?v=4"},{"login":"tedu","avatarUrl":"https://avatars0.githubusercontent.com/u/249541?v=4"},{"login":"dangerousHobo","avatarUrl":"https://avatars0.githubusercontent.com/u/318919?u=eda96de84db15416424b12a45849b52f419efa4d&v=4"},{"login":"bassosimone","avatarUrl":"https://avatars0.githubusercontent.com/u/337298?v=4"},{"login":"randombit","avatarUrl":"https://avatars0.githubusercontent.com/u/469092?v=4"},{"login":"tamersaadeh","avatarUrl":"https://avatars0.githubusercontent.com/u/529350?v=4"},{"login":"mia-0","avatarUrl":"https://avatars2.githubusercontent.com/u/652892?u=df6c78bcff370fba3367d5194bef3a5a82da1e3a&v=4"},{"login":"donny-dont","avatarUrl":"https://avatars0.githubusercontent.com/u/666297?v=4"},{"login":"dewyatt","avatarUrl":"https://avatars2.githubusercontent.com/u/711649?u=1190332a0a1bc14d073ca939ab0398816e7be569&v=4"},{"login":"SamuelMarks","avatarUrl":"https://avatars1.githubusercontent.com/u/807580?u=163debc9c32e7086f42128064501f6075a5c771e&v=4"},{"login":"mackyle","avatarUrl":"https://avatars3.githubusercontent.com/u/813346?u=dc7b4c2a994c62690162e2542a89670e64c2f9c7&v=4"},{"login":"gooichi","avatarUrl":"https://avatars3.githubusercontent.com/u/1201994?v=4"},{"login":"csimons","avatarUrl":"https://avatars1.githubusercontent.com/u/1210661?u=3f21b81188226477dc7efd972876b3cef3f4b42d&v=4"},{"login":"catatsuy","avatarUrl":"https://avatars3.githubusercontent.com/u/1249910?v=4"}],"fundingLinks":[],"contactLinks":[],"stars":980,"forks":214,"topics":[]}},"__N_SSG":true}